# Generated by Makefile. Do not edit.

2016-01-18  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.25.0   ==========

2016-01-18  Curtis Gedak <gedakc@gmail.com>

    Update copyright year

2016-01-16  Mario Blättermann <mario.blaettermann@gmail.com>

    Updated German doc translation

2016-01-14  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Updated Serbian translation

2016-01-13  Muhammet Kara <muhammetk@gmail.com>

    Updated Turkish translation

2016-01-13  Necdet Yücel <necdetyucel@gmail.com>

    Updated Turkish translation

2016-01-12  hanniedu <lafeber-dumoleyn2@zonnet.nl>

    Updated Dutch translation 0.25.0

2016-01-11  Sveinn í Felli <sv1@fellsnet.is>

    Updated Icelandic translation

2016-01-11  Rafael Fontenelle <rffontenelle@gmail.com>

    Updated Brazilian Portuguese translation

2016-01-08  Rafael Fontenelle <rffontenelle@gmail.com>

    Updated Brazilian Portuguese translation

2016-01-03  Curtis Gedak <gedakc@gmail.com>

    Revert tarball compression to gzip (#760099)
    
    Debian has deprecated the use of bzip2 for tarballs since dpkg-1.17.7,
    released 2014-04-21.   See:
    https://lintian.debian.org/tags/uses-deprecated-compression-for-data-tarball.html
    
    The choices going forward were to use gzip for maximum compatibility and
    speed, or to use xz for maximum compression.
    
    Since we strive for backwards compatibility, gzip was chosen.
    
    Bug 760099 - Revert tarball compression to gzip

2016-01-01  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add Linux SWRaid / mdadm note to the README file (#756829)
    
    Missed earlier when implementing the feature.
    
    Bug 756829 - SWRaid member detection enhancements

2015-12-30  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fix displaying partition names also as file system labels in some cases (#759972)
    
    GParted was also displaying the GPT partition names as the file system
    labels for some type of file systems.
    
    Create 2 empty partitions on a GPT partitioned disk and name them like
    this.  Then create a hfsplus file system with an empty label.  (Actually
    single space character but blkid treats it as empty.  Can't use GParted
    for this because when no label is specified mkfs.hfsplus sets the label
    to "untitled").
    
        # sgdisk -p /dev/sdb
        /dev/sdb: 4194304 sectors, 2.0 GiB
        Logical sector size: 512 bytes
        ...
        Number  Start (sector)    End (sector)  Size       Code  Name
           1            2048          526335   256.0 MiB   8300  empty partition
           2          526336         1050623   256.0 MiB   8300  hfsplus partition
        # mkfs.hfsplus -v " " /dev/sdb2
    
    Even though only the GPT partition names are set to "SOMETHING
    partition", GParted will display them as the file system labels too.
    Also in the Information dialog for the empty partition a file system
    UUID is displayed as well even though none exists.
    
    Blkid output looks like this:
    
        # blkid -V
        blkid from util-linux 2.27.1  (libblkid 2.27.0, 02-Nov-2015)
        # blkid | grep /dev/sdb
        /dev/sdb1: PARTLABEL="empty partition" PARTUUID="bf3d2085-65b7-4ae6-97da-5ff968ad7d2c"
        /dev/sdb2: UUID="2c893037-ff76-38f2-9158-2352ef5dc8de" TYPE="hfsplus" PARTLABEL="hfsplus partition" PARTUUID="457e9c2b-e4f2-4235-833b-28208592aaac"
    
    With blkid from util-linux >= 2.22, released September 2012, it is
    including additional PARTLABEL and PARTUUID name and value pairs for
    GPT partitions [1].  The FS_Info module regular expressions used to
    match the file system LABEL and UUID names also happen to match these
    new PARTLABEL and PARTUUID names too.  Hence this bug when GParted has
    to fall back to using the FS_Info module to read the file system label,
    when there is no working file system specific method.  Effects: exfat,
    f2fs, hfs, hfsplus, ufs, unknown.
    
    Fix by requiring all the regular expressions used to search the blkid
    output to also match the space character in front of the name.
    
    [1] Util-linux 2.22 Release Notes
        https://git.kernel.org/cgit/utils/util-linux/util-linux.git/tree/Documentation/releases/v2.22-ReleaseNotes?h=v2.22
    
    Bug 759972 - GParted displays partition names also as file system labels
                 with new blkid for some file systems

2015-12-30  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Updated Serbian translation

2015-12-15  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fix temporary path name of new partitions (#759488)
    
    In the UI new partitions were being named "unallocated" instead of
    "New Partition #1", etc.  Also deleting a new partition not yet created
    deletes all new partitions from the operation list because it matches
    by name only and they were all named "unallocated".  Broken by this
    recent commit:
    
        762cd1094aece03986226a39d1f6b4fecfd73ee9
        Return class member from Dialog_Partition_New::Get_New_Partition() (#757671)
    
    Prior to this commit in the create new partition dialog code did these
    relevant steps:
        Dialog_Partition_New::Get_New_Partition()
            Partition part_temp;
            ...
            part_temp.Set(..., "New Partition #%1", ...);
    
    Create local Partition object using default constructor which calls
    Partition::Reset() and clears the paths vector.  It then calls Set()
    which appends the new name making the vector:
        paths = ["New Partition #%1"]
    
    After the above commit the code did these steps:
        Dialog_Partition_New::Dialog_Partition_New(..., selected_partition, ...)
            set_data(..., selected_partition, ...);
                new_partition = selected_partition;
    
        Dialog_Partition_New::Get_New_Partition(...)
            new_partition.Set(..., "New Partition #%1", ...);
    
    New_partition is copied from the selected unallocated partition in which
    the new partition will be created.  So new_partition is now named
    "unallocated".  Then the Set() call appends the new name making the
    vector:
        paths = ["unallocated", "New Partition #%1"]
    
    As get_path() returns the first name in the paths vector the path name
    changed from "New Partition #%1" to "unallocated" causing this bug.
    
    Fix by resetting the new_partition object to clear all vestiges of it
    being a copy of the selected unallocated partition, Reset() call, before
    then calling Set().  This then appends the new name to an empty vector
    making it contain just the required new name:
        paths = ["New Partition #%1"]
    
    Bug 759488 - Pending create partitions are all getting named
                 "unallocated"

2013-03-02  Phillip Susi <psusi@ubuntu.com>

    Display progress for e2fsck (#467925)
    
    Parse output and update progress bar.
    
    Bug 467925 - gparted: add progress bar during operation

2013-03-02  Phillip Susi <psusi@ubuntu.com>

    Display progress for mke2fs (#467925)
    
    Bug 467925 - gparted: add progress bar during operation

2013-03-02  Phillip Susi <psusi@ubuntu.com>

    Display progress during resize (#467925)
    
    Capture and parse the progress reports of ntfsresize and resize2fs and
    update the dialog progress bar.
    
    Bug 467925 - gparted: add progress bar during operation

2015-11-19  Curtis Gedak <gedakc@gmail.com>

    Make about dialog website link non-clickable (#758131)
    
    To avoid security implications of invoking a web browser with root
    privileges, make the about dialog website link into a non-clickable
    label.
    
    The set_website_label() method has been available since gtkmm 2.6.
    https://developer.gnome.org/gtkmm/stable/classGtk_1_1AboutDialog.html#aa3d04115d068363be314414899703caa
    
    Bug 758131 - Don't run GUI as root (Was: [wayland] gparted fails to
                 start under wayland)

2015-10-14  Curtis Gedak <gedakc@gmail.com>

    Fix missing "old end" value in detail log of en_CA translation (#756878)
    
    The Canadian English translation po file incorrectly changed the
    following string with a parameter from %1 to %2:
    
       msgid "old end: %1"
       msgstr "old end: %2"
    
    The error resulted in a missing "old end:" numerical value in the
    gparted details log.
    
    This error was introduced back in 2011-09-06 with the following
    commit:
    
       06eeaafc8c73912a4df718c70af90f545fc3dd8c
       Updated Canadian English translation.
    
    Bug 756878 - GParted - Fix missing "old end" value in detail log of
                 en_CA translation

2015-11-05  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Return reference from Get_New_Partition() (#757671)
    
    Return newly constructed partition object by reference rather than by
    copy from the Copy, Resize/Move and New dialog classes.  This is another
    case of stopping copying partition objects in preparation for using
    polymorphic Partition objects.  In C++ polymorphism has to use pass by
    pointer and reference and not pass by value, copying, to avoid object
    slicing.
    
    The returned reference to the partition is only valid until the dialog
    object containing the new_partition member is destroyed.  This is okay
    because in all three cases the returned referenced partition is copied
    into a context with new lifetime expectations before the dialog object
    is destroyed.
    
    Case 1: GParted_Core::activate_paste()
        Referenced new_partition is copied in the OperationCopy constructor
        before the dialog object goes out of scope.
    
        Operation * operation = new OperationCopy( ...,
                                                   dialog.Get_New_Partition( ... ),
                                                   ... );
    
    Case 2: GParted_Core::activate_new()
        Referenced new_partition is copied in the OperationCreate
        constructor before the dialog object goes out of scope.
    
        Operation * operation = new OperationCreate( ...,
                                                     dialog.Get_New_Partition( ... ) );
    
    Case 3: GParted_Core::activate_resize()
        Temporary partition object is copied from the referenced
        new_partition before the dialog object goes out of scope.
    
        Partition part_temp = dialog.Get_New_Partition( ... );
    
    Bug 757671 - Rework Dialog_Partition_New::Get_New_Partition() a bit

2015-11-03  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Return class member from Dialog_Partition_New::Get_New_Partition() (#757671)
    
    Replace the use of local Partition variable with class member in
    preparation for Dialog_Partition_New::Get_New_Partition() being changed
    to return the new partition object by reference instead of by value.
        part_temp -> new_partition
    
    Bug 757671 - Rework Dialog_Partition_New::Get_New_Partition() a bit

2015-09-22  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Create unallocated space within new extended partition after aligning boundaries (#757671)
    
    When creating a new extended partition, the unallocated space within it
    was being created before adjusting the partition boundaries for
    alignment reasons.  This must be wrong.  Move creation of the
    unallocated space to after adjusting the partition boundaries for
    alignment reasons.  First introduced by this commit:
    
        a30f991ca57453f29e2c3ad85c05be8e436fe860
        Fix size reduced by 1 MiB when created after cylinder aligned partition
    
    Also added a big FIXME comment explaining how further adjustments are
    still made by snap_to_alignment() to the partition boundaries including
    a test case where this too late adjustment causes overlapping boundaries
    and apply to fail.
    
    Bug 757671 - Rework Dialog_Partition_New::Get_New_Partition() a bit

2015-11-02  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Rename parameter to selected_partition in Dialog_Partition_New methods (#757671)
    
    This is just to make the parameter name in the Dialog_Partition_New
    constructor and set_data() method match the name of the equivalent
    parameter in the Dialog_Partition_Copy and Dialog_Partition_Resize_Move
    classes.  (All three classes inherit from Dialog_Base_Partition and have
    similar interfaces).
    
    Bug 757671 - Rework Dialog_Partition_New::Get_New_Partition() a bit

2015-11-08  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Always use blkid file system detection before libparted (#757781)
    
    Blkid recognises many more file system types and RAID member signatures
    than libparted.  GParted already uses blkid detection instead of or
    before libparted for whole disk devices [1] and for ext4 detection [2]
    (only required with libparted < 1.9.0).  Also GParted could only use
    blkid detection on non-512 byte sector devices [3] before libparted was
    fixed in version 3.2 [4].  Blkid was documented as a mandatory
    requirement from GParted 0.24.0 [5].
    
    Util-linux package, of which blkid command is a part, is a core piece of
    Linux software which is very actively maintained and used by lots of
    other packages.  Parted package is much less active and has added
    detection of fewer file systems and doesn't recognise any RAID members.
    
    In cases of multiple signatures within a partition blkid and libparted
    can report different results leading to confusion and issues for
    GParted.  This was the primary reason for bug 688882 "Improve clearing
    of file system signatures" and a number of other changes to GParted.
    Also as the mount command links with libblkid it uses it's detection
    when telling the kernel the type of a file system to be mounted.
    
    There aren't any current issues with GParted's file system detection but
    given the above argument, switch to using blkid before libparted for
    file system detection.  Only falling back to libparted when blkid
    doesn't report a result, notably for extended partitions.  Order of
    information sources for detection is now:
     1) mdadm (for SWRaid members)
     2) blkid
     3) libparted
     4) GParted internal code
    
    References:
    
    [1] f8faee637787329c07771e495c9b26abc9ac1603
        Avoid whole disk FAT being detected as MSDOS partition table (#743181)
    
    [2] 533eb1bc039455b734b9c1509e8fb588bdabc37e
        Added support for ext4 file systems
    
    [3] 9e5e9f5627e0fb1b547f07cdaaac773c7b6035b9
        Enhance file system detection to use FS_Info method - blkid
    
    [4] http://git.savannah.gnu.org/cgit/parted.git/commit/?id=80678bdd957cf49a9ccfc8b88ba3fb8b4c63fc12
        Fix filesystem detection on non 512 byte sectors
    
    [5] 749a2495716a82a7287fad943109b6cfb927245c
        Document blkid command as a mandatory requirement (#753436)
    
    Bug 757781 - Always use blkid file system detection before libparted

2015-10-09  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Correct inclusion of Operation* headers in GParted_Core.cc
    
    The GParted_Core code only interacts with derived Operation* objects
    through the Operation base class interface and in one case the
    OperationCopy class.  Therefore include Operation.h and OperationCopy.h
    headers and no others.

2015-10-31  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add clearing of ZFS labels
    
    ZFS labels were not cleared by GParted when clearing old file system
    signatures.
    
        # wget https://git.kernel.org/cgit/utils/util-linux/util-linux.git/plain/tests/ts/blkid/images-fs/zfs.img.bz2
        # bzip2 -dc zfs.img.bz2 > /dev/sdb1
        [In GParted format to cleared /dev/sdb1]
        # blkid /dev/sdb1
        /dev/sdb1: LABEL="tank" UUID="1782036546311300980" UUID_SUB="13179280127379850514" TYPE="zfs_member"
    
    Update to also zero all 4 ZFS labels.
    
    NOTE:
    GParted now writes a little over 1 MiB when clearing old file system
    signatures.  As this is performed in the main thread the UI is not able
    to respond during this action.  Testing this on a range of USB flash
    keys and hard drives found the slowest normal time to write this was
    0.25 seconds, with an occasional outlier up to 2.8 seconds from a USB
    flash key.  This is considered acceptable.

2015-10-31  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Stop over rounding up of signature zeroing lengths (#756829)
    
    Following the previous commit "Add erasing of SWRaid metadata 0.90 and
    1.0 super blocks (#756829)" signature zeroing specified to write 4 KiB
    of zeros at position end - 64 KiB, aligned to 64 KiB.  Example operation
    details from formatting a 1 GiB partition to cleared:
    
        Format /dev/sdb8 as cleared
        + calibrate /dev/sdb8
        + clear old file system signatures in /dev/sdb8
          + write 68.00 KiB of zeros as byte offset 0
          + wite 4.00 KiB of zeros at byte offset 67108864
          + wite 64.00 KiB of zeros at byte offset 1073676288
          + write 8.00 KiB of zeros at byte offset 1073733632
          + flush operating system cache of /dev/sdb
    
    However it actually wrote 64 KiB.  This is because the rounding /
    alignment was also applied to the zeroing length.  Before this commit
    rounding / alignment was always less than or equal to the length so this
    wasn't seen before.  Instead just apply device sector size rounding up
    to the length.
    
    Bug 756829 - SWRaid member detection enhancements

2015-10-30  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add clearing of SWRaid metadata 0.90 and 1.0 super blocks (#756829)
    
    The super blocks for Linux Software RAID arrays using metadata types
    0.90 and 1.0 are stored at the end of the partition and not currently
    cleared by GParted.
    
    Create a SWRaid array, stop it and format it to cleared using GParted.
    The signature remains.
    
        # mdadm --create /dev/md1 --level=linear --raid-devices=1 --force --metadata=1.0 /dev/sdb1
        # mdadm --stop /dev/md1
        [In GParted format to cleared /dev/sdb1]
        # blkid /dev/sdb1
        /dev/sdb1: UUID="8ac947a7-063f-2266-5f2a-e5d178198139" UUID_SUB="49bd51d4-4c54-fb16-a45e-bd795f783f59" LABEL="rockover:1" TYPE="linux_raid_member"
    
    As fixed in other cases before [1][2] it is necessary to clear all
    signatures before formatting as a new file system to prevent recognition
    issues.  For example now format the partition as a FAT32 file system.
    Now there are two signatures and libparted reports one type and blkid
    reports another.
    
        # mkdosfs -F 32 /dev/sdb1
        # blkid /dev/sdb1
        /dev/sdb1: UUID="8ac947a7-063f-2266-5f2a-e5d178198139" UUID_SUB="49bd51d4-4c54-fb16-a45e-bd795f783f59" LABEL="rockover:1" TYPE="linux_raid_member"
        # parted /dev/sdb print
        Model: ATA SAMSUNG SSD UM41 (scsi)
        Disk /dev/sdb: 8012MB
        Sector size (logical/physical): 512B/512B
        Partition Table: msdos
    
        Number  Start   End     Size    Type      File system  Flags
         1      1049kB  538MB   537MB   primary   fat32
    
    (Deliberately avoided btrfs, ext2/3/4 and xfs as recent versions of
    their mkfs tools clear other signatures first for the same reason).
    
    [1] Bug 688882 - Improve clearing of file system signatures
    [2] 3c75f3f5b103bc158b0f70ea63459aa362b0bab8
        Use wipefs to clear old signatures before creating new file systems (#688882)
    
    Update erase_filesystem_signatures() to also zero the necessary sectors
    to clear SWRaid metadata 0.90 and 1.0 super blocks.
    
    Bug 756829 - SWRaid member detection enhancements

2015-10-24  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Handle unusual case of missing mdadm but SWRaid arrays active (#756829)
    
    If the installation is unusual / broken such that the mdadm command is
    not found but there are active SWRaid arrays, provide a fallback with
    some of the information.  In this case populate the cache with details
    only available from /proc/mdstat.  Information will be limited to active
    arrays only and their members.  No UUIDs or labels.  There will be no
    information about inactive arrays and GParted will use it's normal
    libparted and blkid identification for those devices and partitions.
    
    As mdadm has gained the capability to manage Fake/BIOS RAID arrays they
    also appear in /proc/mdstat when mdadm is used to start them.  Enhance
    the parser of /proc/mdstat to only extract information for SWRaid arrays
    with recognised metadata versions.
    
    Bug 756829 - SWRaid member detection enhancements

2015-10-23  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Ensure SWRaid_Info cache is loaded at least once (#756829)
    
    Automatically load the cache of SWRaid information for the first time if
    any of the querying methods are called before the first explicit
    load_cache() call.  Means we can't accidentally use the class and
    incorrectly find no SWRaid members when they do exist.
    
    Bug 756829 - SWRaid member detection enhancements

2015-10-22  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Populate member mount point with SWRaid array device (#756829)
    
    Busy file systems are accessed via a mount point, LVM Physical Volumes
    are activated via the Volume Group name and busy SWRaid members are
    accessed via the array device, /dev entry.  Therefore choose to show the
    array device in the mount point field for busy SWRaid members.
    
    The kernel device name for an SWRaid array (without leading "/dev/") is
    the same as used in /proc/mdstat and /proc/partitions.  Therefore the
    array device (with leading "/dev/") displayed in GParted will match
    between the mount point for busy SWRaid members and the array itself as
    used in the device combo box.
    
        # cat /proc/mdstat
        Personalities : [raid1]
        md1 : active raid1 sda1[2] sdb1[3]
              524224 blocks super 1.0 [2/2] [UU]
        ...
        # cat /proc/partitions
        major minor  #blocks  name
    
           8        0   33554432 sda
           8        1     524288 sda1
        ...
           8       16   33554432 sdb
           8       17     524288 sdb1
        ...
           9        1     524224 md1
        ...
    
    Bug 756829 - SWRaid member detection enhancements

2015-10-23  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Use UUID and label of SWRaid arrays too (#756829)
    
    In cases where blkid wrongly reports a file system instead of an SWRaid
    member (sometimes confused by metadata 0.90/1.0 mirror array or old
    version not recognising SWRaid members), the UUID and label are
    obviously wrong too.  Therefore have to use the UUID and label returned
    by the mdadm query command and never anything reported by blkid or any
    file system specific command.
    
    Example of blkid reporting the wrong type, UUID and label for /dev/sda1
    and the correct values for /dev/sdb1:
    
        # blkid | egrep 'sd[ab]1'
        /dev/sda1: UUID="10ab5f7d-7d8a-4171-8b6a-5e973b402501" TYPE="ext4" LABEL="chimney-boot"
        /dev/sdb1: UUID="15224a42-c25b-bcd9-15db-60004e5fe53a" UUID_SUB="0a095e45-9360-1b17-0ad1-1fe369e22b98" LABEL="chimney:1" TYPE="linux_raid_member"
    
        # mdadm -E -s -v
        ARRAY /dev/md/1  level=raid1 metadata=1.0 num-devices=2 UUID=15224a42:c25bbcd9:15db6000:4e5fe53a name=chimney:1
           devices=/dev/sda1,/dev/sdb1
        ...
        ARRAY /dev/md127 level=raid1 num-devices=2 UUID=8dc7483c:d74ee0a8:b6a8dc3c:a57e43f8
           devices=/dev/sdb6,/dev/sda6
        ...
    
    NOTES:
    * In mdadm terminology the label is called the array name, hence name=
      parameter for array md/1 in the above output.
    * Metadata 0.90 arrays don't support naming, hence the missing name=
      parameter for array md127 in the above output.
    
    Bug 756829 - SWRaid member detection enhancements

2015-10-21  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Move busy detection of SWRaid members into the new module (#756829)
    
    Add active attribute to the cache of SWRaid members.  Move parsing of
    /proc/mdstat to discover busy SWRaid members into the cache loading
    code.  New parsing code is a little different because it is finding all
    members of active arrays rather than determining if a specific member is
    active.
    
    Bug 756829 - SWRaid member detection enhancements

2015-10-20  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Detect Linux SWRaid members by querying mdadm (#756829)
    
    Detection of Linux SWRaid members currently fails in a number of cases:
    
    1)  Arrays which use metadata type 0.90 or 1.0 store the super block at
        the end of the partition.  So file system signatures in at least
        linear and mirrored arrays occur at the same offsets in the
        underlying partitions.  As libparted only recognises file systems
        this is what is detected, rather than an SWRaid member.
    
        # mdadm -E -s -v
        ARRAY /dev/md/1  level=raid1 metadata=1.0 num-devices=2 UUID=15224a42:c25bbcd9:15db6000:4e5fe53a name=chimney:1
           devices=/dev/sda1,/dev/sdb1
        ...
        # wipefs /dev/sda1
        offset               type
        ----------------------------------------------------------------
        0x438                ext4   [filesystem]
                             LABEL: chimney-boot
                             UUID:  10ab5f7d-7d8a-4171-8b6a-5e973b402501
    
        0x1fffe000           linux_raid_member   [raid]
                             LABEL: chimney:1
                             UUID:  15224a42-c25b-bcd9-15db-60004e5fe53a
    
        # parted /dev/sda print
        Model: ATA VBOX HARDDISK (scsi)
        Disk /dev/sda: 34.4GB
        Sector size (logical/physical): 512B/512B
        Partition Table: msdos
    
        Number  Start   End     Size    Type      File system  Flags
         1      1049kB  538MB   537MB   primary   ext4         boot, raid
        ...
    
    2)  Again with metadata type 0.90 or 1.0 arrays blkid may report the
        contained file system instead of an SWRaid member.  Have a single
        example of this configuration with a mirrored array containing the
        /boot file system.  Blkid reports one member as ext4 and the other as
        SWRaid!
    
        # blkid | egrep 'sd[ab]1'
        /dev/sda1: UUID="10ab5f7d-7d8a-4171-8b6a-5e973b402501" TYPE="ext4" LABEL="chimney-boot"
        /dev/sdb1: UUID="15224a42-c25b-bcd9-15db-60004e5fe53a" UUID_SUB="0a095e45-9360-1b17-0ad1-1fe369e22b98" LABEL="chimney:1" TYPE="linux_raid_member"
    
        Bypassing the blkid cache gets the correct result.
    
        # blkid -c /dev/null /dev/sda1
        /dev/sda1: UUID="15224a42-c25b-bcd9-15db-60004e5fe53a" UUID_SUB="d0460f90-d11a-e80a-ee1c-3d104dae7e5d" LABEL="chimney:1" TYPE="linux_raid_member"
    
        However this can't be used because if a user has a floppy configured
        in the BIOS but no floppy attached, GParted will wait for minutes as
        the kernel tries to access non-existent hardware on behalf of the
        blkid query.  See commit:
            18f863151c82934fe0a980853cc3deb1e439bec2
            Fix long scan problem when BIOS floppy setting incorrect
    
    3)  Old versions of blkid don't recognise SWRaid members at all so always
        report the file system when found.  Occurs with blkid v1.0 on
        RedHat / CentOS 5.
    
    The only way I can see how to fix all these cases is to use the mdadm
    command to query the configured arrays.  Then use this information for
    first choice when detecting partition content, making the order: SWRaid
    members, libparted, blkid and internal.
    
    GParted shell wrapper already creates temporary blank udev rules to
    prevent Linux Software RAID arrays being automatically started when
    GParted refreshes its device information[1].  However an administrator
    could manually stop or start arrays or change their configuration
    between refreshes so GParted must load this information every refresh.
    On my desktop with 4 internal hard drives and 3 testing Linux Software
    RAID arrays, running mdadm adds between 0.20 and 0.30 seconds to the
    device refresh time.
    
    [1] a255abf3432ad106fac9c766f0816ada20be8e42
        Prevent GParted starting stopped Linux Software RAID arrays (#709640)
    
    Bug 756829 - SWRaid member detection enhancements

2015-10-27  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2015-10-27  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.24.0   ==========

2015-10-26  Wolfgang Stöggl <c72578@yahoo.de>

    Updated German translation

2015-10-22  Daniel Korostil <ted.korostiled@gmail.com>

    Updated Ukrainian translation

2015-10-21  Anders Jonsson <anders.jonsson@norsjovallen.se>

    Updated Swedish translation

2015-10-21  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2015-10-21  Alexandre Franke <alexandre.franke@gmail.com>

    Updated French translation

2015-10-21  Jiri Grönroos <jiri.gronroos@iki.fi>

    Updated Finnish translation

2015-10-20  Claude Paroz <claude@2xlibre.net>

    Updated French help translation

2015-10-20  Milo Casagrande <milo@ubuntu.com>

    Updated Italian translation

2015-10-20  Daniel Șerbănescu <daniel@serbanescu.dk>

    Updated Romanian Translation

2015-10-20  Rafael Fontenelle <rffontenelle@gmail.com>

    Updated Brazilian Portuguese translation

2015-10-14  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Check usability of named device following a non-existent / invalid one (#756434)
    
    When multiple devices are named on the command line and (after sorting
    and removing duplicates) the device following a non-existent or invalid
    one is not checked for usability [1].  In most situations this isn't
    noticed as the device gets skipped at the "Searching ...  partitions"
    step instead.  However as seen in bug 755495 and commit [2]
    checking usability matters.
    
    For example (on CentOS 6.5) a large sector disk device can be edited
    when it follows a non-existent or invalid device named on the command
    line:
    
        # modprobe scsi_debug dev_size_mb=128 sector_size=4096
        # fgrep scsi_debug /sys/block/*/device/model
        /sys/block/sdd/device/model:scsi_debug
    
        # ./gpartedbin /dev/does-not-exist /dev/sdd
        ======================
        libparted : 2.1
        ======================
        Could not stat device /dev/does-not-exist - No such file or directory.
        Device /dev/sdd has a logical sector size of 4096.  Not all parts of GNU Parted support this at the moment, and the working code is HIGHLY EXPERIMENTAL.
    
        /dev/sdd: unrecognised disk label
    
    When erasing a device don't skip confirming the following device is
    usable.
    
    [1] Usable device as implemented by useable_device()
        Must not have a large sector size when GParted is built with an old
        version of libparted which doesn't support large sector sizes and
        must be able to read the first sector.
    
    [2] 362b2db331b4c31a978bb67232fa7f3ce9ab38c3
        Check disks named on the command line are safe to use too (#755495)
    
    Bug 756434 - GParted dumps core when passing non-existent or invalid
                 device on the command line

2015-10-13  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove non-existent or invalid devices from those named (#756434)
    
    A non-existent or invalid disk device named on the command line caused
    two libparted dialogs to be displayed repeatedly on every refresh.  This
    was because the device was only removed from the 'device_paths' vector
    when it wasn't usable [1]; not when it didn't exist or was invalid, when
    the libparted ped_device_get() call failed.  Fix this.
    
    [1] Usable device as implemented by useable_device()
        Must not have a large sector size when GParted is built with an old
        version of libparted which doesn't support large sector sizes and
        must be able to read the first sector.
    
    Bug 756434 - GParted dumps core when passing non-existent or invalid
                 device on the command line

2015-10-12  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Prevent core dump with non-existent or invalid command line named device (#756434)
    
    Naming a non-existent or invalid disk device on the command line causes
    GParted to dump core.  Non-existent device looks like this:
    
        # ./gpartedbin /dev/does-not-exist
        ======================
        libparted : 2.4
        ======================
        Could not stat device /dev/does-not-exist - No such file or directory.
        Could not stat device /dev/does-not-exist - No such file or directory.
        Backtrace has 10 calls on stack:
          10: /lib64/libparted.so.0(ped_assert+0x31) [0x7fcfd10b3e61]
          9: /lib64/libparted.so.0(+0x3fdfc12a0c) [0x7fcfd10b4a0c]
          8: /home/mike/bin/gpartedbin-0.23.0-master-63-g23b5ba4() [0x455028]
          7: /home/mike/bin/gpartedbin-0.23.0-master-63-g23b5ba4() [0x455090]
          6: /home/mike/bin/gpartedbin-0.23.0-master-63-g23b5ba4() [0x4550d5]
          5: /home/mike/bin/gpartedbin-0.23.0-master-63-g23b5ba4() [0x46723f]
          4: /usr/lib64/libglibmm-2.4.so.1() [0x3ff5834a8d]
          3: /lib64/libglib-2.0.so.0() [0x3fe086a374]
          2: /lib64/libpthread.so.0() [0x3fdf407a51]
          1: /lib64/libc.so.6(clone+0x6d) [0x3fdf0e893d]
        Assertion (dev != NULL) at device.c:227 in function ped_device_open() failed.
        Aborted (core dumped)
    
    And with an invalid device the output looks like this:
    
        # ./gpartedbin /dev/zero
        ======================
        libparted : 2.4
        ======================
        The device /dev/zero is so small that it cannot possibly store a file system or partition table.  Perhaps you selected the wrong device?
        Error fsyncing/closing /dev/zero: Invalid argument
        The device /dev/zero is so small that it cannot possibly store a file system or partition table.  Perhaps you selected the wrong device?
        Error fsyncing/closing /dev/zero: Invalid argument
        Backtrace has 10 calls on stack:
        ...
        [Same as above]
    
    Bisected the cause to this commit from 2015-03-09 in GParted 0.22.0.  It
    claimed to make no functional change.  That turned out not to be true.
        51ac4d56489653854cd22787238a14bfa66a6ad4
        Split get_device_and_disk() into two (#743181)
    
    Fix by simply adding the missed if condition in get_device().
    
    Bug 756434 - GParted dumps core when passing non-existent or invalid
                 device on the command line

2015-10-06  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Ensure DMRaid /dev entries are created before using named devices
    
    For probed DMRaid devices (when not using libparted DMRaid support)
    GParted waits up to 1 second for udev to have processed all events and
    created the /dev entries after starting each DMRaid array.  This was
    added by this commit from 2009-09-02:
        e7352a5000ddfc7666861e3e8ef56b88510b449d
        Ensure /dev file system device entries created before adding device
    
    Do the same for devices named on the command line too.

2015-10-06  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Sort command line named disk devices and remove duplicates (#755495)
    
    Order named disk devices so that they appear in the combo box in the
    same order which they would when probed.  Also remove duplicates so that
    the same disk devices aren't scanned multiple times and appear
    duplicated in the UI.
    
    Try this; it used to take ages to load and looked weird:
    
        # gparted /dev/sda /dev/sdb /dev/sda /dev/sdb /dev/sda /dev/sdb
    
    Bug 755495 - GParted allowing partitioning of large sector devices
                 specified on the command line, when built with old
                 libparted which doesn't support it

2015-10-06  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Check disks named on the command line are safe to use too (#755495)
    
    When probing for disk devices GParted ensures that libparted is capable
    of handling the sector size safely and that it is a real disk before it
    is shown in the UI.  However when disk devices are named on the command
    line none of these checks are performed.
    
    Libparted versions before v2.2 can only safely handle a sector size of
    512 bytes.  Therefore on old distributions with libparted < v2.2 GParted
    allows unsafe editing of disk devices with larger sector sizes when they
    are named on the command line.  Known to affect these distributions:
        RedHat/CentOS 5   (parted 1.8.1)
        RedHat/CentOS 6   (parted 2.1)
    
    For example (on CentOS 6.5) large sector disk device is ignored when
    probing:
    
        # modprobe scsi_debug dev_size_mb=128 sector_size=4096
        # fgrep scsi_debug /sys/block/*/device/model
        /sys/block/sdd/device/model:scsi_debug
    
        # gparted
        ======================
        libparted : 2.1
        ======================
        Device /dev/sdd has a logical sector size of 4096.  Not all parts of
        GNU Parted support this at the moment, and the working code is
        HIGHLY EXPERIMENTAL.
    
        Ignoring device /dev/sdd with logical sector size of 4096 bytes.
        GParted requires libparted version 2.2 or higher to support devices
        with sector sizes larger than 512 bytes.
    
    However when the device is named it is not ignored and can be edited:
    
        # gparted /dev/sdd
        ======================
        libparted : 2.1
        ======================
        Device /dev/sdd has a logical sector size of 4096.  Not all parts of
        GNU Parted support this at the moment, and the working code is
        HIGHLY EXPERIMENTAL.
    
        /dev/sdd: unrecognised disk label
    
    Apply the same validity checks to disk devices named on the command line
    as to probed ones.
    
    Bug 755495 - GParted allowing partitioning of large sector devices
                 specified on the command line, when built with old
                 libparted which doesn't support it

2015-10-06  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Create new method GParted_Core::useable_device() (#755495)
    
    Abstract code checking sector size and ensuring the first sector of a
    candidate disk device can be read into new
    GParted_Core::useable_device() method.
    
    Bug 755495 - GParted allowing partitioning of large sector devices
                 specified on the command line, when built with old
                 libparted which doesn't support it

2015-10-07  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Prevent 'index' may be used uninitialised warning in OperationDelete (#755214)
    
    I missed another case of 'index' may be used uninitialised warning in
    OperationDelete::apply_to_visual().  Indent a code block within an if
    clause so that the compiler can confirm that the 'index' local variable
    isn't used uninitialised.  Prevent this compiler warning:
        OperationDelete.cc: In member function 'virtual void GParted::OperationDelete::apply_to_visual(std::vector<GParted::Partition, std::allocator<GParted::Partition> >&)':
        OperationDelete.cc:34: warning: 'index' may be used uninitialized in this function
    
    Bug 755214 - Refactor operation merging

2015-10-07  Jiri Grönroos <jiri.gronroos@iki.fi>

    Updated Finnish translation

2015-10-04  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Stop including removed <sigc++/class_slot.h> header (#756035)
    
    Libsigc++2 version 2.5.2 and later removed header file
    <sigc++/class_slot.h>.  Quoting the NEWS file for version 2.5.2:
    
        Remove useless headers: sigc++/class_slot.h ...
    
    Libsigc++2 version 2.5.2 NEWS file:
    https://git.gnome.org/browse/libsigc++2/tree/NEWS?id=2.5.2
    
    Bug 756035 - GParted does not compile with newer gtkmm libraries in
                 Fedora 23

2015-10-04  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Enable C++11 compilation when using glibmm 2.45.40 and later (#756035)
    
    Glibmm 2.45.40 and later uses features in the ISO C++ 2011 standard.
    The NEWS file [1] says:
    
        Changes in 2.46 compared to 2.44:
    
        General:
        * Use, and require C++11, using features such as move operations,
          noexcept auto, = delete, nulltpr, override.
          (Murray Cumming, Kjell Ahlstedt)
    
    Also found this by Murray Cumming [2]:
    
        glibmm 2.45.40 requires C++11, both for its own build and by any
        apps that use it.  gtkmm also now requires C++11.
    
        I think you are seeing a symptom of building the application without
        C++11 support.  For instance, using CXXFLAGS="--std=c++11", though
        you'd be better of using an m4 macro such as
        AX_CXX_COMPILE_STDCXX_11().
    
    Without enabling C++11 compiler features, compilation of GParted with
    the latest glibmm library fails with errors such as these:
    
        /usr/include/glibmm-2.4/glibmm/ustring.h:267:14: error: expected ';' at end of member declaration
           ~ustring() noexcept;
                    ^
        /usr/include/glibmm-2.4/glibmm/ustring.h:267:14: error: 'noexcept' does not name a type
           ~ustring() noexcept;
                      ^
        /usr/include/glibmm-2.4/glibmm/ustring.h:267:14: note: C++11 'noexcept' only available with -std=c++11 or -std=gnu++11
    
    [1] glibmm NEWS file
        https://git.gnome.org/browse/glibmm/tree/NEWS?id=934e8290ce913b12e251ea617d0fc8ac53c385c6
    
    [2] https://bugs.launchpad.net/ubuntu/+source/glibmm2.4/+bug/1478367
    
    Bug 756035 - GParted does not compile with newer gtkmm libraries in
                 Fedora 23

2015-10-04  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Include local copy of Autoconf Archive macro AX_CXX_COMPILE_STDCXX_11 (#756035)
    
    Older distributions don't include Autoconf Archive at all and newer
    distributions don't always include it.  Therefore we have to have a
    local copy of the AX_CXX_COMPILE_STDCXX_11 macro with GParted.
    
    Bug 756035 - GParted does not compile with newer gtkmm libraries in
                 Fedora 23

2015-10-05  Seong-ho Cho <shcho@gnome.org>

    Updated Korean translation

2015-10-04  Curtis Gedak <gedakc@gmail.com>

    Provide credit for patch by Albert Young (#755608)
    
    Add recognition for work done by Albert Young to prevent a hang in
    GParted labeling FAT16/32 if label contained illegal characters.
    
    Bug 755608 - Labeling fat16/fat32 partitions hangs if certain
                 characters included in label

2015-09-29  Albert Young <youngac3@gmail.com>

    Remove prohibited characters from FAT16/32 labels (#755608)
    
    GParted waits forever when attempting to set a FAT16/32 file system
    label which contains prohibited characters [1][2].  This is because
    mlabel asks a question and is waiting for input.  Force cancelling the
    operation doesn't work either as GParted sends signal 2 (interrupt i.e.
    [Ctrl-C]) but mtools commands specifically ignores this and a number of
    other signals.  Have to kill mlabel with signal 9 (kill) to regain
    control of GParted.
    
    Mlabel command with prohibited characters in the label:
    
        # export MTOOLS_SKIP_CHECK=1
        # mlabel ::"MYLABEL/   " -i /dev/sdb10
        Long file name "MYLABEL/   " contains illegal character(s).
        a)utorename A)utorename-all r)ename R)ename-all
        s)kip S)kip-all q)uit (aArRsSq):
    
    Remove prohibited characters from FAT16/32 file systems labels when
    creating and labelling them.  Also upper case the label to meet label
    requirements [1][2].  This silently corrects the label and the actual
    label applied will be displayed when GParted refreshes after applying
    the operation.
    
    [1] Microsoft TechNet: Label
        https://technet.microsoft.com/en-us/library/bb490925.aspx
    
    [2] Replicated in Wikikedia: label (command)
        https://en.wikipedia.org/wiki/Label_%28command%29
    
    Bug 755608 - Labeling fat16/fat32 partitions hangs if certain characters
                 included in label

2015-09-27  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Replace Operation class members index and index_extended with local variables (#755214)
    
    These member variables store no Operation class information and were
    being used as local variables.  Replace with local variables.
    
    Also indent a code block within an if clause so that the compiler can
    confirm that the new local variable isn't used uninitialised.  Prevents
    this compiler warning:
        OperationResizeMove.cc: In member function 'void GParted::OperationResizeMove::apply_normal_to_visual(std::vector<GParted::Partition, std::allocator<GParted::Partition> >&)':
        OperationResizeMove.cc:125: warning: 'index' may be used uninitialized in this function
    
    Bug 755214 - Refactor operation merging

2015-09-27  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove unused index parameter from Add_Operation() (#755214)
    
    Since this commit earlier in the patchset the second optional parameter
    of method Win_GParted::Add_Operation() is no longer used.  Remove it.
        Replace open coded merge of resize/move into create operation
        (#755214)
    
    Bug 755214 - Refactor operation merging

2015-09-27  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fix visually re-applying copy new operation in create-copy-grow-first sequence (#755214)
    
    This is the equivalent case fixed in the earlier commit, but now using
    copy/paste to create the second new partition rather than plain new.
        Fix visually re-apply create operation in create-create-grow-first
        sequence (#755214)
    
    Start with an existing partition as a copy source.  Then this sequence
    of operations will cause the copy partition to disappear from the disk
    graphic:
    1) create new #1,
    2) copy existing / paste into unallocated leaving space preceding,
    3) resize new #1 larger.
    
    There are two different types of copy operation.  The first is copy into
    unallocated space creating a new partition which needs treating the same
    as create new operation.  The second is copy into existing partition
    which needs treating the same as the other operations which don't change
    the boundaries of the partition.  Fix apply_to_visual() accordingly.
    
    Bug 755214 - Refactor operation merging

2015-09-27  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Move code visually re-applying create operation into parent class (#755214)
    
    Move the code from OperationCreate::apply_to_visual() into new method
    Operation::insert_new() in the parent class.  This is in preparation for
    the following commit.
    
    Bug 755214 - Refactor operation merging

2015-09-26  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Share duplicate code substituting partitions in multiple operations (#755214)
    
    The apply_to_visual() method for the change UUID, format, label file
    system and name partition operations duplicated identical code.  This
    code was just substituting the partition in the disk graphic vector with
    the new partition recorded in the operation, as none of these operations
    change the partition boundaries.  Move this duplicate code into the
    parent class in new method Operation::substitute_new().
    
    Bug 755214 - Refactor operation merging

2015-09-26  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fix visually re-applying create operation in create-create-grow-first sequence (#755214)
    
    After previous commit "Replace open coded merge of resize/move into
    create operation (#755214)" the second created partition would disappear
    from the disk graphic in the following sequence: create new #1, create
    new #2 leaving space preceding, resize #1 larger.  The create new #2
    operation still existed and was shown in the operation list.  It was
    just that it disappeared from the disk graphic.
    
    Remember that when each operation is created it records the partition,
    or the unallocated space, to which the operation is applied at the time
    the operation is created in the partition_original member variable.  In
    the above sequence the resize #1 larger operation was merged back into
    the create new #1 operation.  When visually re-applying the create
    new #1 operation to the disk graphic, it left a smaller unallocated
    partition following it.  This was smaller than the unallocated partition
    recorded in the create new #2 operation, hence it failed to visually
    re-apply to the disk graphic.
    
    The insight to fix this is that it doesn't matter what size the
    unallocated space was when the create new operation was constructed.  It
    only matters that the new partition to be created fits in the available
    unallocated space currently in the disk graphic.
    
    Bug 755214 - Refactor operation merging

2015-09-19  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add comment summarising current operation merging rules (#755214)
    
    This information is already documented in the existing comments
    associated with the calls to merge_operations() and assignments to the
    mergetype variables.  The table just summaries the rules together in one
    place.
    
    Bug 755214 - Refactor operation merging

2015-09-16  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Replace open coded merge of resize/move into create operation (#755214)
    
    For the case of resizing/moving a new, not yet created partition,
    activate_resize() open coded the merge operation.  Again this code has
    existed in GParted since before version 0.0.5 and the current code
    history in Git.
    
    Replace the necessary code so that an explicit merge_operations() call
    is used instead; along with the other case of resizing/moving an
    existing partition.
    
    NOTES:
    
    This commit changes the merge direction.  The old coded merged forward
    by removing the old create operation and adding a new create operation
    with the new size.  This was bad because with multiple pending create
    operations, each merged resize operation reordered those create
    operations.  Then when the operations were applied the partitions were
    created and therefore numbered in a different order to that shown in
    disk graphic.
    
    The new code merges backwards by updating the initial create operation
    with the new size.  This maintains the create operation order so that
    when applied the partitions are numbered in the same order as shown in
    the disk graphic.
    
    Bug 755214 - Refactor operation merging

2015-09-15  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Replace open coded merge of format into create operation (#755214)
    
    For the case of formatting a new, not yet created partition,
    activate_format() open coded the merge operation.  This code has existed
    in GParted since before version 0.0.5 and the current code history in
    Git.
    
    Replace the necessary code so that an explicit merge_operations() call
    is used instead; along with the other case of formatting an existing
    partition.
    
    Bug 755214 - Refactor operation merging

2015-09-15  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Refactor merging rules into new merge_operations() (#755214)
    
    Creation of the various operations involved various implicit rules about
    how the different types of operations were merged in different cases.
    This was open coded in each ::activate_*() method.  Abstract this into
    new merge_operations() method and make the merging rules explicitly
    specified.
    
    NOTE:
    The removal of operation type checking in the MERGE_LAST_WITH_ANY cases
    is not a problem because all the Operation*::merge_operations() methods
    ensure the operation types match as part of the merge attempt.
    
    Bug 755214 - Refactor operation merging

2015-09-15  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Rename function to merge_two_operations() and update validation (#755214)
    
    Rename Win_GParted::Merge_Operations() to merge_two_operations().  To
    reflect what it does and in preparation for further refactoring of the
    code.
    
    Be more strict on the validation of the first and second indexes.  The
    first operation must also be before the second operation in the
    operation[] vector.  (It is actually a programming bug if first and
    second fail validation.  However so far g_assert() is only being used to
    validate pointers, which if wrong would likely cause the program to
    eventually crash when dereferenced later.  In this case a bug would
    merely cause the incorrectly specified pair of operations to not be
    merged).
    
    Move validate_display_partition_ptr() declaration in the header file to
    be in the same ordering as it's definition in the source file.
    
    Bug 755214 - Refactor operation merging

2015-09-12  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Encapsulate operation merging inside the Operation* classes (#755214)
    
    Win_GParted::Merge_Operations() method was modifying the internals of
    Operation* objects; in particular the partition_new member variable.
    This is breaking data hiding and encapsulation tenant of object oriented
    programming.
    
    Implement exactly the same operation merge semantics, but hide the
    manipulation of the internals of the Operation* objects within the
    Operation* classes themselves.
    
    Bug 755214 - Refactor operation merging

2015-09-14  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Better comment what each Merge_Operations() call is achieving (#755214)
    
    ... before refactoring the code.
    
    See the commit message from 2011-10-05 for details of what operations,
    available at that time, on the same partition can be merged and in what
    cases:
        b10349ae37df06b7bf7de91ea93a3913535ade3a
        Merge overlapping operations (#438573)
    
    Bug 755214 - Refactor operation merging

2015-09-26  Pedro Albuquerque <palbuquerque73@gmail.com>

    Updated Portuguese translation

2015-09-26  Pedro Albuquerque <palbuquerque73@gmail.com>

    Updated Portuguese translation

2015-09-10  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Localise checking for an extended partition into activate_new()
    
    As previous commit, display_partitions is now a Win_GParted member
    variable so checking for the existence of an extended partition can be
    localised where it is used.
    
    Remove index_extended member variable and localise the same checking in
    activate_new().

2015-09-10  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Localise counting of primary partitions into max_amount_prim_reached()
    
    Now that display_partitions is a Win_GParted member variable and
    therefore available throughout the class, since commit [1], calculation
    of primary_count can be localised in max_amount_prim_reached() where it
    is used.
    
    Implements a FIXME and removes primary_count as a member variable.
    
    [1] 545b75d9574e053cadb9ddd5cf15fc28181da87c
        Move vector of partition objects to a Win_GParted class member (#750168)

2015-09-10  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Refresh copy source when its a logical partition too (#754827)
    
    Perform a copy, reformat source and paste sequence in GParted.  When the
    source is a primary partition everything works as expected, with the
    newly pasted partition reflecting the reformatted source.  However when
    the source is a logical partition GParted thinks it is pasting the
    original source, rather than the reformatted source.  The same is also
    true for other file system manipulation operations: resize, file system
    label and new UUID.  It is just that reformatting the source to a
    different file system type is the most obvious in the UI and causes the
    most significantly wrong actions to be performed.
    
    For example start with an ext4 logical partition, select it for copy,
    format it to xfs and paste into a new partition.  GParted thinks the
    second operation will create a copy of an ext4 file system instead of
    the xfs file system.  When applied the operation details are:
    
        Format /dev/sdd5 as xfs
        + calibrate /dev/sdd5
        + clear old file system signatures in /dev/sdd5
        + set partition type on /dev/sdd5
        + create new xfs file system
          + mkfs.xfs -f -L "" /dev/sdd5
        Copy /dev/sdd5 to /dev/sdd (start at 131.00 MiB)
        + calibrate /dev/sdd5
        + check file system on /dev/sdd5 for errors and (if possible) fix them
          + e2fsck -f -y -v -C 0 /dev/sdd5
              e2fsck: Subperblock invalid, trying backup blocks...
              Resize inode not valid.  Recreate? yes
              ...
              /dev/sdd5: ***** FILE SYSTEM WAS MODIFIED *****
        + create empty partition
        + set partition type on /dev/sdd6
            new partition type: ext4
        + copy file system of /dev/sdd5 to /dev/sdd6
            using internal algorithm
            ...
    
    GParted formatted sdd5 to xfs, but then the copy step ran e2fsck and
    managed to resurrect the ext4 file system and then performed a block
    copy of it to partition sdd6.  The copy step should have ran xfs_repair
    and used xfsdump | xfsrestore to copy the xfs file system.  Afterwards
    sdd5 contains both xfs and ext4 signatures.
    
        # wipefs /dev/sdd5
        offset               type
        ----------------------------------------------------------------
        0x438                ext4   [filesystem]
                             UUID:  f0ed4247-76db-4d93-b3bc-c7da4a70f95e
    
        0x0                  xfs   [filesystem]
                             UUID:  1ac8e7c3-0311-4c64-8e4a-b715a23ea0bd
    
    This has been broken at least as far back as GParted 0.1.0.
    
    Fix by simply refreshing the copy source partition object when it is a
    logical partition too, as well as when it is a primary partition.
    
    Bug 754827 - Copy, reformat source and paste a logical partition thinks
                 it's pasting the original file system

2015-09-05  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove unused public member variable FileSystem::success
    
    Assume accidentally added in commit:
        52a2a9b00a32996921ace055e71d0e09fb33c5fe
        Reduce threading (#685740)

2015-09-06  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Implement shell style exit status decoding (#754684)
    
    Command exit status is a 1 byte value between 0 and 255. [1][2]  However
    at the Unix API level the value is encoded as documented in the
    waitpid(2) manual page.  This is true for the Glib API too. [3]  This is
    why, for example, the comment in ext2::check_repair() reported receiving
    undocumented exit status 256.  It was actually receiving exit status 1
    encoded as per the waitpid(2) method.
    
    Add shell style exit status decoding [2] to execution of all external
    commands.   Return value from Utils::execute_command() and
    FileSystem::execute_command() functions are now:
        0 - 125 - Exit status from the command
        126     - Error executing the command
        127     - Command not found
        128+N   - Command terminated by signal N
        255     - Unexpected waitpid(2) condition
    Also adjust checking of the returned statuses as necessary.
    
    [1] Advanced Bash-Scripting Guide: Appendix D. Exit Codes With Special
        Meanings
        http://www.linuxtopia.org/online_books/advanced_bash_scripting_guide/exitcodes.html
    
    [2] Quote from the bash(1) manual page:
    
            EXIT STATUS
                ... Exit statuses fall between 0 and 255, though as
                explained below, the shell may use values above 125
                specially.  ...
    
                ... When a command terminates on a fatal signal N, bash uses
                the value of 128+N as the exit status.
    
                If a command is not found, the child process created to
                execute it returns a status of 127.  If a command is found
                but is not executable, the return status is 126.
    
    [3] Quote from the Glib Reference Manual, Spawning Processes section,
        for function g_spawn_check_exit_status():
        https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#g-spawn-check-exit-status
    
            The g_spawn_sync() and g_child_watch_add() family of APIs return
            an exit status for subprocesses encoded in a platform-specific
            way.  On Unix, this is guaranteed to be in the same format
            waitpid() returns, ...
    
    Bug 754684 - Updates to FileSystem:: and Utils::execute_command()
                 functions

2015-09-05  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Time and check commands setting fat16/32 labels and UUIDs (#754684)
    
    Replace open coding of the creation of the operation details for the
    mlabel command used to set the label and UUID with calls to
    FileSystem::execute_command() which will do it all.  This also results
    in the commands getting a time and check mark displayed in the operation
    details.
    
    Bug 754684 - Updates to FileSystem:: and Utils::execute_command()
                 functions

2015-09-05  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Time and check nearly all file system action commands (#754684)
    
    There has been an undocumented rule that external commands displayed in
    the operation details, as part of file system manipulations, only get a
    time and check mark displayed when multiple commands are needed, and not
    otherwise.  (GParted checks whether all commands are successful or not
    regardless of whether a check mark is displayed in the operation details
    or not).
    
    EXCEPTION 1: btrfs resize
    
    Since the following commit [1] from 2013-02-22, GParted stopped
    displaying the timing for the btrfs resize command in the operation
    details.  It being part of a multi-command sequence to perform the step.
    This is because FileSystem::execute_command() since the commit can only
    check the exit status for zero / non-zero while timing and checking the
    command status but btrfs resize needs to consider some non-zero statuses
    as successful.
    
    [1] 52a2a9b00a32996921ace055e71d0e09fb33c5fe
        Reduce threading (#685740)
    
    EXCEPTION 2: ext2/3/4 move and copy using e2image
    
    When use of e2image was added [2] the single command steps were timed
    and check.
    
    [2] 86111fe12a26d23d9fc2a9e2d19281290ecaf985
        Use e2image to move/copy ext[234] file systems (#721516)
    
    EXCEPTION 3: fat16/32 write label and UUID
    
    Uses Utils::execute_command() rather than FileSystem::execute_command()
    so can be separately changed.  See the following commit for resolution
    of the final commands not yet timed and check mark displayed.
    
    CHANGE:
    
    Lets make a simpler rule of always displaying the time and a check mark
    for all external commands displayed in the operation details.  However
    this makes several of the other single command actions need special exit
    status handling because zero success, non-zero failure is not correct
    for every case.  Specifically affects resizing of reiserfs and check
    repair of ext2/3/4, fat16/32, jfs and reiserfs.
    
    After this change all external commands run as file system actions must
    follow one of these two patterns of using the EXEC_CHECK_STATUS flag or
    separately calling FileSystem::set_status() to register success or
    failure of the command:
        exit_status = execute_command(cmd, od, EXEC_CHECK_STATUS...);
    or:
        exit_status = execute_command(cmd, od, ...);
        bool success = (exit_status == 0 || exit_status == OTHER_SUCCESS_VALUE...);
        set_status(od, success );
    
    Bug 754684 - Updates to FileSystem:: and Utils::execute_command()
                 functions

2015-08-29  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Refactor flags in method FileSystem::execute_command() (#754684)
    
    Change the two optional boolean parameters into a single optional flags
    parameter which uses symbolically defined names.  Makes reading the
    execute_command() calls much easier to understand.  (Implemented as bit
    field using the same technique as used for Glib::SpawnFlags [1]).
    
    This changes the calls thus:
    
      execute_command(cmd, od)              -> (cmd, od)
      execute_command(cmd, od, false)       -> (cmd, od, EXEC_NONE)  // [2]
      execute_command(cmd, od, true )       -> (cmd, od, EXEC_CHECK_STATUS)
      execute_command(cmd, od, false, true) -> (cmd, od, EXEC_CANCEL_SAFE)
      execute_command(cmd, od, true , true) ->
                              (cmd, od, EXEC_CHECK_STATUS|EXEC_CANCEL_SAFE)
    
    [1] SpawnFlags bitwise operators in
        /usr/include/glibmm-2.4/glibmm/spawn.h.
    
    [2] False and EXEC_NONE are the default values for the optional third
        parameter before and after this change respectively and both mean
        the same.  This is being used in btrfs::resize() and being kept for
        now despite it being the default.
    
    Bug 754684 - Updates to FileSystem:: and Utils::execute_command()
                 functions

2015-08-29  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove unused execute_command_timed() (#754684)
    
    Use of execute_command_timed() was removed by this commit from
    2013-02-22:
        52a2a9b00a32996921ace055e71d0e09fb33c5fe
        Reduce threading (#685740)
    
    Bug 754684 - Updates to FileSystem:: and Utils::execute_command()
                 functions

2015-09-16  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Recognise NVME devices (#755022)
    
    Add a pattern to recognise Non-Volatile Memory Express devices as valid
    devices to work with.  Devices are named by the Linux kernel device
    driver like /dev/nvme0n1 [1] with partitions named like /dev/nvme0n1p1
    [2].
    
    [1] linux 3.3 drivers/block/nvme.c nvme_alloc_ns()
        https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/drivers/block/nvme.c?id=v3.3#n1351
    
    [2] Contents of /proc/partitions for a partitioned NVME device
        $ grep nvme /proc/partitions
         259        0  390711384 nvme0n1
         259        1        977 nvme0n1p1
         259        2   31250000 nvme0n1p2
         259        3  328209496 nvme0n1p3
         259        4   31249408 nvme0n1p4
    
    Bug 755022 - gparted doesn't recognize nvme devices

2015-09-20  Stas Solovey <whats_up@tut.by>

    Updated Russian translation

2015-09-20  Curtis Gedak <gedakc@gmail.com>

    Provide overall credit for work done by Mike Fleetwood
    
    Add recognition for all the work done by Mke Fleetwood to improve
    GParted over the past several years.

2015-09-20  Curtis Gedak <gedakc@gmail.com>

    Provide credit for patch by Wrolf Courtney (#754649)
    
    Add recognition for work done by Wrolf Courtney to display LVM logical
    volumes.
    
    Bug 754649 - Display Logical Volumes in Volume Group of LVM2 Partition

2015-09-20  Andika Triwidada <andika@gmail.com>

    Updated Indonesian translation

2015-09-19  Aurimas Černius <aurisc4@gmail.com>

    Updated Lithuanian translation

2015-09-19  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2015-09-17  Dušan Kazik <prescott66@gmail.com>

    Updated Slovak translation

2015-09-17  Balázs Úr <urbalazs@gmail.com>

    Updated Hungarian translation

2015-09-17  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2015-09-06  Wrolf Courtney <wrolf@wrolf.net>

    Display list of Logical Volumes in the Partition Information dialog (754649)
    
    Bug 754649 - Display Logical Volumes in Volume Group of LVM2 Partition

2015-09-09  Aurimas Černius <aurisc4@gmail.com>

    Updated Lithuanian translation

2015-09-07  Kjartan Maraas <kmaraas@gnome.org>

    Updated Norwegian bokmål translation from ProjectX.

2015-09-08  Seong-ho Cho <shcho@gnome.org>

    Updated Korean translation

2015-09-04  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2015-08-11  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fix configuration version compare issue affecting libparted from GIT (#753525)
    
    When configuring GParted build with libparted from GIT it may perform
    the version compares incorrectly and think the version of libparted is
    higher that it actually is.  Libparted uses the number of commits from
    the last git tag as the third part of the version number.
    
    For example install libparted from one commit before release 3.1, 142
    commits after release 3.0.
        $ git checkout v3.1^
        $ describe
        v3.0-142-g82327a3
        $ ./bootstrap
        $ ./configure --prefix=/tmp/parted-3.0-git
        $ make && make install
    
    Configure GParted:
        $ export CPPFLAGS=-I/tmp/parted-3.0-git/include
        $ export LDFLAGS=-L/tmp/parted-3.0-git/lib
        $ export LD_RUN_PATH=/tmp/parted-3.0-git/lib
        $ export PKG_CONFIG_PATH=/tmp/parted-3.0-git/lib/pkgconfig
        $ ./configure
        ...
        checking for libparted >= 1.7.1 (querying pkg-config)... 3.0.142-8232
        checking for 2.0 <= libparted <= 3.0 (loop table creation doesn't delete old partitions)... (cached) no
        checking for libparted >= 2.2 (improved pt re-read)... (cached) yes
        checking for ped_file_system_resize in -lparted... no
        checking for ped_file_system_resize in -lparted-fs-resize... yes
        checking for libparted >= 3.2 (online resize)... (cached) no
        ...
    Libparted is reported as version 3.0.142, but checking of the version
    between 2.0 and 3.0 inclusive fails.
    
    The configure script is multiplying components of the version by 100
    when adding them together.
        $ echo 3.0.142-8232 | awk -F. '{print $1 * 10000 + $2 * 100 + $3}'
        30142
    
    So it is only allowing up to 99 commits before it is equivalent to the
    second minor number increasing by one.  Increase the multiplication
    factor to 10000, allowing up to 9999 commits between releases.  An order
    of magnitude more commits than so far seen between parted releases.
    
    Bug 753525 - Configuration issues when using non-system location or
                 non-released versions of libparted

2015-08-11  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fix configuration version mismatch when using custom install of libparted (#753525)
    
    When configuring GParted build with a custom install of libparted the
    configure script is using the wrong version number for the version of
    libparted.  It uses the version of the system install of libparted,
    rather that the version of the specified custom install of libparted.
    
    For example configuring GParted build on CentOS 7 with system provided
    libparted 3.1 and custom install of libparted 3.2 from GIT in
    /tmp/parted-3.2-git:
        $ export CPPFLAGS=-I/tmp/parted-3.2-git/include
        $ export LDFLAGS=-L/tmp/parted-3.2-git/lib
        $ export LD_RUN_PATH=/tmp/parted-3.2-git/lib
        $ ./configure
        ...
        checking for libparted >= 1.7.1 (querying pkg-config)... 3.1
        checking for 2.0 <= libparted <= 3.0 (loop table creation doesn't delete old partitions)... (cached) no
        checking for libparted >= 2.2 (improved pt re-read)... (cached) yes
        checking for ped_file_system_resize in -lparted... no
        checking for ped_file_system_resize in -lparted-fs-resize... yes
        checking for libparted >= 3.2 (online resize)... (cached) no
        ...
        $ make
        $ ldd src/gpartedbin | fgrep libparted
            libparted-fs-resize.so.0 => /tmp/parted-3.2-git/lib/libparted-fs-resize.so.0 (0x00007f9a460ee000)
            libparted.so.2 => /tmp/parted-3.2-git/lib/libparted.so.2 (0x00007f9a45ea3000)
    Configure script used version 3.1 as reported by pkg-config to make most
    of the decisions (those version related checks with cached results) but
    the executable was still linked with the custom libparted 3.2 install.
    
    Temporarily rename the system libparted pkg-config file out of the way:
        # cd /usr/lib64/pkgconfig
        # mv libparted.pc libparted.pc-NOT
    and reconfigure the GParted build:
        $ ./configure
        ...
        checking for libparted >= 1.7.1 (querying pkg-config)... not found
        checking for libparted >= 1.7.1 (querying libparted)... 3.2.25-5a92
        checking for 2.0 <= libparted <= 3.0 (loop table creation doesn't delete old partitions)... (cached) no
        checking for libparted >= 2.2 (improved pt re-read)... (cached) yes
        checking for ped_file_system_resize in -lparted... no
        checking for ped_file_system_resize in -lparted-fs-resize... yes
        checking for libparted >= 3.2 (online resize)... (cached) yes
        ...
    Now configure is having to compile a program with the custom install of
    libparted and gets the correct version.
    
    Restore libparted pkg-config file:
        # mv libparted.pc-NOT libparted.pc
    and this time set environment variable PKG_CONFIG_PATH to inform
    pkg-config of the additional directory to search for .pc files before
    the default system location:
        $ export PKG_CONFIG_PATH=/tmp/parted-3.2-git/lib/pkgconfig
        $ ./configure
        ...
        checking for libparted >= 1.7.1 (querying pkg-config)... 3.2.25-5a92
        checking for 2.0 <= libparted <= 3.0 (loop table creation doesn't delete old partitions)... (cached) no
        checking for libparted >= 2.2 (improved pt re-read)... (cached) yes
        checking for ped_file_system_resize in -lparted... no
        checking for ped_file_system_resize in -lparted-fs-resize... yes
        checking for libparted >= 3.2 (online resize)... (cached) yes
        ...
    Now configure is getting the correct version of the custom install of
    libparted when querying pkg-config and thus making the correct
    decisions.
    
    Update the README file to reflect the need to also set the
    PKG_CONFIG_PATH environment variable when building GParted with a custom
    install of libparted.
    
    Bug 753525 - Configuration issues when using non-system location or
                 non-released versions of libparted

2015-08-12  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2015-08-10  Anders Jonsson <anders.jonsson@norsjovallen.se>

    Updated Swedish translation

2015-07-25  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Update names of the ntfs and reiserfs specific packages (#753436)
    
    The ntfs-3g package previously provided the FUSE based NTFS driver to
    mount the file system and ntfsprogs provided the user space tools.  In
    April 2011 the packages have merged [1] forming ntfs-3g_ntfsprogs.  Arch
    Linux / Debian / Slackware / Ubuntu now just have an ntfs-3g package
    with everything; where as CentOS / Fedora / openSUSE are sticking with
    the original two package names.  Reverse the order of the needed
    packages to:
    
        ntfs-3g / ntfsprogs
    
    [1] Release: NTFS-3G + NTFSPROGS 2011.4.12
        http://www.tuxera.com/release-ntfs-3g-ntfsprogs-2011-4-12/
    
    For reiserfs the upstream package is named reiserfsprogs.  Arch Linux /
    Debian / Slackware / Ubuntu use this name; but CentOS / Fedora name it
    reiserfs-utils and openSUSE names it just reiserfs.  Update the README
    file with all 3 package names.
    
        reiserfsprogs / reiserfs-utils / reiserfs
    
    In the File System Support dialog just use the first 2 package names as
    we don't want to make the dialog too wide with all 3 names and hopefully
    on openSUSE it is more obvious that the reiserfs package is needed to
    support the reiserfs file system.
    
    NOTE:
    Again this slightly increases the width of the File System Support
    dialog on my CentOS 6 desktop with default fonts, now from 676 to 707
    pixels.  Again still well within the 800 wide target and still narrower
    than the main window.
    
    Bug 753436 - Update documentation of GParted software dependencies

2015-07-25  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Update name of the btrfs file system specific package (#753436)
    
    In Fedora bug report:
        Bug 1176108 - Warning shown on BTRFS partition because of missing btrfs-tools package
        https://bugzilla.redhat.com/show_bug.cgi?id=1176108#c0
    The user said:
        However there is no btrfs-tools package in the standard Fedora repo.
        There is a btrfs-progs package, which is already installed.  It's
        unclear whether this is a real error or simply a mismatched package
        name.
    
    The upstream software is named btrfs-progs.  Arch Linux / CentOS /
    Fedora / Slackware use the upstream name.  Debian / Ubuntu name it
    btrfs-tools and openSUSE calls it btrfsprogs (no dash).
    
    Rename the needed software to:
    
        btrfs-progs / btrfs-tools
    
    Upstream name first separated by slash from alternative names
    distributions use.
    
    NOTE:
    This slightly increases the width of the File System Support dialog on
    my CentOS 6 desktop with default fonts, from 655 to 676 pixels.  Still
    well within the 800 wide target and still narrower that the main window.
    
    Bug 753436 - Update documentation of GParted software dependencies

2015-08-10  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Document blkid command as a mandatory requirement (#753436)
    
    Update the README file to document the blkid command as a mandatory
    requirement for GParted.  GParted will run without blkid but it is
    needed to detect a number of file systems which libparted doesn't and in
    a number of other situations.
    
    Blkid is needed to detect these file systems:
        exfat
        f2fs
        ReFS
        SWRaid
        ZFS
    
    Blkid also detects these file systems (for which GParted has simple
    internal detection but libparted, mostly, doesn't detect):
        btrfs      (detected by libparted >= 3.2)
        LVM2 PV
        LUKS
        nilfs2     (detected by libparted >= 2.4)
        reiser4
    
    Blkid is also needed for these commits:
    
    1)  f8faee637787329c07771e495c9b26abc9ac1603
        Avoid whole disk FAT being detected as MSDOS partition table (#743181)
        (with libparted 1.9.0 to 2.3 inclusive)
    
    2)  9e5e9f5627e0fb1b547f07cdaaac773c7b6035b9
        Enhance file system detection to use FS_Info method - blkid
        (Detect file systems with sector sizes other than 512 bytes with
        libparted 2.2)
    
    Other changes to the DISTRIBUTION NOTES section of the README file:
    * Drop NOTE about vol_id and blkid being used to read volume labels for
      specific file systems and read the UUIDs.  Vol_id was deprecated in
      May 2009 and is not included in any currently supported distribution.
      Blkid is now mandatory.  List of optional commands at the end of the
      section seems to cover everything that is necessary.
    * Indent description of optional commands at the end of the section to
      match the indentation earlier in the section.
    * Line wrap the section at column 72 to match the rest of the file.
    
    Bug 753436 - Update documentation of GParted software dependencies

2015-07-27  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove "Skip setting unsupported partition flag" message
    
    This message would be displayed as part of the details for an operation
    to create or format a partition as LVM2 PV on a disk using partition
    table types dvh or pc98, which don't have an lvm flag.
    
     v Format /dev/sdb1 as lvm2 pv
       > calibrate /dev/sdb1
       > clear old file system signatures in /dev/sdb1
       > set partition type on /dev/sdb1
           Skip setting unsupported partition flag: lvm
       > create new lvm2 pv file system
    
    Translators found this message difficult to translate, as reported in
    bug 752901 - Add translator comment or fix string.  It is also only
    standard practice to set the lvm flag on partitions containing LVM2 PVs,
    and not required.  In hindsight reporting that an operation was skipped,
    when the operation is not a necessity, is probably bad practice as it
    could lead to uncertainty on behalf of the user and questions as to why
    the flag isn't supported.  Just remove the message.

2015-07-31  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Minor update of colours for LVM2 PVs and ReFS
    
    Correct the colour name comment for NILFS2.
    
    Colour for LVM2 PV was a Medium Brown.  This is close to Face Skin Dark
    from the GNOME colour palette.  Use this instead.
    
    Make colour for ReFS a bit darker so it is more distinct from the colour
    for NTFS.

2015-07-25  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add detection of ZFS (#752862)
    
    Requires blkid from util-linux >= 2.15, released May 2009, for
    detection of ZFS.
    
    Bug 752862 - ZFS is not recognised

2015-08-03  Rūdolfs Mazurs <rudolfsm@src.gnome.org>

    Updated Latvian translation

2015-08-03  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2015-08-03  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.23.0   ==========

2015-07-31  Wolfgang Stöggl <c72578@yahoo.de>

    Updated German translation

2015-07-31  Milo Casagrande <milo@ubuntu.com>

    Updated Italian translation

2015-07-27  A S Alam <aalam@users.sf.net>

    Punjabi Translation updated

2015-07-27  Curtis Gedak <gedakc@gmail.com>

    Add translation comments for code section setting partition flag (#752901)
    
    Add translation comments to improve the clarity of some translatable
    text strings regarding setting partition flags.
    
    Bug 752901 - Add translator comment or fix string

2015-07-27  Enrico Nicoletto <liverig@gmail.com>

    Updated Brazilian Portuguese translation

2015-07-26  Josef Andersson <josef.andersson@gmail.com>

    Updated Swedish translation

2015-07-26  Josef Andersson <josef.andersson@gmail.com>

    Updated Swedish translation

2015-07-26  Alexandre Franke <alexandre.franke@gmail.com>

    Updated French translation

2015-07-26  Baurzhan Muftakhidinov <baurthefirst@gmail.com>

    Updated Kazakh translation

2015-07-26  Daniel Șerbănescu <daniel@serbanescu.dk>

    Updated Romanian Translation

2015-07-23  Dušan Kazik <prescott66@gmail.com>

    Updated Slovak translation

2015-07-20  Curtis Gedak <gedakc@gmail.com>

    Adjust pointers to prevent crash when resizing a logical partition (#752587)
    
    Opening the Resize/Move dialog on a logical partition causes GParted to
    crash.  This crash affects current GParted GIT HEAD, but does not affect
    GParted 0.22.0.  Git bisect identifies that it was broken with the
    following commit:
        Remove Set_Data() from the copy, resize/move and new dialog class APIs
        7a4a375ed629fea77995c98d13bd1992231be6fb
    
    The problem was trying to treat the reference display_partitions_ref
    like a pointer, and in particular on line 1732 trying to make it refer
    to the a different vector of partitions, .logicals sub-vector.
    
      1721  void Win_GParted::activate_resize()
      1722  {
      ...
      1726          std::vector<Partition> & display_partitions_ref = display_partitions;
      1727          if ( selected_partition_ptr->type == TYPE_LOGICAL )
      1728          {
      1729                  unsigned int ext = 0 ;
      1730                  while ( ext < display_partitions.size() && display_partitions[ext].type != TYPE_EXTENDED )
      1731                          ext++;
    * 1732                  display_partitions_ref = display_partitions[ext].logicals;
      1733          }
      1734
      1735          Dialog_Partition_Resize_Move dialog( gparted_core.get_fs( selected_partition_ptr->filesystem ),
      1736                                               *selected_partition_ptr,
      1737                                               display_partitions_ref );
    
    What was actually happening was that the .logicals sub-vector was being
    copied, replacing the display_partitions vector and freeing the original
    sub-vector.  This left selected_partition_ptr pointing to the original
    memory where the selected partition use to exist in the .logicals
    sub-vector.  At some point in the Dialog_Partition_Resize_Move class
    *selected_partition_ptr was referenced, accessing the freed memory.
    Crash soon followed.
    
    Fix by using a pointer instead of a reference, which can be assigned to
    point to a different object.
    
    Bug 752587 - GParted crashing when opening Resize/Move dialog on
                 logical partition

2015-07-21  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2015-07-14  Curtis Gedak <gedakc@gmail.com>

    Add libparted ped_file_system_resize thread to avoid blocking GUI (#737022)
    
    Since GParted commit 52a2a9b "Reduce threading (#685740)", released in
    GParted 0.15.0, application of operations occurs in the main thread
    running the UI, therefore long running libparted actions such as
    resizing a FAT16 or FAT32 file system hang the UI for as long as it take
    to complete the operation.
    https://git.gnome.org/browse/gparted/commit/?id=52a2a9b00a32996921ace055e71d0e09fb33c5fe
    
    Though this problem exists for all libparted actions, it is particularly
    noticeable when performing a large resize of fat16/fat32/hfs/hfs+ file
    systems.
    
    To address this significant cause of an unresponsive GUI, this
    enhancement adds threading to the libparted ped_file_system_resize
    function call.
    
    Bug 737022 - UI hangs while running libparted operations such as
                 FAT16/FAT32 resizing

2015-07-19  Anders Jonsson <anders.jonsson@norsjovallen.se>

    Add image to Swedish documentation

2015-07-17  Balázs Úr <urbalazs@gmail.com>

    Updated Hungarian translation

2015-07-13  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2015-07-13  Stas Solovey <whats_up@tut.by>

    Updated Russian translation

2015-07-05  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2015-06-30  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remember result of searching the PATH for udevadm and udevsettle cmds
    
    GParted was also searching the PATH for the availability of the udevadm
    and udevsettle commands for every device with a busy partition during a
    refresh and for every applied operation effecting a partition table.  As
    with hdparm previously this was wasteful.
    
    Again, remember the result of searching the PATH at startup and refresh
    when clicking on the [Rescan For Supported Actions] button in the File
    System Support dialog.

2015-06-30  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remember result of searching the PATH for the hdparm command (#751251)
    
    Previously on every refresh for every device, GParted was searching the
    PATH to discover if the hdparm command existed.  Stracing GParted showed
    that calling Glib::find_program_in_path("hdparm") made the following OS
    calls:
        access("/usr/lib64/qt-3.3/bin/hdparm", X_OK) = -1 ENOENT (No such file or directory)
        access("/usr/local/sbin/hdparm", X_OK) = -1 ENOENT (No such file or directory)
        access("/usr/local/bin/hdparm", X_OK) = -1 ENOENT (No such file or directory)
        access("/sbin/hdparm", X_OK) = 0
        getuid()                    = 0
        stat("/sbin/hdparm", {st_mode=S_IFREG|0755, st_size=137, ...}) = 0
        stat("/sbin/hdparm", {st_mode=S_IFREG|0755, st_size=137, ...}) = 0
    
    The Linux VFS is very fast but repeatedly doing this is wasteful.
    Remember the result of searching the PATH for the hdparm command at
    startup and refresh this when the [Rescan For Supported Actions] button
    is pressed in the File System Support dialog.  This is the same as
    GParted already does for file system specific commands and their
    capabilities.
    
    Bug 751251 - Show serial number in device information

2015-06-26  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Don't hang reading binary data from command output (#751251)
    
    With a Kobo Touch eReader connected via USB, GParted would hang when
    scanning the device with this error written to the terminal:
    
        $ sudo src/gpartedbin
        ======================
        libparted : 2.3
        ======================
    
        (gpartedbin:10261): glibmm-CRITICAL **:
        unhandled exception (type Glib::Error) in signal handler:
        domain: g_convert_error
        code  : 1
        what  : Invalid byte sequence in conversion input
    
    The hdparm command was printing binary data as the serial number.
    Fragment of the 'hdparm -I /dev/sdf' output:
    
        # hdparm -I /dev/sdf
    
        /dev/sdf:
        SG_IO: bad/missing sense data, sb[]:  70 00 05 00 00 00 00 0a 00 00 00 00 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    
        ATAPI Optical card reader/writer, with non-removable media
                Model Number:       {BINARY_DATA}
                Serial Number:      {BINARY_DATA}
                Firmware Revision:  {BINARY_DATA}
    
    GParted reads command output using the Glib::IOChannel class.  However
    by default an IOChannel performs character set conversion on the data it
    reads, so when it came across an invalid byte sequence in the binary
    data the above exception was raised and the IOChannel::read() method
    never returned.  Hence GParted became stuck reportedly scanning the
    same device forever.  Code fragment:
    
    src/PipeCapture.cc
        49  bool PipeCapture::OnReadable( Glib::IOCondition condition )
        50  {
        ...
        58          Glib::ustring str;
    >>  59          Glib::IOStatus status = channel->read( str, 512 );
        60          if (status == Glib::IO_STATUS_NORMAL)
        61          {
        62                  for( Glib::ustring::iterator s = str.begin(); s != str.end(); s++ )
    
    Quote from the IOChannel class reference:
        https://developer.gnome.org/glibmm/stable/classGlib_1_1IOChannel.html
    
        Note that IOChannels implement an automatic implicit character set
        conversion to the data stream, and usually will not pass by default
        binary data unchanged. To set the encoding of the channel, use
        e.g. set_encoding("ISO-8859-15"). To set the channel to no encoding,
        use set_encoding() without any arguments.
    
    Fix by disabling the automatic character set conversion in the IOChannel
    used to read output from executed commands.
    
    Bug 751251 - Show serial number in device information

2015-06-22  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Display device serial numbers (#751251)
    
    Run "hdparm -I /dev/DISK" to get the hard drive serial number of
    every device which has one and display it in the Device Information.
    The displayed value can either be the actual serial number, "none" or
    blank.  "none" means the device doesn't have a hard drive serial number,
    such as for Linux software RAID arrays, BIOS fake RAID arrays or USB
    flash drives.  Blank means something went wrong getting the serial
    number.  Either it couldn't be found in the hdparm output or the hdparm
    command wasn't installed.
    
    Example real hard drive:
        # hdparm -I /dev/sda
        ...
        ATA device, with non-removable media
                Model Number:       SAMSUNG HM500JI
                Serial Number:      S1WFJDSZ123732
        ...
    
    Example Linux software RAID array:
        # hdparm -I /dev/md127
    
        /dev/md127:
         HDIO_DRIVE_CMD(identify) failed: Inappropriate ioctl for device
    
    On my desktop with 4 internal hard drives 2 Linux software RAID arrays
    on those hard drives, 2 USB flash drives and 1 USB hard drive attached,
    running hdparm 9 times added 0.07 seconds to the device refresh time.
    
    Bug 751251 - Show serial number in device information

2015-06-19  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Support changing the UUID of a btrfs file system (#751337)
    
    Btrfs-progs 4.1, released June 2015, includes support for changing the
    UUID of a btrfs file system using the btrfstune command.  Check for
    availability by looking for the -u option in the btrfstune help output.
    Use btrfstune like this:
    
        # umount /dev/sdb1
        # btrfstune -f -u /dev/sdb1
        Current fsid: e7ad5dba-d721-4f99-990b-1ba2901c8ad2
        New fsid: 231563d9-e173-410d-b1da-d34c4319a423
        Set superblock flag CHANGING_FSID
        Change fsid in extents
        Change fsid on devices
        Clear superblock flag CHANGING_FSID
        Fsid change finished
        # echo $?
        0
    
    Bug 751337 - btrfstune in btrfs-progs 4.1 supports changing the file
                 system UUID

2015-06-08  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Provide comment for btrfs::clear_cache() call
    
    Explain why the implementation uses a clear_cache() call, rather than a
    straight load_cache() call.  This commit from 2014-02-17 implemented
    incremental loading of the btrfs device cache:
        76e64f2905bdbe37c307bc9fab055f44914dc7b2
        Detect busy status of multi-device btrfs file systems (#723842)

2015-06-07  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Delay loading LVM2_PV_info cache until actually needed (#750582)
    
    The lvm query commands were always run and the cache loaded even if
    GParted, actually blkid, didn't identify any LVM2 PVs.  (GParted uses
    libparted and blkid to identify partition content and the lvm commands
    to provide the needed configuration details).
    
    Now implement complete lazy initialization of the cache.  Never force
    loading of the cache.  The cache is only loaded when the first value is
    accessed from it.  When there are no LVM2 PVs, the cache is never
    queried, so never loaded.  All the needed infrastructure for delayed
    loading was previously added by this commit from 2011-12-11:
        ff8ad0412057dd6644cd290a8affc71786b5d89f
        Lazy initialize the cache from querying LVM2 PVs (#160787)
    Every public member function which access values from the cache already
    calls initialize_if_required().  Just need to replace force loading of
    the cache with a function which just clears the cache.
    
    On my desktop, only when there are no LVM2 PVs, not loading the cache
    and therefore not executing these external commands in
    load_lvm2_pv_info_cache() saves 1.0 seconds of the 3.7 seconds it takes
    to perform the a refresh in GParted:
        lvm vgscan
        lvm pvs ... -o pv_name,...
        lvm pvs ... -o vg_name,...
    
    Bug 750582 - Refactor the LVM2_PV_Info module object interface and
                 internal cache representation

2015-06-07  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Parse LVM2_PV_Info cache into fields while loading (#750582)
    
    GParted used to cache the results of the "lvm pvs" commands used to query
    the state of the Logical Volume Manager as a series of lines of text.
    Then every time a particular value was queried GParted would split all
    the lines of text into fields until the required value was found.
    
    Stop this repeat splitting of cached lines of text.  Instead parse the
    lines of text into separate fields and store in structures of values of
    the correct type in the cache.
    
    Bug 750582 - Refactor the LVM2_PV_Info module object interface and
                 internal cache representation

2015-06-05  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Stop needing any LVM2_PV_Info objects (#750582)
    
    The LVM2_PV_Info cache had a pretend multi-object interface, yet all the
    data is static.  An LVM2_PV_Info object doesn't contain any member
    variables, yet was needed just to call the member functions.
    
    Make all the member functions static removing the need to use any
    LVM2_PV_Info objects.
    
    Bug 750582 - Refactor the LVM2_PV_Info module object interface and
                 internal cache representation

2015-06-05  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Stop borrowing the constructor to load the LVM2_PV_Info cache (#750582)
    
    An LVM2_PV_Info object contains no member variables as all the data is
    static (exists once in the program and accessed by all objects).  The
    constructor did nothing, except when passed true to load the cache.
    
    Provide a separate load_cache() member function and remove the
    constructors and destructor which do nothing.  The C++ compiler will
    provide a default constructor and destructor, which don't do anything as
    there are no member variables to initialise and finalise.
    
    This makes the interface a little easier to understand.  Mostly a step
    along the way of refactoring how the LVM2_PV_Info cache module works.
    
    Bug 750582 - Refactor the LVM2_PV_Info module object interface and
                 internal cache representation

2015-06-02  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove Set_Data() from the copy, resize/move and new dialog class APIs
    
    The copy, resize/move and new dialog classes (Dialog_Partition_Copy,
    Dialog_Partition_Resize_Move and Dialog_Partition_New respectively) had
    to be used like this:
    
        construct dialog object passing some parameters
        call Set_Data() to pass more parameters
        run() dialog
        call Get_New_Partition()
    
    There is nothing in the classes which forces Set_Data() to be called,
    but it must be called for the dialogs to work and prevent GParted from
    crashing.
    
    Make these class APIs safer by making it impossible to program
    incorrectly in this regard.  Move all the additional parameters from
    each Set_Data() method to each constructor.  The constructors just call
    the now private set_data() methods.

2015-05-26  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Rename Dialog_Base_Partition member to new_partition
    
    The member variable was named selected_partition.  It is assigned from
    Win_GParted::selected_partition_ptr (which is a pointer to a const
    partition object so is never updated).  This gives connotations that it
    won't be modified.
    
    However it is updated freely as the new resultant partition object is
    prepared before being returned from the dialog, most notable in the
    Get_New_Partition() methods.
    
    Therefore rename from selected_partition to new_partition.

2015-05-26  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Stop copying selected_partition back on itself in the copy dialog (#750168)
    
    The code goes like this:
    
        Dialog_Partition_Copy::Get_New_Partition()
            call Dialog_Base_Partition::Get_New_Partition()
                Update this->selected_partition with results from running
                the dialog.
                return this->selected_partition by value.
            Save value back to this->selected_partition.
            Update this->selected_partition some more.
            return this->selected_partition by value.
    
    So there is an unnecessary copy of the partition object returned from
    the base class Get_New_Partition() function back to the same variable in
    the derived copy class Get_New_Partition() function.
    
    Need to keep the base class Get_New_Partition() function as derived
    class Dialog_Partition_Resize_Move uses that implementation as it
    doesn't override it, and it's part of the interface.
    
    Avoid this unnecessary copy by moving base class Get_New_Partition()
    code into a new private function, called prepare_new_partition(), which
    doesn't return anything.  Then have Get_New_Partition() in both classes
    just return the required partition object.  Like this:
    
        Dialog_Base_Partition::Get_New_Partition()
            call prepare_new_partition()
            return this->selected_partition by value.
    
        Dialog_Partition_Copy::Get_New_Partition()
            call Dialog_Base_Partition::prepare_new_partition()
            Update this->selected_partition some more.
            return this->selected_partition by value.
    
    Bug 750168 - Reduce the amount of copying of partition objects

2015-05-24  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Shallow copy Device object into Operation object (#750168)
    
    When Operation objects are created they take a copy of the Device object
    to which the operation is to be applied.  The Device object includes a
    vector of all the contained Partition objects currently on the device,
    so these get copied too.
    
    These additional deep copied Partition objects in the Operation object
    are never accessed.  Therefore don't copy the contained Partition
    objects when copying the Device object into the Operation object.
    
    Bug 750168 - Reduce the amount of copying of partition objects

2015-05-24  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Stop copying selected partition object in Manage Flags dialog (#750168)
    
    When opening the Manage Flags dialog, creation of the dialog object was
    creating a copy of the selected partition object.  If this was an
    extended partition it also included recursively constructing the
    contained logical partitions too.
    
    Instead, replace the partition object in the DialogManageFlags class
    with a reference to it.
    
    Bug 750168 - Reduce the amount of copying of partition objects

2015-05-24  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Stop copying selected partition object in Information dialog (#750168)
    
    When opening the Partition Information dialog, creation of the dialog
    object was creating a copy of the partition object to be displayed.  If
    this was an extended partition it also included recursively constructing
    the contained logical partitions too.
    
    Instead, replace the partition object in the Dialog_Partition_Info class
    with a reference to it.
    
    NOTE:
    In C++ a reference is really just a pointer under the hood.  As such,
    dereferences of a pointer to an object in the context of needing a
    reference to the object doesn't copy the object.  It merely initialises
    the reference from the pointer.
    
    Specifically, with this prototype:
        Dialog_Partition_Info( const Partition & partition );
    and the dialog object being constructed in Win_GParted::activate_info():
        Dialog_Partition_Info dialog( *selected_partition_ptr );
    the partition object is not copy constructed.  A reference (pointer) to
    it is merely passed to the dialog constructor.
    
    Bug 750168 - Reduce the amount of copying of partition objects

2015-05-23  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Stop copying displayed partition objects in activate_resize() (#750168)
    
    The first actions of Win_GParted::activate_resize() were to create a
    copy of the vector of partitions for the currently displayed device and
    visually apply any pending operations.  Exactly this has already been
    done in Win_GParted::Refresh_Visual() with the result now available in
    the member variable display_partitions.  Stop this unnecessary partition
    object copying and processing by just using display_partitions member
    variable instead.
    
    Bug 750168 - Reduce the amount of copying of partition objects

2015-05-19  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Document how the GUI works and the lifetimes of important data (#750168)
    
    Document how GParted displays partitions in the GUI and manages the
    lifetime and ownership of that data.
    
    Bug 750168 - Reduce the amount of copying of partition objects

2015-05-31  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Assert selected_partition_ptr is valid before use (#750168)
    
    Further ensure that a bug doesn't get introduced with the use of
    selected_partition_ptr, by asserting that it points to a current
    partition object in the vector of display partitions.
    
    After deliberately breaking the code so that selected_partition_ptr
    points to some other partition object, trying to display the Information
    dialog causes this crash:
    
    ======================
    libparted : 2.4
    ======================
    **
    ERROR:Win_GParted.cc:989:void GParted::Win_GParted::set_valid_operations(): assertion failed: (valid_display_partition_ptr( selected_partition_ptr ))
    Aborted (core dumped)
    
    At this point in the code:
    
        973  void Win_GParted::set_valid_operations()
        974  {
        ...
        986          // No partition selected ...
        987          if ( ! selected_partition_ptr )
        988                  return ;
    >>  989          g_assert( valid_display_partition_ptr( selected_partition_ptr ) );  // Bug: Not pointing at a valid display partition object
    
    Bug 750168 - Reduce the amount of copying of partition objects

2015-06-03  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Assert selected_partition_ptr is not NULL (#750168)
    
    Add Glib g_assert() to ensure that a bug doesn't get introduced which
    allows a partition callback to be called without a partition being
    selected first.
    
    After deliberately breaking the code so that selected_partition_ptr is
    not set, trying to display the Information dialog causes this crash:
    
        # ./gpartedbin
        ======================
        libparted : 2.4
        ======================
        ERROR:Win_GParted.cc:1978:void GParted::Win_GParted::activate_info(): assertion failed: (selected_partition_ptr != NULL)
        Aborted (core dumped)
    
    At this point in the code:
    
       1976  void Win_GParted::activate_info()
       1977  {
    >> 1978          g_assert( selected_partition_ptr != NULL );  // Bug: Partition callback without a selected partition
       1979
    
    Bug 750168 - Reduce the amount of copying of partition objects

2015-05-17  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Change selected partition into a pointer (#750168)
    
    Now that TreeView_Details and DrawingAreaVisualDisk classes store and
    pass pointers to partition objects in the Gtk signal callbacks, change
    the selected partition into a pointer too.
    
    Bug 750168 - Reduce the amount of copying of partition objects

2015-05-17  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Store pointers to partition objects in DrawingAreaVisualDisk (#750168)
    
    This stops copying of each displayed partition object into the
    DrawingAreaVisualDisk class.
    
    Bug 750168 - Reduce the amount of copying of partition objects

2015-05-16  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Store pointers to partition objects in TreeView_Details (#750168)
    
    This stops copying of each displayed partition object into the
    TreeView_Details class.
    
    It also stops copy constructing lots of partition objects when just
    clicking on a partition in the disk graphic.  The disk graphic needs to
    inform the main GUI and then the partition list which partition has been
    selected.  The call sequence goes like:
    
        DrawingAreaVisualDisk::on_button_press_event(event)
          Win_GParted::on_partition_selected(partition_ptr, src_is_treeview)
            TreeView_Detail::set_selected(partition_ptr)
              TreeView_Detail::set_selected(rows, partition_ptr,
                                            inside_extended)
    
    Relevant source and highlighted comparison line:
    
       140  bool TreeView_Detail::set_selected( Gtk::TreeModel::Children rows,
       141                                      const Partition * partition_ptr, bool inside_extended )
       142  {
       143          for ( unsigned int t = 0 ; t < rows .size() ; t++ )
       144          {
    >> 145                  if ( static_cast<Partition>( rows[t][treeview_detail_columns.partition] ) == *partition_ptr )
       146                  {
       147                          if ( inside_extended )
       148                                  expand_all() ;
       149
       150                          set_cursor( static_cast<Gtk::TreePath>( rows[ t ] ) ) ;
       151                          return true ;
       152                  }
       153
       154                  if ( set_selected( rows[t].children(), partition_ptr, true ) )
       155                          return true ;
       156          }
       157
       158          return false ;
       159  }
    
    Then in this function the partition selected in the disk graphic
    (partition_ptr parameter) is compared in turn with each partition object
    stored in the Gtk::TreeView model to find the matching one to mark it as
    selected.  This mere act of accessing the partition object stored in a
    row of the Gtk::TreeView model causes it to be copy constructed.  So
    clicking on the 5th partition in the disk graphic will copy construct
    the first 5 partition objects just to do a compare to find the matching
    one.
    
    This is because it is not possible to get a reference from a
    Gtk:TreeViewProxy in gtkmm.  Merely accessing a value in a Gtk::TreeView
    model takes a copy of that value.
    
        Subject: get a reference from a Gtk::TreeValueProxy
        http://comments.gmane.org/gmane.comp.gnome.gtkmm/2217
        http://marc.info/?t=104400417500001&r=1&w=4
    
    Bug 750168 - Reduce the amount of copying of partition objects

2015-05-16  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Pass by pointer in the signal_partition_selected callbacks (#750168)
    
    Change from passing a reference to the selected partition, to passing a
    pointer to the selected partition in the signal_partition_selected
    callbacks between the disk graphic, partition list and core GUI modules.
    
    This is an enabler for the following patches.
    
    Bug 750168 - Reduce the amount of copying of partition objects

2015-05-15  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Move vector of partition objects to a Win_GParted class member (#750168)
    
    Win_GParted::Refresh_Visual() used a local variable containing a copy of
    the vector of partitions in the current device to be displayed.  After
    visually applying pending operations it loaded copies of each partition
    object into the GUI widgets to display the disk graphic and partition
    list, DrawingAreaVisualDisk and TreeView_Details classes respectively.
    When a partition is selected in the UI, again a partition object is
    copied.  Also several of the partition dialogs, including the
    information dialog, take a copy of the partition object.  All these are
    copies of the same set of partition objects, those currently being
    displayed in the UI.
    
    Move the vector of displayed partitions from a local variable in
    Refresh_Visual() to a Win_GParted member variable.  This will allow for
    the above cases to be changed to used pointers and references to the
    same set of partition objects.
    
    The valid lifetime of pointers to elements in this partition object
    vector is from one refresh to the next, when the vector is cleared and
    repopulated with a new set of partition objects.  This is exactly what
    is needed as the GUI widgets are reloaded on each refresh, the selected
    partition is reset and none of the partition dialog objects exist.
    Dialog objects being created and destroyed on each use.
    
    On the other hand some copies of partition objects currently being
    displayed, still need to be made because they have lifetimes which need
    to last longer than the next call to Refresh_Visual().  Specifically the
    source of the copy partition and the partition objects copied into the
    in the list of pending operations.
    
    Bug 750168 - Reduce the amount of copying of partition objects

2015-06-01  Gábor Kelemen <kelemeng@openscope.org>

    Updated Hungarian translation

2015-05-25  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove cylinder size adjustments in the copy dialog (#749867)
    
    BUF in the copy dialog class, Dialog_Partition_Copy, is use to adjust
    limits in 2 cases:
    
    1) Minimum size when copying an XFS file system
    
    Minimum size was set to the used space + 2 * cylinder size (typically
    plus ~16 MiB).  This commit from 2004-12-20 added it:
        a54b52ea33abb1f5a44b52bcad5858ba41cd135d
        xfs copy now uses xfsdump and xfsrestore. icw some hacks in the other 2
    
    Issues:
    * This is increasing the minimum XFS file system size when copying it,
      which doesn't happen in the resize case for other file systems.
    * It allows an XFS file system to be created which is smaller than the
      minimum size allowed by GParted.  Copying an empty XFS file system can
      create a new file system as small as 26 MiB.  This is smaller than the
      minimum GParted allows of 32 MiB because that is the minimum
      xfs_repair can handle.
    
    Remove this addition when copying an XFS file system and enforce minimum
    file system size.
    
    2) Maximum size when copying a file system into empty space larger than
       it's maximum size
    
    Maximum size was set to maximum file system size - cylinder size
    (typically minus ~8 MiB).  Only applied to FAT16 which has a maximum
    file system size set in and can be grown.  Added by this commit from
    2004-12-15:
        10e8f3338d76e74c5fba22ff6c86888a67b99ae9
        :get_fs now returns a const reference. in copy and resizedialog
        ...
        * in copy and resizedialog filesystems with MAX set now have a max size of MAX - one cylinder .
    
    Issue:
    * This is applying a lower maximum resize when copying the file system
      compared to that when creating the file system.
      NOTE:
      GParted currently allows all file systems to be resize to any size,
      regardless of the maximum file system size.  This is probably an
      oversight, but it does allow libparted to convert FAT16 to FAT32 file
      system when resizing.
    
    Remove this lower maximum file system size when copying and resizing,
    compared to creating.
    
    Bug 749867 - Some limits are adjusted by arcane cylinder size amount
                 when copying and resizing in a single operation

2015-05-25  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove last trace of cylinder size adjustments in the resize dialog (#749867)
    
    This commit from 2010-05-20 removed use of cylinder size increase in the
    minimum, and cylinder size decrease in the maximum file system sizes
    from the resize/move dialog.
        e62a23b5b5f5dffff0bf83b0584bf33d0cc8e81e
        Add partition alignment option to align to MiB (#617409)
    
    This cylinder size limit adjustments were being performed using the
    Dialog_Base_Partition::BUF member variable.  Now in the
    Dialog_Partition_Resize_Move class it is never accessed, and only
    unnecessarily set.  Move BUF from the common base class into the
    Dialog_Partition_Copy class where it is still used.
    
    Bug 749867 - Some limits are adjusted by arcane cylinder size amount
                 when copying and resizing in a single operation

2015-05-16  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Small simplification of Win_GParted code which calls get_custom_text()
    
    Avoid long lines, long statements and repeated calls to
    gparted_core.get_filesystem_object( selected_partition.filesystem ) by
    storing the returned pointer in a local variable.
    
    Needs the previous commit so that the the local variable can be a
    pointer to a const FileSystem object instead of a pointer to a
    (modifiable) FileSystem object.

2015-05-16  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add const qualifier to get_custom_text() member functions
    
    The function never modifies any member variables so make it a const
    member function.
    
    (FileSystem::get_custom_text() is a virtual function so can't be made
    static).

2015-04-19  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Rename two GParted_Core methods to detect_filesystem*()
    
    Rename a couple of GParted_Core methods for consistency and to better
    distinguish get_filesystem() from get_filesystems() which do completely
    unrelated things.
    
      get_filesystem()                 -> detect_filesystem()
      recognise_filesystem_signature() -> detect_filesystem_internal()
    
    Also make detect_filesystem() a static member method as it doesn't use
    any member variables.  Requirement cascades to get_partition_path().

2015-04-25  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Make GParted_Core methods flush_device(), get_device(), etc static
    
    GParted_Core methods:
        flush_device()
        get_device()
        get_disk()
        get_device_and_disk()
        destroy_device_and_disk()
        commit()
        commit_to_os()
        settle_device()
    
    This group of methods only call libparted API functions and run external
    executables.  None of them access any GParted_Core member variables.
    Make them all static member functions.

2015-04-24  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Tidy-up GParted_Core::init/fini_filesystems() function declarations
    
    These member functions are only used within the GParted_Core class and
    only operate on the static member variable FILESYSTEM_MAP.
    
    Make both functions private and also make init_filesystems() static.

2015-04-24  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fix memory leak of FileSystem objects in init_filesystems() (#749036)
    
    The FileSystem objects stored in the FILESYSTEM_MAP are allocated once
    using new in init_filesystems() but never deleted.
    
    Valgrind output fragment:
    
        # valgrind --leak-check=full ./gparted
        ==29314== 353 (72 direct, 281 indirect) bytes in 1 blocks are definitely lost in loss record 6,287 of 6,905
        ==29314==    at 0x4A075FC: operator new(unsigned long) (vg_replace_malloc.c:298)
    >>  ==29314==    by 0x46EDA5: GParted::GParted_Core::init_filesystems() (GParted_Core.cc:106)
        ==29314==    by 0x46EC5F: GParted::GParted_Core::GParted_Core() (GParted_Core.cc:96)
        ==29314==    by 0x4A74F4: GParted::Win_GParted::Win_GParted(std::vector<Glib::ustring, std::allocator<Glib::ustring> > const&) (Win_GParted.cc:51)
        ==29314==    by 0x4D600A: main (main.cc:56)
        ...
        ==29314== 161 (72 direct, 89 indirect) bytes in 1 blocks are definitely lost in loss record 6,119 of 6,905
        ==29314==    at 0x4A075FC: operator new(unsigned long) (vg_replace_malloc.c:298)
    >>  ==29314==    by 0x46F50C: GParted::GParted_Core::init_filesystems() (GParted_Core.cc:124)
        ==29314==    by 0x46EC5F: GParted::GParted_Core::GParted_Core() (GParted_Core.cc:96)
        ==29314==    by 0x4A74F4: GParted::Win_GParted::Win_GParted(std::vector<Glib::ustring, std::allocator<Glib::ustring> > const&) (Win_GParted.cc:51)
        ==29314==    by 0x4D600A: main (main.cc:56)
    
    GParted_Core.cc source:
    
       102  void GParted_Core::init_filesystems()
       103  {
       104          FILESYSTEM_MAP[ FS_UNKNOWN ]         = NULL ;
       105          FILESYSTEM_MAP[ FS_CLEARED ]         = NULL ;
    >> 106          FILESYSTEM_MAP[ FS_BTRFS ]           = new btrfs() ;
       ...
    >> 124          FILESYSTEM_MAP[ FS_XFS ]             = new xfs() ;
       125          FILESYSTEM_MAP[ FS_BITLOCKER ]       = NULL ;
    
    Fix by deleting all FILESYSTEM_MAP pointers.  Note that delete on a NULL
    pointer is defined by C++ as a safe do nothing operation.
    
        C++ FAQ / Do I need to check for null before delete p?
        https://isocpp.org/wiki/faq/freestore-mgmt#delete-handles-null
    
    Fixing this reduces the valgrind reported definitely lost memory blocks
    count from 25 down to 6.  19 FileSystem objects deleted and 19 memory
    blocks no longer lost.
    
    Bug 749036 - FileSystem objects are memory leaked in init_filesystems()

2015-04-24  Daniel Șerbănescu <daniel@serbanescu.dk>

    Updated Romanian Translation

2015-04-22  Sveinn í Felli <sv1@fellsnet.is>

    Updated Icelandic translation

2015-04-22  Sveinn í Felli <sv1@fellsnet.is>

    Updated Icelandic translation

2015-04-18  Jordi Mas <jmas@softcatala.org>

    Fixes to Catalan translation

2015-04-07  Akom Chotiphantawanon <knight2000@gmail.com>

    Updated Thai translation

2015-04-01  Dušan Kazik <prescott66@gmail.com>

    Updated Slovak translation

2015-03-29  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2015-03-28  GNOME Translation Robot <gnome-sysadmin@gnome.org>

    Updated Scottish Gaelic translation

2015-03-27  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2015-03-27  GNOME Translation Robot <gnome-sysadmin@gnome.org>

    Updated Scottish Gaelic translation

2015-03-26  Curtis Gedak <gedakc@gmail.com>

    Minor change to help manual caution when copying a partition (#746559)
    
    Bug 746559 - Various operations fail when following paste into existing
                 partition

2015-03-22  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Refactor operation cases in apply_operation_to_disk() (#746559)
    
    Background:
    
    GParted_Core::calibrate_partition() reloads the partition path name and
    boundary to ensure they are correct before the operation is performed.
    (See comments in calibrate_partition() for the reasons why this is
    necessary).  This also displays details of the partition being modified
    in the operation details to inform the user.
    
    The operation object contains these relevant member objects:
    
      * partition_original
        Partition before the operation is applied.
    
      * partition_new
        Partition as it is intended to be after the operation has been
        applied.
    
      * partition_copied (for the copy operation only)
        Source partition being copied.
    
    Issues:
    
    GParted_Core::apply_operation_to_disk() was always calibrating partition
    object partition_original, but for about half the operations
    partition_original was not used and partition_new is used, so should be
    calibrated instead.
    
    Copy into an existing partition calibrated three partitions, the source,
    destination before and destination after the operation was applied.
    This doesn't really make sense in the operation details to the user.
    They would expect to only see the source and destination partitions and
    don't care about the distinction between the before and after
    representation of the destination.
    
    Minor issues:
    
    The previous fix had to copy the correct partition path from the
    calibrated partition_original object to the used partition_new object
    for the format, label file system, name partition and change uuid
    operations.
    
    Calibrate was called for the create operation too, even though the
    partition didn't yet exist.  It was a no-operation.
    
    Fix:
    
    Stop always calibrating the partition_original object and instead
    calibrate the correct partition object in each operation case.  For the
    copy into existing partition operation only calibrate the right two
    partition objects as the user would expect.
    
    Bug 746559 - Various operations fail when following paste into existing
                 partition

2015-03-22  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fix failing operations following paste into existing partition (#746559)
    
    Format, label file system and new UUID operations would fail when
    applied in a sequence to the destination partition following a previous
    copy-paste operation.
    
    Giving the copy of a file system a new label and a new UUID are the sort
    of actions which should be performed when the disk containing the copy
    remains attached to the same computer.  This really should work.
    
    Fragment of the failing operation details for a copy and label operation
    sequence:
    
        + Copy /dev/sdb1 to /dev/sdb2
          + calibrate /dev/sdb2
          + calibrate copy of /dev/sdb1
          + calibrate /dev/sdb1
          + check the file system on /dev/sdb1 for errors and (if possible fix them
          + copy file system of /dev/sdb1 to /dev/sdb2
        + Set file system label "small-dst" on copy of /dev/sdb1
          + calibrate copy of /dev/sdb1
              path: /dev/sdb2 (partition)
              ...
          + set file system label to "small-dst" on copy of /dev/sdb1
            + e2label copy of /dev/sdb1 "small-dst"
              Usage: e2label device [newlabel]
    
    This is failing because the file system specific command is passed
    "copy of /dev/sdb1" as the device name.  Code sequence:
    
     1) OperationCopy::OperationCopy() sets the real path name of the
        partition_new object to "copy of /dev/SRC" for display purposes.
    
     2) GParted_Core::apply_operation_to_disk() calls calibrate_partition()
        on partition_original object, restoring the real path name for
        object partition_original.
    
     3) apply_operation_to_disk() calls format(), label_filesystem() or
        change_uuid() on the partition_new object, which still has the real
        path name set to "copy of /dev/SRC".  File system specific commands
        fail with this as a path name.
    
    Fix by copying the real path name from object partition_original to
    partition_new, as is already done for the resize/move operation.  Also
    apply this fix to the name partition operation, because it uses the
    partition_new object and so that it displays the real path name in the
    operation details.
    
    Bug 746559 - Various operations fail when following paste into existing
                 partition

2015-03-26  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2015-03-25  Stas Solovey <whats_up@tut.by>

    Updated Russian translation

2015-03-17  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Name partitions as required when creating a new partition (#746214)
    
    When the partition is named in the Create New Partition dialog, set the
    partition name as part of the create partition operation.  Currently
    this is only supported for GPTs.  See
    Utils::get_max_partition_name_length() for details.
    
    Bug 746214 - Partition naming enhancements

2015-03-14  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add partition name to Create New Partition dialog (#746214)
    
    Add a partition name entry box to the Create New Partition dialog.  The
    entry box is greyed out (not sensitive) for partition table types which
    don't support partition naming.  Currently only supported for GPTs.  See
    Utils::get_max_partition_name_length() for details.
    
    There was a slightly wider gap between the file system combobox row and
    the label entry row when there were only three widgets on the right hand
    side of the dialog.  This has been removed now that there are four
    widgets so that they are all evenly spaced and they line up with the
    four widgets on the left hand side.
    
    So far the partition name can be entered and previewed, but isn't yet
    applied to the disk.
    
    Bug 746214 - Partition naming enhancements

2015-03-17  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Pass Device object when setting up Dialog_Partition_New (#746214)
    
    Adding a partition name entry to the Create New Partition dialog will
    need access to these two Device methods: partition_naming_supported()
    and get_max_partition_length().  The Set_Data() function already takes
    two parameters, only_unformatted and disktype, taken from Device member
    variables.
    
    Rather than add two more parameters to the Set_Data() function pass the
    Device object instead, replacing the current only_unformatted and
    disktype parameters.
    
    Bug 746214 - Partition name enhancements

2015-03-18  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove redundant Gtk::Entry calls in Create New Partition dialog
    
    This is a small tidy-up to remove Gtk::Entry method calls on the file
    system label entry box in the Create New Partition dialog which serve no
    purpose.
    
    filesystem_label_entry.set_activates_default( true );
        It trying to make the Create New Partition dialog automatically
        close  when Enter is pressed with focus in the label entry box.
        However this doesn't work, presumably because the default widget for
        the dialog is not the Add button.  Remove.
    
    filesystem_label_entry.set_text( partition.get_filesystem_label() );
        Initialises the text in the entry box with the file system label
        from the passed partition object.  The label is blank and the entry
        box defaults to blank.  Achieves nothing.  Remove.
    
    filesystem_label_entry.select_region( 0, filesystem_label_entry.get_text_length() );
        Highlights the empty text in the entry box.  Achieves nothing.
        Remove.
    
    NOTE:
    The same set of Gtk::Entry method calls in Dialog_FileSystem_Label() and
    Dialog_Partition_Name, which are editing the existing file system label
    and partition name respectively, do work and have a useful effect so
    shouldn't be removed.

2015-03-14  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Rename member object to filesystem_label_entry (#746214)
    
    Rename Gtk::Entry object entry -> filesystem_label_entry in the
    Dialog_Partition_New class.  This is in preparation for the introduction
    of the partition name entry box in the Create New Partition dialog.
    
    Bug 746214 - Partition name enhancements

2015-03-13  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Preserve partition name in preview of format operation (#746214)
    
    Preview of the format operation cleared the partition name, yet when
    applied, the partition name reappeared.  Fix the preview to reflect
    reality.
    
    Bug 746214 - Partition naming enhancements

2015-03-13  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Make support of naming for other partition table types possible (#746214)
    
    Previously partition naming had only been implemented for gpt.  Make the
    code ready to support naming of the other partition table types for
    which libparted supports naming.  Specifically: amiga, dvh, mac and
    pc98 in addition to gpt.  Document issues found with some of these
    partition table types, which can relatively easily been worked around.
    
    Leave support of naming for partition table types other than gpt
    disabled, mostly just to reduce ongoing testing effort, at least until
    there is any user demand for it.
    
    Bug 746214 - Partition naming enhancements

2015-03-13  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Allow partition naming on busy partitions (#746214)
    
    Allow partition names to be changed whether or not the partition is
    busy, rather than only when not busy, because it doesn't effect the busy
    file system or change the partition boundaries in any way.
    
    Bug 746214 - Partition naming enhancements

2015-03-14  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Only set lvm partition flag on tables which support it (#746204)
    
    Attempting to create a new partition on a pc98 partition table fails
    with the following libparted error:
    
        The flag 'lvm' is not available for pc98 disk labels.
    
    This has been broken since LVM2 Physical Volume read-write support was
    first added in this commit:
    
        c3ab62591b73266f43b379d9a7aef3be13f3c384
        Add creation of LVM2 PVs (#670171)
    
    Fix by only clearing and setting the lvm partition flag when the type of
    the partition table supports it.  When creating a partition to contain
    an LVM2 PV and the lvm flag is not support add the following message to
    the operation results to explain that setting the lvm partition flag was
    skipped and why:
    
        Skip setting unsupported partition flag: lvm
    
    Bug 746204 - Creating partitions on pc98 table fails with lvm flag not
                 available

2015-03-14  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Refactor set_partition_type() setting lp_partition earlier (#746204)
    
    Refactor GParted_Core::set_partition_type().
    
    1) Set lp_partition variable earlier and use a single if lp_partition
       set condition, rather than in both if conditions for the normal file
       system case and the LVM2 Physical Volume case.
    
    2) Stop calling Utils::get_filesystem_string() multiple times, instead
       save the result in a local variable.
    
    Tidies the code a little and reorders it in preparation for the
    following fix to only set the lvm partition flag when support, making
    that code change simpler.
    
    Bug 746204 - Creating partitions on pc98 table fails with lvm flag not
                 available

2015-03-23  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2015-03-23  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.22.0   ==========

2015-03-19  Cheng-Chia Tseng <>

    Updated Chinese (Taiwan) translation

2015-03-18  Stas Solovey <whats_up@tut.by>

    Updated Russian translation

2015-03-16  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2015-03-16  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2015-03-15  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2015-03-15  Aurimas Černius <aurisc4@gmail.com>

    Updated Lithuanian translation

2015-03-15  Alexandre Franke <alexandre.franke@gmail.com>

    Updated French translation

2015-03-14  Balázs Úr <urbalazs@gmail.com>

    Updated Hungarian translation

2015-03-14  Milo Casagrande <milo@ubuntu.com>

    Updated Italian translation

2015-03-14  Wolfgang Stöggl <c72578@yahoo.de>

    Updated German translation

2015-03-14  Daniel Korostil <ted.korostiled@gmail.com>

    Updated Ukrainian translation

2015-03-13  Samir Ribic <samir.ribic@etf.unsa.ba>

    Added Bosnian translation

2015-03-13  Enrico Nicoletto <liverig@gmail.com>

    Updated Brazilian Portuguese translation

2015-03-13  hanniedu <lafeber-dumoleyn2@zonnet.nl>

    Updated Dutch translation Master 3.16

2015-03-13  Sveinn í Felli <sv1@fellsnet.is>

    Updated Icelandic translation

2015-03-10  Curtis Gedak <gedakc@gmail.com>

    If available use udisks2-inhibit to prevent automounting (#745349)
    
    In order to prevent potential corruption of newly created file systems,
    when available use udisks2-inhibit with gpartedbin execution to prevent
    automounting.
    
    Original report:
    
    Xubuntu install fail due partition auto mount defeats Gparted
    https://bugs.launchpad.net/ubuntu/+source/thunar/+bug/1078445
    
    Some GNU/Linux distributions use the udisks2 "udisksd" daemon and have
    udisks2-inhibit at a known location.  The known location is not in the
    default PATH environment variable.
    
    One known distribution that matches this criteria is xubuntu 14.04.
    
    Interestingly neither kubuntu 14.04 nor ubuntu 14.04 appear to have the
    udisks2 "udisksd" daemon running and do not suffer from this specific
    automounting problem.
    
    Bug 745349 - gparted wrapper script needs updated for udisks2

2015-03-11  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2015-03-11  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2015-03-11  Baurzhan Muftakhidinov <baurthefirst@gmail.com>

    Updated Kazakh translation

2015-03-09  Curtis Gedak <gedakc@gmail.com>

    Update help manual for support of devices without partition tables (#743181)
    
    GParted now recognizes file system formats on disk devices without
    partition tables.  Update the manual with:
    
      - how to format a disk device without a partition table
      - manage flags not available for devices without partition tables
      - use format to cleared to delete a file system from an unpartitioned
        disk
    
    Bug 743181 - Add unpartitioned drive read-write support

2015-03-10  Dušan Kazik <prescott66@gmail.com>

    Updated Slovak translation

2015-01-18  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove unused device parameter from a few GParted_Core methods
    
    resize_move() and move() stopped using the device parameter in this
    commit from 2006-07-23:
        d663c3c277f60da2ac1785c039f25f7920a315e9
        removed cylindersize buffering during resize from the filesystems. It is
    
    create() stopped using the device parameter in this commit from 2006-03-19:
        ad9f2126e7fc92c16fffe839847dfe1c520146c8
        fixed issues with copying (see also #335004) cleanups + added FIXME added
    
    For reference most other operation methods had the device parameter
    removed in this earlier commit from 2005-12-07:
        642f0a145bc4b45a774dbf39e9cad4eb66afe56a
        from now on each partition has a reference to it's device. make use of new

2015-02-21  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fix failure to recognise whole disk file systems in certain cases (#743181)
    
    When the following conditions were met GParted would fail to recognise a
    newly created whole disk device file system, and instead show an unknown
    file system filling the disk:
    
    1) Disk was previously partitioned and contained at least one partition.
    
    2) Using libparted version 2.0 to 3.0 inclusive.
    
    Initial status:
        # blkid | fgrep sdc
        # fgrep sdc /proc/partitions
           8       32  976762584 sdc
           8       33  104857600 sdc1
        # parted /dev/sdc
        GNU Parted 2.4
        Using /dev/sdc
        Welcome to GNU Parted! Type 'help' to view a list of commands.
        (parted) print
        Model: ATA ST1000LM024 HN-M (scsi)
        Disk /dev/sdc: 1000GB
        Sector size (logical/physical): 512B/4096B
        Partition Table: msdos
    
        Number  Start   End    Size   Type     File system  Flags
         1      1049kB  107GB  107GB  primary
    
    When creating the loop partition table libparted would not inform the
    kernel to delete the old partitions.  /proc/partitions still contained
    the details of the old partitions.
        (parted) mktable loop
        Warning: The existing disk label on /dev/sdc will be destroyed and
        all data on this disk will be lost. Do you want to continue?
        Yes/No? Yes
        (parted) print
        Model: ATA ST1000LM024 HN-M (scsi)
        Disk /dev/sdc: 1000GB
        Sector size (logical/physical): 512B/4096B
        Partition Table: loop
    
        Number  Start  End  Size  File system  Flags
    
        (parted) quit
        # fgrep sdc /proc/partitions
           8       32  976762584 sdc
           8       33  104857600 sdc1
    
    Creation of the whole disk device file system goes unnoticed by blkid
    because the kernel and therefore blkid's cache have stale partition
    information.
        # mkfs.xfs -f /dev/sdc
        # blkid | fgrep sdc
    
    NOTE:
    On a Linux Software RAID array, as opposed to a hard disk, blkid does
    notice creation of the whole disk device file system.  However the
    kernel still has old partition details.
    
    This was fixed in libparted 3.1 by commit:
    
        http://git.savannah.gnu.org/cgit/parted.git/commit/?id=f5c909c0cd50ed52a48dae6d35907dc08b137e88
        libparted: remove has_partitions check to allow loopback partitions
    
    Fix by deleting old partitions before creating the loop table when
    compiled with a broken version of libparted.  The GParted UI provides
    no feedback while a new partition table is created, and with some
    versions of GTK the UI become unresponsive too, so it is important to be
    as fast as possible.  Evaluated three different methods, deleting 15 and
    22 MSDOS partitions on a physical 5400 RPM hard drive using libparted
    2.4:
    
    M1) Delete and commit one partition at a time.
        Takes up to 24 seconds to delete 15 partitions.  With 22 partitions
        libparted always reports finding some of the partitions busy and
        unable to inform the kernel about the modifications.
        Too slow and doesn't work.
    
    M2) Delete all partitions in one go and commit once.
        Takes up to 1.4 seconds to delete either 15 or 22 partitions.  Never
        removes partitions 17 and higher from the kernel.
        Doesn't work.
    
    M3) Write GPT table (letting libparted delete any old partitions).
        Takes up to 0.8 seconds to delete either 15 or 22 partitions.
        Fast and works.
    
    Use method 3 - write a GPT table thus using libparted code to inform the
    kernel of the old partition deletions.
    
    Bug 743181 - Add unpartitioned drive read-write support

2015-03-08  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Workaround older blkid not distinguishing between FAT16 and FAT32 (#743181)
    
    Older versions of blkid don't correctly distinguish between FAT16 and
    FAT32 file systems when overwriting one with the other.  This effects
    GParted too with these file systems on whole disk devices where only
    blkid is used to recognise the contents.  See previous fix for why only
    blkid is used in this case:
        Avoid whole disk FAT being detected as MSDOS partition table
        (#743181)
    
    Example:
    
        # blkid -v
        blkid from util-linux 2.20.1 (liblkid 2.20.0, 19-Oct-2011)
        # mkdosfs -F16 -I /dev/md1
        # blkid | fgrep md1
        /dev/md1: SEC_TYPE="msdos" UUID="7C23-95D9" TYPE="vfat"
        # mkdosfs -F32 -I /dev/md1
        # blkid | fgrep md1
        /dev/md1: SEC_TYPE="msdos" UUID="7F93-98F4" TYPE="vfat"
    
    So blkid recognised the UUID changed but didn't remove the SEC_TYPE for
    the FAT32 file system.  See FS_Info::get_fs_type() as it uses this to
    distinguish between FAT16 and FAT32.  This is a caching update bug in
    blkid, because telling blkid not to use the cache gets the right
    results:
    
        # blkid -c /dev/null | fgrep md1
        /dev/md1: UUID="7F93-98F4" TYPE="vfat"
    
    With testing determined that blkid from util-linux 2.23 and later are
    not affected and earlier versions are affected.  Mostly recently known
    affected distribution is Ubuntu 14.04 LTS with util-linux 2.20.1.
    
    The straight forward fix would be to instruct blkid to not use its cache
    with 'blkid -c /dev/null'.  But using blkid's cache is needed to prevent
    blkid hanging for minutes when trying to access a non-existent floppy
    drive when the BIOS is set incorrectly.  See commit:
    
        18f863151c82934fe0a980853cc3deb1e439bec2
        Fix long scan problem when BIOS floppy setting incorrect
    
    Instead, when using an older affected version of blkid and when blkid
    cache reports a vfat file system, run blkid again bypassing the cache.
    The device is known to exist and contain a vfat file system, just not
    whether it is a FAT16 or FAT32 file system, so can't be a non-existent
    floppy device and won't hang.
    
    Bug 743181 - Add unpartitioned drive read-write support

2015-02-19  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Avoid whole disk FAT being detected as MSDOS partition table (#743181)
    
    Libparted 1.9.0 to 2.3 inclusive, recognises whole disk device FAT file
    systems as MSDOS partition tables.  This causes GParted to do the same.
    
        # dd if=/dev/zero bs=1M of=/dev/md4
        # mkdosfs -F32 -v -I /dev/md4
        # blkid /dev/md4
        /dev/md4: UUID="53FE-31F2" TYPE="vfat"
    
        # parted /dev/md4
        GNU Parted 2.1
        Using /dev/md4
        Welcome to GNU Parted! Type 'help' to view a list of commands.
        (parted) print
        Model: Unknown (unknown)
        Disk /dev/md4: 536MB
        Sector size (logical/physical): 512B/512B
        Partition Table: msdos
    
        Number  Start  End  Size  Type  File system  Flags
    
        (parted) quit
    
        # /tmp/parted24/bin/parted /dev/md4
        GNU Parted 2.4
        Welcome to GNU Parted! Type 'help' to view a list of commands.
        (parted) print
        Model: Linux Software RAID Array (md)
        Disk /dev/md4: 536MB
        Sector size (logical/physical): 512B/512B
        Partition Table: loop
    
        Number  Start  End    Size   File system  Flags
         1      0.00B  536MB  536MB  fat32
    
        (parted) quit
    
    This was fixed in libparted 2.4 by commit:
    
        http://git.savannah.gnu.org/cgit/parted.git/commit/?id=616a2a1659d89ff90f9834016a451da8722df509
        libparted: avoid regression when processing a whole-disk FAT partition
    
    Make GParted immune to this bug by moving blkid performed whole disk
    device file system detection before libparted partition detection.  Also
    have to always erase old file system signatures on whole disk devices
    when creating new partition tables to ensure that blkid doesn't detect
    those old signatures before libparted has a chance to detect the new
    partition table.
    
    Bug 743181 - Add unpartitioned drive read-write support

2015-02-14  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Erase file system signatures before creating a partition table (#743181)
    
    When writing "loop" partition table over the top of some whole disk
    device file system types GParted continued to show those whole disk
    device file systems rather than the virtual unknown partition from the
    "loop" partition table.
    
    This affected btrfs, jfs, reiser4 and reiserfs.  It occurred because of
    several factors:
    1) Libparted only zeroed the first and last 9.5 KiB (assuming 512 byte
       sectors) of the device before writing a new partition table.  See
       ped_disk_clobber().
    2) These file systems have their super blocks and therefore signatures
       after the first 9.5 KiB.
    3) Whole disk device file system detection is performed using blkid
       before checking for a libparted "loop" partition table.  See
       GParted_Core::set_devices_thread().
    
    Ref:
    libparted 3.2: disk.c:ped_disk_clobber()
    http://git.savannah.gnu.org/cgit/parted.git/tree/libparted/disk.c?id=v3.2#n302
    
    Fix by always erasing any possible file system signatures on the device
    before creating a new "loop" partition table.
    
    NOTE:
    This is typically taking up to 0.5 seconds in my testing on a 5400 RPM
    hard drive, during which time the GParted UI is hung and the create
    partition table dialog shows the apply button pressed but no other
    progress indication.
    
    Bug 743181 - Add unpartitioned drive read-write support

2015-02-22  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Skip reading existing partition table before creating a new one (#743181)
    
    Creating a new partition table was getting libparted to read any
    existing partition table before creating a new partition table on the
    device.  This is an unnecessary step, and if the device didn't already
    contain a partition table also printed this error from libparted:
    
        /dev/sdb: unrecognised disk label
    
    Since get_device_and_disk() has been split into two, just call
    get_device() instead to just populate the PedDevice object representing
    the disk device.  Removes a small unnecessary step.
    
    Bug 743181 - Add unpartitioned drive read-write support

2015-02-17  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Correct whole disk device file system format to cleared preview (#743181)
    
    The preview of clearing a whole disk device file system was previewing
    the same as formatting to all other file system types; as a cleared file
    system spanning the whole disk device.  However when implemented this
    removes all signatures on the disk so it actually becomes an unallocated
    and unpartitioned device.  Make the preview match what happens in when
    implemented.
    
    GParted previously used mydevice.max_prims = -1 to represent an
    unpartitioned device.  It is now represented as:
    
        mydevice.max_prims = 1
        mydevice.disktype  = _("unrecognized")
        mydevice.partitions[0].type         = TYPE_UNALLOCATED
        mydevice.partitions[0].whole_device = true
        mydevice.partitions[0].filesystem   = FS_UNALLOCATED
    
    and the check for an unpartitioned device in Win_GParted.cc becomes:
    
        partitions[0].type == TYPE_UNALLOCATED && partitions[0].whole_device
    
    Bug 743181 - Add unpartitioned drive read-write support

2015-02-06  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Make "loop" table appear as unknown whole device file system (#743181)
    
    Previously GParted displayed a device containing the parted "loop"
    partition table signature "GNU Parted Loopback 0" and nothing else, as
    an unrecognised device.
    
    Now make GParted display this as a virtual whole disk device partition
    with unknown contents, complete with the unable to detect a file system
    warning.  This change then allows a whole disk device file system to be
    created with the following two steps:
    1) Create "loop" partition table on a device;
    2) Format to required file system.
    
    GParted represents a whole disk device file system as:
    
        mydevice.max_prims = 1
        mydevice.disktype  = "none"
        mydevice.partitions[0].type         = TYPE_PRIMARY
        mydevice.partitions[0].whole_device = true
        mydevice.partitions[0].filesystem   = FS_EXT4  (example)
    
    Now represents just Parted's "loop" signature as:
    
        mydevice.max_prims = 1
        mydevice.disktype  = "loop"
        mydevice.partitions[0].type         = TYPE_PRIMARY
        mydevice.partitions[0].whole_device = true
        mydevice.partitions[0].filesystem   = FS_UNKNOWN
    
    And as before, an unpartitioned device as:
    
        mydevice.max_prims = -1
        mydevice.disktype  = _("unrecognized")
        mydevice.partitions[0].type         = TYPE_UNALLOCATED
        mydevice.partitions[0].whole_device = true
        mydevice.partitions[0].filesystem   = FS_UNALLOCATED
    
    Bug 743181 - Add unpartitioned drive read-write support

2015-02-06  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Make resize of whole disk file systems work (#743181)
    
    Only allow resizing, not moving of a whole disk device file system.
    There is no actual partition to move and moving a file system away from
    the start of a disk only makes it unrecognisable.
    
    Also don't perform the partition resize step as there's no actual
    partition to be resized.  Only the file system is being resized.
    (Libparted actually allows the virtual partition spanning a whole disk
    device to be resized, implementing it as a no-operation, but only for
    recognised file systems.  For unrecognised file systems it fails with
    "unrecognised disk label").
    
    Note that the existing resize dialog was designed for resizing partition
    boundaries, and their contained file systems, not for resizing file
    systems within a fixed boundary.  The difference is noticeable when
    there is unallocated space because the file system doesn't fill the
    whole disk device.  The dialog starts resizing a virtual partition the
    size of the whole disk device, not the actual size of the file system.
    Leave addressing this for a possible future update.
    
    Bug 743181 - Add unpartitioned drive read-write support

2015-01-12  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Make copy into existing whole disk device file systems work (#743181)
    
    First, copying into a whole disk device fails on the set partition type
    step.  Fails with either libparted error "The flag 'lvm' is not
    available for loop disk labels" or "unrecognised disk label" depending
    whether libparted recognised the content and created a virtual partition
    or not.  (This is with libparted 2.4).
    
    Fix by just skipping setting the partition type on whole disk devices.
    
    Second, if any file system specific tools are used during the copy, they
    will fail because they are passed the device name as "copy of /dev/SRC"
    instead of "/dev/DST".  Occurs when either the destination whole disk
    device is not an identical size to the source so the file system check
    and grow steps are added, or when file system specific tools are used to
    copy the file system as with XFS or recent EXT2/3/4 tools.
    
    Fix by re-adding the real partition path from libparted for whole disk
    devices, as is already done for partitioned device names in
    GParted_Core::calibrate_partition().
    
    Bug 743181 - Add unpartitioned drive read-write support

2015-01-22  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Force creation of reiserfs on whole disk devices (#743181)
    
    Creation of reiserfs file system fails in GParted with the this error.
    
        # mkreiserfs -f --label "" /dev/sdb < /dev/null
        mkreiserfs 3.6.24
    
        /dev/sdb is entire device, not just one partition!
        Continue  (y/n):
        # echo $?
        1
    
    Add second force flag, -f, to the mkreiserfs command to make it work.
    
    Bug 743181 - Add unpartitioned drive read-write support

2014-01-03  Phillip Susi <psusi@ubuntu.com>

    Force creation of ext2/3/4 and ntfs on whole disk devices (#683643)
    
    Creation of ext2/3/4 and ntfs file systems fails in GParted on whole
    disk devices with these errors.
    
        # mkfs.ext4 -L "" /dev/sdb < /dev/null
        mke2fs 1.42.9 (4-Feb-2014)
        /dev/sdb is entire device, not just one partition!
        Proceed anyway? (y,n)
        # echo $?
        1
    
        # mkntfs -Q -v -L "" /dev/sdc
        /dev/sdc is entire device, not just one partition.
        Refusing to make a filesystem here!
        # echo $?
        1
    
    Add force flag, -F, to both mkfs commands to make them work.
    
    Bug 683643 - Doesn't properly support partitionless drives.

2015-01-10  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Make format work with whole disk devices (#743181)
    
    Formatting a whole disk device fails on the set partition type step with
    libparted error "unrecognised disk label".  This is because the previous
    step just cleared the old file system signatures leaving libparted with
    nothing to recognise.  Therefore libparted doesn't present a virtual
    "loop" partition table.
    
    As there is no partition table, there's no partition and no partition
    type.  Just skip setting the partition type on whole disk devices.
    
    Bug 743181 - Add unpartitioned drive read-write support

2015-01-10  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Make clearing signatures work with whole disk devices (#743181)
    
    This enables Format to Cleared operation to succeed on whole disk device
    file systems even when libparted doesn't recognise the file system.
    
    (Turns out that making calibrate work in the previous commit happened to
    make Format to Cleared operation succeed, but only if libparted
    recognised the file system on the whole disk device).
    
    Bug 743181 - Add unpartitioned drive read-write support

2015-02-08  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Report either partition or device in operational results (#743181)
    
    In the operational results of the calibrate step include the type of the
    path GParted is working with, either partition or whole disk device.  Do
    the same for the create empty partition step too for consistency, even
    though it only ever creates partitions.  Looks like:
    
        create empty partition
          path: /dev/sdb3 (partition)
          start: 2099200
          end: 4196351
          size: 2097152 (1.00 GiB)
    
        calibrate /dev/sdc
          path: /dev/sdc (device)
          start: 0
          end: 1953525167
          size: 1953525168 (931.51 GiB)
    
    Makes it explicit to the users what GParted has detected.  Helps the
    developers when looking at saved results to understand what decisions
    were made and why specific steps were performed or not.
    
    Bug 743181 - Add unpartitioned drive read-write support

2015-01-20  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Make calibrate work with whole disk devices (#743181)
    
    This enables the Check, Label and New UUID operations to succeed on
    whole disk device file systems even when libparted doesn't recognise the
    file system.
    
    This benefits reiser4 and lvm2 pv file systems with all versions of
    libparted, current version is 3.2, and for nilfs2 with libparted < 2.4.
    
    Bug 743181 - Add unpartitioned drive read-write support

2015-01-07  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Split get_device_and_disk() into two (#743181)
    
    get_device_and_disk() basically calls libparted to get a PedDevice
    object representing a disk device and a PedDisk object representing a
    partition table.  Re-implement get_device_and_disk() using two separate
    functions, get_device() and get_disk(), to get one of these objects
    each.
    
    No functionality changes with this commit.  It enables future commits to
    incrementally add support for whole disk devices into GParted without
    needing libparted to recognise the contents and create a virtual "loop"
    partition table.
    
    Bug 743181 - Add unpartitioned drive read-write support

2015-01-13  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Document workings of calibrate_partition() method
    
    Document the reasons why GParted_Core::calibrate_partition() needs to
    reload the device name and partition boundaries from libparted.

2014-12-31  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Enable operations on whole disk device virtual partitions (#743181)
    
    Enable operations on whole disk devices containing any recognised file
    system.
    
    The new partition operation on an empty whole disk device continues to
    display the "No partition table found on device /dev/DEVICE" information
    dialog.
    
    Specifically unsupported operations:
    
     *  Delete -
    
        Deletion of a partition only involves removal of the entry in the
        partition table leaving the file system intact on the disk.  However
        this doesn't work for a whole disk device file system.  Instead the
        file system signatures would have to be erased which is much more
        destructive and virtually impossible to undo.  Therefore don't
        implement whole disk device file system deletion.  Alternatives are
        to format the file system to cleared or create a partition table on
        the device.  Both of these imply overwriting the existing data and
        set the expectation that undo is not possible.
    
     *  Manage flags -
    
        There's no partition table, so there's no partition, so there's no
        flags.
    
    Resize/Move operation is being supported so that a whole disk device
    file system can be resized to handle devices which can be resize, such
    as those from SANs or Linux Software RAID arrays.  The start of the file
    system must remain fixed so move won't be allowed.
    
    So far only simple operations work if they don't need libparted support
    at all [1], or only need libparted support for the calibrate step AND
    the file system on the whole disk device is recognised by libparted [2].
    (Needs libparted to provide a "loop" partition, hence the recognition
    requirement, so that the calibrate step can successfully read the
    virtual "loop" partition table.  Doesn't matter whether it's an old
    version of libparted and it gets the name of the device wrong as GParted
    is already using the whole disk device name anyway).
    
    [1] Operations not needing any libparted support:
        Mount on, Unmount, Swapon, Swapoff, Activate and Deactivate
    
    [2] Operations only needing libparted support for the calibrate step:
        Check, Label, New UUID
    
    Bug 743181 - Add unpartitioned drive read-write support

2015-01-04  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add whole_device flag to the partition object (#743181)
    
    Need to be able to take different actions in the GParted_Core partition
    manipulation methods and in Win_GParted UI methods to deal with
    libparted supported partitions or whole disk devices without a partition
    table.  Add boolean whole_device to the partition object and set
    appropriately to allow for this.
    
    Bug 743181 - Add unpartitioned drive read-write support

2015-01-11  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Display failing activate/deactivate commands in error dialogs
    
    As was done with a failed mount operation, include the failed activate/
    deactivate command in the error dialog.  Two example error dialogs now
    look like this:
    
        (-) Could not deactivate swap
    
            # swapoff -v /dev/sdb7
            swapoff: /dev/sdb7: swapoff failed: Invalid argument
    
                                                        [  OK  ]
    
        (-) Could not unmount /dev/sdb6
    
            # umount -v "/mnt/6"
            umount: /mnt/6: not mounted
    
                               [  OK  ]

2015-01-11  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Second, try mounting file systems specifying the type (#742741)
    
    On RHEL/CentOS 6, GParted fails to mount nilfs2 file system like this:
    
        # mkfs.nilfs2 /dev/sdb1
        # mount /dev/sdb1 /mnt/1
        mount: you must specify the filesystem type
    
    This fails because mount internally uses libblkid to determine the file
    system type when it is not specified on the command line.  However on
    RHEL/CentOS 6 libblkid is too old to recognise nilfs2.
    
    GParted used libparted recognition first and blkid second.  Mount only
    uses libblkid.  When there are multiple signatures on a partition
    GParted may report a different result to blkid alone.  Therefore fix by
    first trying to mount the file system without specifying the type, as is
    already done, and if that fails, trying specifying the file system type.
    This allows GParted to mount nilfs2 file systems.
    
        # mount -t nilfs2 /dev/sdb1 /mnt/1
        # mount | fgrep sdb1
        /dev/sdb1 on /mnt/1 type nilfs2 (rw,gcpid=30946)
    
    And for unsupported file systems the error dialog from the failed mount
    command shows both commands like this:
    
        (-) Could not mount /dev/sdb3 on /mnt/3
    
            # mount -v /dev/sdb3 "/mnt/3"
            mount: unknown filesystem type 'reiser4'
    
            # mount -v -t reiser4 /dev/sdb3 "/mnt/3"
            mount: unknown filesystem type 'reiser4'
    
                                             [  OK  ]
    
    Bug 742741 - Nilfs2 file system is unusable on RHEL/CentOS 6

2015-01-11  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add lookup for Linux kernel names of mountable file systems (#742741)
    
    Function Utils::get_filesystem_kernel_name() returns the name of the
    file system as needed for use in the mount command:
        mount -t TYPE DEVICE DIR
    
    Needed because the kernel / mount name is 'hfsplus' where as libparted /
    GParted, as reported by Utils::get_filesystem_string(), calls it 'hfs+'.
    So far just added debugging when mounting a file system to test the
    function works.
    
        # ./gartedbin
        ======================
        libparted : 2.1
        ======================
        DEBUG: (hfsplus) # mount -v /dev/sdb5 "/mnt/5"
        DEBUG: (nilfs2) # mount -v /dev/sdb1 "/mnt/1"
    
    Bug 742741 - Nilfs2 file system is unusable on RHEL/CentOS 6

2015-01-10  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Include failing mount command in the error dialog (#742741)
    
    On RHEL/CentOS 6 GParted fails to mount nilfs2 file system.  Include the
    failing file system mount command in the error dialog so the user knows
    what command failed.  The error dialog now looks like:
    
        (-) Could not mount /dev/sdc1 on /mnt/1
    
            # mount -v /dev/sdc1 "/mnt/1"
            mount: you must specify the filesystem type
    
                                               [  OK  ]
    
    Also stop telling the dialog that the secondary text contains pango
    markup as the command line and error message certainly isn't pango
    markup text.
    
    Bug 742741 - Nilfs2 file system is unusable on RHEL/CentOS 6

2015-01-10  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add GParted internal detection of nilfs2 (#742741)
    
    GParted can create a nilfs2 file system on RHEL/CentOS 6, yet both
    libparted and blkid are too old to recognise it when created.  Add
    GParted internal detection of nilfs2 file systems.
    
    Easy way to get the required signature needed to recognise nilfs2 is
    using wipefs to report the signature bytes it erases, using a more up to
    date distribution.  So using CentOS 7:
    
        # mkfs.nilfs2 /dev/sdb1
        # wipefs -a /dev/sdb1
        /dev/sdb1: 2 bytes were erased at offset 0x00000406 (nilfs2): 34 34
    
    Also from util-linux source libblkid/src/superblocks/nilfs2.c
        #define NILFS_SB_MAGIC 0x3434
    
    Bug 742741 - Nilfs2 file system is unusable on RHEL/CentOS 6

2014-12-29  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Display libparted "loop" partition tables via "none" instead (#741430)
    
    For libparted recognised file systems covering the whole disk device,
    libparted reports the partition table as "loop".  With libparted 3.1 and
    earlier, the partition device was reported wrongly as /dev/sdb1, instead
    of /dev/sdb, by the ped_partition_get_path() call.  This causes GParted
    to fail to report file system usage, label and UUID, and busy status.
    Also multiple file system tool command errors from using the wrong
    device are displayed.
    
        # mkfs.ext4 -L whole-ext4 /dev/sdb
        # ./gpartedbin
    
    Example partition errors:
    
        e2label: No such file or directory while trying to open /dev/sdb1
        Couldn't find valid filesystem superblock.
    
        tune2fs 1.42.8 (20-Jun-2013)
        tune2fs: No such file or directory while trying to open /dev/sdb1
        Couldn't find valid filesystem superblock.
    
        dumpe2fs 1.42.8 (20-Jun-2013)
        dumpe2fs: No such file or directory while trying to open /dev/sdb1
        Couldn't find valid filesystem superblock.
    
        Unable to read the contents of this file system!
        Because of this some operations may be unavailable.
        This cause might be a missing software package.
        The following list of software packages is required for ext4 file
        system support: e2fsprogs v1.41+.
    
    This also breaks most of the manipulation operations, again because it
    is using the wrong device name.
    
    Fix by ignoring libparted's "loop" partition table and just let it get
    displayed via the "none" partition table mechanism.
    
    Doing this renders the direction taken in bug 683643 to make GParted
    work with libparted "loop" partition tables mute, as GParted no longer
    works with such partition tables.  Instead they are replaced by "none"
    partition tables within GParted.
    
        Bug 683643 - Doesn't properly support partitionless drives
        https://bugzilla.gnome.org/show_bug.cgi?id=683643
    
    Bug 741430 - GParted cannot recognise LVM signature on unpartitioned
                 drive

2014-12-28  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Set activate/deactivate partition menu item name earlier (#741430)
    
    So that, even though the menu item is greyed out, it is correctly named
    Activate or Deactivate for an LVM2 Physical Volume on a whole disk
    device, rather than the default Mount or Unmount.
    
    Bug 741430 - GParted cannot recognise LVM signature on unpartitioned
                 drive

2014-12-28  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Disable manipulation operations on "none" partition tables (#741430)
    
    At this time we are providing read-only support for file systems on
    whole disk devices.  Also all manipulation operations fail at the
    calibrate step with libparted error "unrecognised disk label", and
    manage flags is for real partitions only.
    
    Bug 741430 - GParted cannot recognise LVM signature on unpartitioned
                 drive

2014-12-27  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Display whole disk file systems via partition table "none" (#741430)
    
    For file systems which libparted recognises, when found on the whole
    disk device, it reports with partition table "loop" and a partition
    covering the whole disk.  GParted duly displays this to the user.
    
    For file systems which libparted doesn't recognise it reports
    "unrecognised disk label".  As of the latest libparted 3.2, these file
    system aren't recognised and can't currently be shown when on the whole
    disk device:
    
        BitLocker, Crypt LUKS, exFAT, F2FS, LVM2 Physical Volume,
        Linux Software RAID, ReFS, Reiser 4
    
    So only when libparted doesn't recognise a file system on the whole disk
    device and GParted does, either via blkid or it's internal code, display
    this with partition table "none".
    
    Bug 741430 - GParted cannot recognise LVM signature on unpartitioned
                 drive

2014-12-27  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Create helper function set_partition_label_and_uuid() (#741430)
    
    Move code which queries the file system label and UUID of a partition
    into a separate helper function.
    
    Bug 741430 - GParted cannot recognise LVM signature on unpartitioned
                 drive

2014-12-24  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Support querying whole disk devices for signatures (#741430)
    
    Make GParted_Core::get_filesystem() capable of recognising file system
    signatures on whole disk devices.  Pass NULL for lp_partition to make it
    read signatures from the whole disk rather than a specific partition.
    Add debugging to test it works.
    
        # fgrep sdb /proc/partitions
           8    16    8388608 sdb
        # lvm pvcreate /dev/sdb
         Writing physical volume data to disk "/dev/sdb"
         Physical volume "/dev/sdb" successfully created
        # ./gpartedbin
        ======================
        libparted : 1.8.1
        ======================
        Unable to open /dev/sdb - unrecognised disk label.
        DEBUG: /dev/sdb (lvm2 pv)
    
    Bug 741430 - GParted cannot recognise LVM signature on unpartitioned
                 drive

2014-12-29  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Rename local variable to fsname in get_filesystem() (#741430)
    
    Used 'fstype' as the name of local variable storing the FILESYSTEM
    enumeration type.
    
    'fs_type' was the name of the local variable storing the string with the
    name of the file system type.  Rename it to 'fsname' to distinguish it
    from the aforementioned variable.
    
    Bug 741430 - GParted cannot recognise LVM signature on unpartitioned
                 drive

2014-12-23  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Refactor GParted internal file system signature detection (#741430)
    
    Refactor GParted internal file system signature detection to remove code
    duplication.  There were 5 separate copies of code to: allocate a
    buffer, open, read and close the device, free the buffer and compare the
    signature.
    
    Bug 741430 - GParted cannot recognise LVM signature on unpartitioned
                 drive

2014-12-23  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Reorder crypt-luks detection (#741430)
    
    (1) Add recognition of LUKS signatures detected by blkid command, via
    the FS_Info cache.
    
    (2) Relocate internal GParted detection of LUKS signature to back after
    libparted and blkid identification.  This reverses previous commit:
    
        7695593d21a51422c230001083858e738b94c5e5
        Improve crypt-luks detection (#578300)
    
    Bug 578300 must have been caused by either: (1) reading stale data from
    the whole disk device, or (2) formatting as LUKS over the top of ext3
    leaving old signatures behind.  Case (1) has been resolved by commit:
    
        3bea067596e3e2d6513cda2a66df1b3e4fa432fb
        Flush devices when scanning to prevent reading stale signatures
        (#723842)
    
    Re-tested case (2) and find that no old signatures are left behind:
    
        # mkfs.ext3 /dev/sda8
        # wipefs /dev/sda8
        offset               type
        ----------------------------------------------------------------
        0x438                ext3   [filesystem]
                             UUID:  756dcd5f-73c5-4881-81ee-dc88e8b18f42
        # cryptsetup luksFormat /dev/sda8
        # wipefs /dev/sda8
        offset               type
        ----------------------------------------------------------------
        0x0                  crypto_LUKS   [crypto]
                             UUID:  de15ed1a-f461-46b7-803b-d0fd3b4bd680
    
    Bug 741430 - GParted cannot recognise LVM signature on unpartitioned
                 drive

2015-03-08  Josef Andersson <josef.andersson@gmail.com>

    Updated Swedish translation

2015-03-05  Stas Solovey <whats_up@tut.by>

    Updated Russian translation

2015-03-03  Marco Ciampa <ciampix@libero.it>

    Updated italian translation

2015-03-01  Balázs Úr <urbalazs@gmail.com>

    Updated Hungarian translation

2015-02-27  Γιάννης Κουτσούκος <giankoyt@gmail.com>

    Updated Greek translation

2015-02-22  Dušan Kazik <prescott66@gmail.com>

    Updated Slovak translation

2015-02-21  Maria  Mavridou <mavridou@gmail.com>

    Updated Greek translation

2015-02-16  Muhammet Kara <muhammetk@gmail.com>

    Updated Turkish translation

2015-02-11  Enrico Nicoletto <liverig@gmail.com>

    Updated Brazilian Portuguese translation

2015-02-08  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2015-02-06  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fix double quote error creating XFS file systems (#744108)
    
    Trying to create an XFS file system causes the following error and
    the create new xfs file system step to never complete.
    
        # ./gpartedbin
        ======================
        libparted : 2.4
        ======================
    
        (gpartedbin:15572): glibmm-CRITICAL **:
        unhandled exception (type Glib::Error) in signal handler:
        domain: g-shell-error-quark
        code  : 0
        what  : Text ended before matching quote was found for ". (The text was 'mkfs.xfs -f -L "mylabel" " /dev/sdb8')
    
    Creation of XFS file systems was broken by the extra stray double quote
    added to the command before the device name, by commit:
    
        63aeb150ace06f678241f514c550e51b22d2f823
        Rename member variables and methods in Partition class (#741424)
    
    Bug 744108 - Creating an XFS file system never completes

2015-02-03  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2015-01-14  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Correct dialog title displaying libparted exceptions (#743825)
    
    Encountered this dialog:
    
        Libparted Bug Found!
    
        (-) Invalid argument during seek for read on /dev/md1
    
                              [ Retry ] [ Cancel ] [ Ignore ]
    
    After investigation found that GParted was asking libparted to read from
    sector -1.  Libparted was actually reporting an error but GParted was
    incorrectly displaying this as a bug.  This was because setting the
    dialog title was falling through from the error case to the bug case.
    Fix this.
    
    Also provide unique titles for all libparted exception types so that
    they can all be distinguished.
    
     *  List of exceptions from libparted: enum _PedExceptionType
        http://www.gnu.org/software/parted/api/group__PedException.html
    
    Bug 743825 - gparted displaying dialog: libparted bug found!

2015-02-03  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2015-02-03  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2015-02-01  Curtis Gedak <gedakc@gmail.com>

    Add Mike Fleetwood to menu_help_about

2015-02-01  Curtis Gedak <gedakc@gmail.com>

    Fix incorrect email address in help manual

2015-02-01  Curtis Gedak <gedakc@gmail.com>

    Provide credit for help manual enhancements by Mike Fleetwood

2015-02-01  Curtis Gedak <gedakc@gmail.com>

    Provide credit for patch by Michael Zimmermann
    
    Provide credit for patch to add support for GPT partition names.
    Also indicate significant effort by Sinlu Bes while we tried different
    ideas for how GPT partition name support should work.

2015-01-31  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Describe the name partition operation in the Manual (#741424)
    
    Bug 741424 - Add support for GPT partition names

2015-01-31  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Use file system label terminology in the Manual (#741424)
    
    Update the GParted Manual to reflect the change in terminology from
    Partition Label to File System Label in the GParted GUI.  And make it
    explicit that it is the file system label in a partition being changed.
    
    Bug 741424 - Add support for GPT partition names

2014-12-12  Michael Zimmermann <sigmaepsilon92@gmail.com>

    Add support for GPT partition names (#741424)
    
    Embedded devices (Android) use GPT partition names to identify
    partitions, instead of file system labels.  Add support for viewing and
    changing them.
    
    As partition names are used to provide unique identification they are
    never copied when copying the contents of one partition to another.
    
    Note that GNU/Linux uses file system labels, UUIDs or device names for
    identification during the boot process and afterwards so while partition
    names can be used, they are optional and purely for user information.
    
    Bug 741424 - Add support for GPT partition names

2015-01-29  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove redundant second if condition in Display_Info()
    
    Remove second inner if condition performing the same check as the outer
    if:
        partition.type != GParted::TYPE_UNALLOCATED

2014-12-19  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Rename class to Dialog_FileSystem_Label (#741424)
    
    class Dialog_Partition_Label   -> Dialog_FileSystem_Label
    file Dialog_Partition_Label.h  -> Dialog_FileSystem_Label.h
    file Dialog_Partition_Label.cc -> Dialog_FileSystem_Label.cc
    
    Bug 741424 - Add support for GPT partition names

2014-12-19  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Rename class to OperationLabelFileSystem (#741424)
    
    class OperationLabelPartition   -> OperationLabelFileSystem
    file OperationLabelPartition.h  -> OperationLabelFileSystem.h
    file OperationLabelPartition.cc -> OperationLabelFileSystem.cc
    
    Bug 741424 - Add support for GPT partition names

2014-12-18  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Rename methods in GParted_Core and Win_GParted classes (#741424)
    
    class GParted_Core:
        label_partition() -> label_filesystem()
    
    class Win_GParted:
        allow_label_partition()    -> allow_label_filesystem()
        activate_label_partition() -> activate_label_filesystem()
    
    Bug 741424 - Add support for GPT partition names

2014-12-16  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Rename member variables and methods in Partition class (#741424)
    
    class Partition:
        have_label    -> have_filesystem_label
        label         -> filesystem_label
        label_known() -> filesystem_label_known()
        get_label()   -> get_filesystem_label()
        set_label()   -> set_filesystem_label()
    
    Bug 741424 - Add support for GPT partition names

2014-12-16  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Rename enum to OPERATION_LABEL_FILESYSTEM (#741424)
    
    This and the following few commits rename variables, methods, classes,
    etc from *label_partition* to *label_filesystem* so that the code also
    reflects that it is the label of the file system that is being modified
    and to separate it from the name partition operation about to be added.
    
    enum OPERATION_LABEL_PARTITION -> OPERATION_LABEL_FILESYSTEM
    
    Bug 741424 - Add support for GPT partition names

2014-12-15  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Rename Partition Label to File System Label in the GUI (#741424)
    
    Rename the Partition Label concept to File System Label throughout the
    GUI.  This is to better reflect that it is the label of the file system
    that is being modified and to separate it from the Partition Name
    concept about to be added.
    
    Bug 741424 - Add support for GPT partition names

2015-01-09  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Make swap usage match figures reported by swapon -s (#742647)
    
    GParted reports used figure of active swap space from 4 KiB upwards,
    actually 1 page, where as 'swapon -s' reports figures from 0 upwards.
    This is because GParted is counting the 1 page swap space overhead as
    used space.
    
        # sfdisk -s /dev/sdb1
        262144
        # mkswap /dev/sdb1
        # swapon /dev/sdb1
        # swapon -s
        Filename                Type            Size    Used    Priority
        /dev/sdb1               partition       262140  0       -1
    
    For this case GParted reports used as 4 KiB.
    (ptn size - swap size = 262144 - 262140 = 4)
    
    Instead make GParted report used figure without any overhead from 0
    upwards, matching what 'swapon -s' reports.
    
    Bug 742647 - Swap usage doesn't match figures reported by swapon -s

2015-01-26  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2015-01-26  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.21.0   ==========

2015-01-26  Curtis Gedak <gedakc@gmail.com>

    Update copyright year

2015-01-26  Enrico Nicoletto <liverig@gmail.com>

    Updated Brazilian Portuguese translation

2015-01-23  Alexandre Franke <alexandre.franke@gmail.com>

    Updated French translation

2015-01-23  Alexandre Franke <alexandre.franke@gmail.com>

    Updated French translation

2015-01-22  Anders Jonsson <anders.jonsson@norsjovallen.se>

    Updated Swedish translation

2015-01-20  Milo Casagrande <milo@ubuntu.com>

    Updated Italian translation

2015-01-19  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2015-01-19  Wolfgang Stöggl <c72578@yahoo.de>

    Updated German translation

2015-01-19  Daniel Korostil <ted.korostiled@gmail.com>

    Updated Ukrainian translation

2015-01-14  Phillip Susi <psusi@ubuntu.com>

    Fix off by one sector error in GParted internal block copy (#742920)
    
    GParted's internal block copy has an off by one sector bug when the
    source is before the destination; and the copy is performed backwards
    from high block to low block.  It is as though the source and
    destination partitions were both one sector earlier on the disk.
    
    In ASCII art it it looks like this:
    
    Initial layout:      x<--SRC--><--DST-->
    Actually wrote:               x<--SRC--
    Should have written:           <--SRC-->
    
    Affects moving partitions too.
    
    This bug has existed since commit:
    
        bd9e16f22fe3dfae73064369aadeda5de10b61be
        Thread the internal copy algorithm (#685740)
    
    Effectively the last sector of the partition is missed and one sector
    before the start of the partition is corrupted.  Most of the time file
    systems don't get around to using the very last sector so didn't notice.
    
    Bug 742920 - GParted internal copy is overstepping partition boundaries

2015-01-12  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2015-01-07  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Allow creation of reiser4 file systems on Linux 3.x (#742511)
    
    With reiser4progs 1.0.7 and earlier mkfs specifically checks for Linux
    kernel 2.5 or 2.6.  On Linux 3.x it fails with the following warning:
    
        # mkfs.reiser4 --yes --label "" /dev/sdb1
        Warn : Linux 3.13.0-39-generic is detected. Reiser4 does not support
        such a platform. Use -f to force over.
        # echo $?
        8
    
    This is fixed in reiser4progs 1.0.8 and later.  From the reiser4progs
    SourceForce README.txt:
    
        . Do not ask for confirmation to work under Linux-3.X;
    
    Found on Ubuntu 12.04 LTS and Ubuntu 14.04 LTS both with reiser4progs
    1.0.7 and a Linux 3.x kernel.
    
    Fix by adding "--force" flag to the mkfs command line.
    
    Bug 742511 - Creation of reiser4 file systems fails with unsupported
                 warning

2015-01-03  Rafael Ferreira <rafael.f.f1@gmail.com>

    Updated Brazilian Portuguese translation

2014-12-27  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Updated Serbian translation

2014-12-26  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2014-12-26  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2014-12-21  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2014-11-09  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Correctly capitalise GNOME in the Manual and man page (#739805)
    
    The GNOME Logo & Trademarks page
    (http://www.gnome.org/logo-and-trademarks/) says:
        * All the letters in "GNOME" should be capitalized.
    
    Also correctly capitalise the program name as GNOME Partition Editor in
    the Manual, and gparted.doap file (used in web git browser).
    
    Bug 739805 - GNOME is incorrectly capitalised on the website and else
                 where

2014-12-19  Balázs Úr <urbalazs@gmail.com>

    Updated Hungarian translation

2014-12-18  Richard Hughes <richard@hughsie.com>

    Add keywords to the desktop file

2014-12-14  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2014-12-07  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Refactor resize() to make it even easier to understand (#741211)
    
    Split the resizing file system and resizing partition calls in
    GParted_Core::resize() into separate grow and shrink code paths.
    
    Note that this also changes the degenerative case of calling resize()
    when the partition isn't changing size, for non-swap partitions, from a
    file system check step to a successful no-op.  This doesn't matter as my
    testing never found resize() to be called when the partition isn't
    changing size.
    
    Also correct spelling of local variable success.
    
    Bug 741211 - Remove unnecessary duplicate actions when resizing a
                 partition

2014-12-06  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Stop recreating linux-swap twice when shrinking a partition (#741211)
    
    Shrinking swap partition operation performs these steps:
    
        Shrink /dev/sdb2 from 2.00 GiB to 1.00 GiB
        + calibrate /dev/sdb2
        + check file system on /dev/sdb2 for errors and (if possible) fix them
            checking is not available for this file system
        + shrink file system
          + create new linux-swap file system
            + mkswap -L "test-swap" -U "bd381eba-5df7-42e2-8e0e-411e9701c995" /dev/sdb2
        + shrink partition from 2.00 GiB to 1.00 GiB
          + create new linux-swap file system
            + mkswap -L "test-swap" -U "bd381eba-5df7-42e2-8e0e-411e9701c995" /dev/sdb2
    
    Resizing a linux-swap partition was partially special cased in
    GParted_Core::resize().  Make it fully special cased so that it just
    does the following steps.  No more skipped file system checks or extra
    resizing.
    
        1)  Resize partition,
        2)  Recreate linux-swap.
    
    This existing call chain recreates the linux-swap:
        GParted_Core::resize_filesystem()
            linux_swap::resize()
    
    A compound move and resize operation still performs unnecessary checks
    and recreates of linux-swap, but less than before.
    
    Bug 741211 - Remove unnecessary duplicate actions when resizing a
                 partition

2014-12-06  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove second file system check when growing a partition (#741211)
    
    Shrinking a partition performs a single file system check step, but
    growing a partition still performs two file system checks.
    
        Grow /dev/sda8 from 1.00 GiB to 10.00 GiB
        + calibrate /dev/sda8
        + check file system on /dev/sda8 for errors and (if possible) fix them
        + grow partition from 1.00 GiB to 10.00 GiB
        + check file system on /dev/sda8 for errors and (if possible) fix them
        + grow file system to fill the partition
    
    This is a leftover from the early days of GParted when resizing a
    partition used cylinder buffering and performed three file system
    checks.  See prior to commit:
    
        d663c3c277f60da2ac1785c039f25f7920a315e9
        removed cylindersize buffering during resize from the filesystems.
    
    Remove the second file system check when growing a partition.
    
    Bug 741211 - Remove unnecessary duplicate actions when resizing a
                 partition

2014-11-14  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Avoid splitting Autoconf check message for libparted version (#740004)
    
    First use of PKG_CHECK_EXISTS causes additional checking messages to be
    reported which splits the libparted version check message from it's
    result, like this:
    
        checking for libparted >= 1.7.1 (querying pkg-config)... checking for pkg-config... /usr/bin/pkg-config
        checking pkg-config is at least version 0.9.0... yes
        2.3
    
    Call PKG_CHECK_EXISTS early, before first use to avoid this.  Output
    now looks like:
    
        checking for pkg-config... /usr/bin/pkg-config
        checking pkg-config is at least version 0.9.0... yes
        :
        checking for libparted >= 1.7.1 (querying pkg-config)... 2.3
    
    Bug 740004 - use pkg-config to check for version of libparted

2014-11-13  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Use pkg-config Autoconf check for libparted version first (#740004)
    
    Currently ./configure links and runs a program to query the libparted
    library version, which is used to determine the availability of some
    features.  This makes cross-compiling harder because the compile host
    has to fake a virtual installation target in which to run the check.
    Because of this, pkg-config based Autoconf checks are preferred.
    
    Switch to using a pkg-config based Autoconf check first to determine the
    version of libparted, falling back to the previous method for older
    distributions which don't provide a pkg-config file for libparted.
    
    Also small comment tidy-up elsewhere.
    
    Bug 740004 - use pkg-config to check for version of libparted

2014-11-03  Timo Jyrinki <timo@debian.org>

    Change Finnish translation team web page to l10n.gnome.org

2014-10-11  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Rework population of the create new partition file system list
    
    Simplify how the list of file system types is populated in the Create
    New Partition dialog.  Change from copying everything and removing
    unwanted items to only copying required items.  Makes the code simpler
    and therefore easier to understand.

2014-10-13  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Recognise ReFS file system (#738471)
    
    Only recognises ReFS file system.  No other actions are supported.
    Requires blkid from util-linux >= 2.24.
    
    Bug #738471 - ReFS file system is not recognised

2014-10-11  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Use supported_filesystem() predicate (#738471)
    
    Use GParted_Core::supported_filesystem() to remove the need to
    explicitly list the growing number of recognised, but otherwise
    unsupported, file system signatures in multiple places.
    
    Bug #738471 - ReFS file system is not recognised

2014-10-13  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add supported_filesystem() predicate method (#738471)
    
    Helper to check whether a recognised file system type is supported by
    GParted or not.  Supported means there is an implementation class and
    will appear in the File System Support dialog.
    
    Make supported_filesystem() a static member function so that it can be
    called without a class object so that GParted_Core::GParted_Core()
    initialiser isn't called multiple times.  This requires FILESYSTEM_MAP
    to become a static member variable too.
    
    Bug #738471 - ReFS file system is not recognised

2014-10-09  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Comment and re-order FILESYSTEM enumeration type

2014-10-09  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Pass by value to get_filesystem_object()
    
    get_filesystem_object() takes a constant reference to a FILESYSTEM, but
    FILESYSTEM is just an enumeration.  So that's a pointer to a constant
    int.  Just pass by value instead.

2014-10-28  Baurzhan Muftakhidinov <baurthefirst@gmail.com>

    Updated Kazakh translation

2014-10-18  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Check for e4fsprogs commands for ext4 support on RHEL/CentOS 5.x (#738706)
    
    RHEL / CentOS 5.6 and later officially support ext4 file system [1].
    From RHEL / CentOS 5.3 ext4 file system was included as a technology
    preview.  Ext4 file system tools are in a separate package e4fsprogs,
    using uniquely named commands.  The standard e2fsprogs commands only
    support ext2 and ext3 file systems.
    
        # mkfs.ext4 /dev/sdb3
        # tune2fs -l /dev/sdb3
        tune2fs 1.39 (29-May-2006)
        tune2fs: Filesystem has unsupported feature(s) while trying to open /dev/sdb3
        Couldn't find valid filesystem superblock.
        # echo $?
        1
        # tune4fs -l /dev/sdb3
        tune4fs 1.41.12 (17-May-2010)
        Filesystem volume name:   <none>
        Last mounted on:          <not available>
        Filesystem UUID:          ba4a9d58-7728-4b47-8a90-80e772615637
        Filesystem magic number:  0xEF53
        Filesystem revision #:    1 (dynamic)
        Filesystem features:      has_journal ext_attr resize_inode dir_index filetype extent flex_bg sparse_super large_file huge_file uninit_bg dir_nlink extra_isize
        ...
    
    For ext4 only, search for the e4fsprogs specific commands first and the
    standard e2fsprogs commands second.
    
    [1] RHEL 5.6 Release Notes, 5. Filesystems and Storage
    https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/5/html/5.6_Release_Notes/ar01s05.html
    
    Bug #738706 - GParted doesn't support ext4 on RHEL/CentOS 5.x

2014-10-20  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2014-10-20  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.20.0   ==========

2014-10-13  Milo Casagrande <milo@ubuntu.com>

    Updated Italian translation

2014-10-12  Wolfgang Stöggl <c72578@yahoo.de>

    Updated German translation

2014-10-12  Duarte Loreto <happyguy_pt@hotmail.com>

    Updated Portuguese translation

2014-10-12  Tiago S <almosthumane@portugalmail.pt>

    Updated Portuguese translation

2014-10-12  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Updated Serbian translation

2014-10-10  Claude Paroz <claude@2xlibre.net>

    Updated French help translation

2014-10-10  Claude Paroz <claude@2xlibre.net>

    Updated French translation

2014-08-23  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Reduce flashing redraw from automatic partition selection (#696149)
    
    Automatic selection of the largest unallocated partition caused flashing
    redraw of the partition graphic and partition list.  Both the partition
    graphic and partition list were being drawn blank then redrawn fully
    populated.  This only happened on some distributions including:
    CentOS 5.10, 6.5, 7.0, Debian 6, Fedora 14, 20, Xubuntu 14.04 LTS.  Did
    not happen on: Kubuntu 12.04 LTS.
    
    This is a workaround, not a complete fix.  It moves automatic selection
    of the largest unallocated partition to after processing of the GTK
    Event loop in Refresh_Visual() which redraws the partition graphic and
    partition list.  These visuals are now drawn only once, fully populated,
    however this draws them without the selected partition.  The partition
    selection is then drawn afterwards which causes the selection to flash
    instead.  This is significant improvement to the whole partition graphic
    and partition list flashing when redrawn.
    
    Bug #696149 - Double refresh of display introduced with default
                  unallocated space

2014-08-22  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Prevent flashing redraw of the devices combobox (#696149)
    
    The device combobox was getting drawn blank, then getting drawn again
    with the selected device.  This was happening because at the start of
    Win_GParted::refresh_combo_devices() the GTK model behind the combobox,
    liststore_devices, was cleared, changing the active item, causing the
    combobox to get redrawn empty.  After the GTK model had been repopulated
    the active item was reset causing the comboxbox to get redrawn again,
    now showing the selected device.  Call flow:
    
        Win_GParted::refresh_combo_devices()
            liststore_devices->clear()
                //Gtk::Combobox emits signal_change.  Registered callbacks
                //called.
                    Win_GParted::combo_devices_changed()
                        Win_GParted::Refresh_Visual()
                            ...
            ...
            combo_devices.set_active(current_device);
                //Gtk::Combobox emits signal_change.  Registered callbacks
                //called.
                    Win_GParted::combo_devices_changed()
                        Win_GParted::Refresh_Visual()
                            ...
    
    This has always been the case, since the device combobox was first added
    to GParted before version 0.1 by commit:
    
        3a4b43e0adb3974dea656fcbe90d5e191e0e9784
        replaced deprecated OptionMenu with ComboBox ...
    
    Fix by temporarily blocking the devices comboxbox from emitting
    signal_changed while the GTK model behind the combobox is recreated.
    
    However, since automatic selection of the largest free space was added
    [1] in GParted 0.15.0, a more noticeable flashing redraw issue was
    caused in which the partition graphic and partition list were both drawn
    blank then redrawn fully populated.  Some distributions were not
    affected by this at all, some only experienced a single flash and others
    suffered from two or more flashing redraws.  Some affected
    distributions: CentOS 5.10, 6.5, 7.0, Debian 6, Fedora 14, 19, 20,
    Ubuntu 13.10, Xubuntu 14.04 LTS.  Did not occur on Kubuntu 12.04 LTS.
    
    [1] 5b53c12f6ee12312a9bacb44b8b05b12a540d3d6
        Select largest unallocated partition by default (#667365)
    
    Bug #696149 - Double refresh of display introduced with default
                  unallocated space

2014-09-30  GNOME Translation Robot <gnome-sysadmin@gnome.org>

    Updated Scottish Gaelic translation

2014-09-20  Mike Fleetwood <mike.fleetwood@googlemail.com>

    README: Correct env variables to build using specific libparted version
    
    CPPFLAGS - Needed to instruct the compiler to use libparted include
    files, <parted/parted.h> etc, from the non-default location.
    
    LD_LIBRARY_PATH - Not needed to specify an additional directory to find
    libparted shared libraries at run time, as the linker build the
    additional directory into the executable based on the LD_RUN_PATH
    environment variable.

2014-09-14  Curtis Gedak <gedakc@gmail.com>

    Add section on building using a specific libparted version to README

2014-09-13  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Small update to source build instructions
    
    Make the standard three steps to build GParted more prominent by
    repeating them at the top of the Building from Source section in the
    README file.

2014-09-11  Balázs Úr <urbalazs@gmail.com>

    Updated Hungarian translation

2014-09-10  Dušan Kazik <prescott66@gmail.com>

    Updated Slovak translation

2014-09-09  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2014-09-05  Andika Triwidada <andika@gmail.com>

    Updated Indonesian translation

2014-09-01  Daniel Mustieles <dnaiel.mustieles@gmail.com>

    Updated Spanish translation

2014-08-31  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Prevent automake warning about deprecated INCLUDES (#735742)
    
    Automake 1.13 and later generates the following warning when building
    GParted from git:
    
        $ ./autogen.sh
        ...
        checking for automake >= 1.9...
          testing automake-1.13... found 1.13.4
        ...
        Running automake-1.13...
        src/Makefile.am:1: warning: 'INCLUDES' is the old name for 'AM_CPPFLAGS' (or '*_CPPFLAGS')
        ...
    
    INCLUDES name has been depreciated since automake 1.7.  GParted's
    autogen.sh and configure.ac require at least automake 1.9.  Therefore
    replace automake variable INCLUDES with AM_CPPFLAGS.
    
    Bug #735742 - automake warns INCLUDES is deprecated

2014-08-12  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Tidyup Autoconf check for --disable-doc (#734076)
    
    Use AC_ARG_ENABLE() and AS_HELP_STRING() macros to improve handling of
    the --disable-doc option.
    
    Change the names, and sence, of the Autoconf and Automake definitions
    used to control building of the help documentation.  Reasons are:
    (1) Switch from negative to positive statements which are more natural
        to comprehend.
    (2) Insert HELP in the names from *_DOC to *_HELP_DOC as they control
        building of the documentation in the help subdirectory, not the
        manual page in the doc directory.
    
    Autoconf: HAVE_DISABLE_DOC -> ENABLE_HELP_DOC
    Automake: DISABLE_DOC      -> BUILD_HELP_DOC
    
    Bug #734076 - Autodetect parted online partition resizing capability

2014-08-12  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Tidy up Autoconf check for --enable-libparted-dmraid (#734076)
    
    Use AC_ARG_ENABLE() Autoconf macro to set enable_libparted_dmraid
    variable to either yes or no in all cases, whether set on the command
    line or not.  Use AS_HELP_STRING() macro to format the option help text.
    
    Bug #734076 - Autodetect parted online partition resizing capability

2014-08-10  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Automatically enable online resize with libparted >= 3.2 (#734076)
    
    Configure script checks for libparted version >= 3.2 to automatically
    determine the availability of online resize capability in libparted.
    This can be overridden from the ./configure command line.  Override
    enable when an older version of libparted has been patched to include
    online resize support with:
    
        ./configure --enable-online-resize
    
    Override disable with libparted 3.2 or later to disable the feature when
    it is not wanted with:
    
        ./configure --disable-online-resize
    
    Note that GParted also requires, and checks for at runtime, Linux
    kernel >= 3.6 for online resize support.  See commit for more details:
    
        de2844d02df02ad6ccf0f2caf7f63622cf4d25de
        Add online resize support (#694622)
    
    Bug #734076 - Autodetect parted online partition resizing capability

2014-08-31  Hannie Dumoleyn <hannie@ubuntu-nl.org>

    Updated Dutch translation Master

2014-08-23  Josef Andersson <josef.andersson@gmail.com>

    Updated Swedish translation

2014-08-10  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Pass link libraries via LIBS variable into Makefiles (#734718)
    
    Currently -lparted is passed to the linker by being hard coded in the
    gpartedbin_LDFLAGS variable in src/Makefile.am and -lparted-fs-resize
    by conditionally being appended to the gpartedbin_LDFLAGS.
    
    Add an Autoconf AC_CHECK_LIB check for the parted library using it's
    default action-if-found to extend LIBS.  Update the existing
    AC_CHECK_LIB check for the parted-fs-resize library so that the
    overridden action-if-found also extends LIBS with -lparted-fs-resize.
    These libraries are then assigned via the LIBS variable in the
    generated Makefiles.
    
    This matches how the other libraries, dl and uuid, were found in the
    configure script and passed to the Makefiles.
    
    Bug #734718 - Update Autoconf version specific libparted checks and
                  defines to feature specific ones

2014-08-10  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Only check libparted version once and cache the result (#734718)
    
    Configure.ac still builds and runs very similar test executables twice
    to determine in the version of libparted is >= minimum require 1.7.1 and
    2.2 for improved partition re-read code.
    
    Build and run a single test to determine the version of libparted and
    cache the result.  Use this cached version number when testing the
    version of libparted.  Inspired by the version checking for intltool
    from /usr/share/aclocal/intltool.m4.
    
    Bug #734718 - Update Autoconf version specific libparted checks and
                  defines to feature specific ones

2014-08-06  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Only check for ped_file_system_resize() once if possible (#734718)
    
    If ped_file_system_resize() function is found in the parted library
    don't bother to go on to check for it in the parted-fs-resize library.
    
    Bug #734718 - Update Autoconf version specific libparted checks and
                  defines to feature specific ones

2014-08-06  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Rename HAVE_LIBPARTED_2_2_0_PLUS define into feature names (#734718)
    
        Remove HAVE_LIBPARTED_2_2_0_PLUS definition
    
    Rename version specific #define HAVE_LIBPARTED_2_2_0_PLUS into two
    separate feature specific names set as required:
    
        Name                                  Set when?
    
        ENABLE_PT_REREAD_WORKAROUND           (libparted < 2.2)
        USE_LIBPARTED_LARGE_SECTOR_SUPPORT    (libparted >= 2.2)
    
    Using feature specific #defines is the standard Autoconf way and makes
    the resultant conditional code easier to understand.  Still have to
    check the version of libparted though.
    
    Bug #734718 - Update Autoconf version specific libparted checks and
                  defines to feature specific ones

2014-08-05  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Use specific Autoconf check for FS resize capability in libparted (#734718)
    
        Replace Autoconf check for libparted >= 3.0
    
    Currently uses a custom check which compiles an executable to check for
    libparted version >= 3.0 to determine if the ped_file_system_resize()
    function exists in the parted library.
    
    Change to use a direct Autoconf check to determine the availability of
    the ped_file_system_resize() function in the parted library.
    
    Bug #734718 - Update Autoconf version specific libparted checks and
                  defines to feature specific ones

2014-08-05  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove little used HAVE_LIBPARTED_3_0_0_PLUS definition (#734718)
    
        Remove HAVE_LIBPARTED_3_0_0_PLUS definition
    
    The #define only controls whether fat16 and fat32 file systems are moved
    by libparted (for versions <= 2.4) or the GParted internal algorithm
    (for libparted versions >= 3.0).  See this commit for more details:
        0fda1d011d79c2e0e4d884e03947f2e4e8cec986
        Enable new fs resize library available with parted-3.1 (#668281)
    
    As nearly all other file system are moved using the GParted internal
    algorithm, just always use it to move fat16 and fat32 file systems too.
    
    Bug #734718 - Update Autoconf version specific libparted checks and
                  defines to feature specific ones

2014-08-05  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Use Autoconf check specifically for libparted-fs-resize (#734718)
    
        Remove HAVE_LIBPARTED_3_1_0_PLUS definition and replace Autoconf
        check for libparted >= 3.1
    
    Currently uses custom check which compiles an executable to check for
    libparted version >= 3.1 to determine the availability of the library
    parted-fs-resize and the need to include the header <parted/filesys.h>.
    
    Change to use a direct Autoconf check to determine the availability of
    the ped_file_system_resize() function in the parted-fs-resize library.
    Remove inclusion of the header <parted/filesys.h> as it has always been
    included via <parted/parted.h>, at least as far back as parted 1.8.0,
    and even in parted 3.0 when ped_file_system_resize() and libparted file
    system resize capability didn't exist.
    
    Bug #734718 - Update Autoconf version specific libparted checks and
                  defines to feature specific ones

2014-08-02  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Update AM_PROG_LIBTOOL to AC_PROG_LIBTOOL in configure.ac (#734718)
    
    AM_PROG_LIBTOOL is an old name and alias for AC_PROG_LIBTOOL.  Update.
    
    NOTE:
    In turn AC_PROG_LIBTOOL is an old name and alias for LT_INIT, but
    CentOS 5.x with libtool 1.5.22 doesn't have LT_INIT defined in
    /usr/share/aclocal/libtool.m4 serial 48, only AC_PROG_LIBTOOL and
    AM_PROG_LIBTOOL.  Therefore only update to AC_PROG_LIBTOOL and not
    LT_INIT while CentOS 5.x is supported.
    
    Bug #734718 - Update Autoconf version specific libparted checks and
                  defines to feature specific ones

2014-08-01  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Removed unused variable need_work_around from configure.ac (#734718)
    
    Bug #734718 - Update Autoconf version specific libparted checks and
                  defines to feature specific ones

2014-08-16  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2014-08-12  Curtis Gedak <gedakc@gmail.com>

    Add GParted Live USB flash drive tip to help manual (#734376)
    
    Add tip that the GParted Live image can be written to a USB flash
    drive to be used in computers that can boot from USB.
    
    Bug 734376 - Add GRUB 2 Restore Steps to GParted Manual

2014-08-12  Curtis Gedak <gedakc@gmail.com>

    Improve wording of fixing OS boot problem section in help manual (#734376)
    
    Place more emphasis on the instructions to restore GRUB, and less on
    other boot loaders.
    
    Bug 734376 - Add GRUB 2 Restore Steps to GParted Manual

2014-08-12  Curtis Gedak <gedakc@gmail.com>

    Remove duplication in fixing GRUB boot section of help manual (#734376)
    
    Part of the list of actions that could cause a computer to fail to
    boot were duplicated.  Remove this duplication from the fixing GRUB
    boot problems section of the help manual.
    
    Bug #734376 - Add GRUB 2 Restore Steps to GParted Manual

2014-08-12  Curtis Gedak <gedakc@gmail.com>

    Add GRUB Legacy live media boot step to help manual (#734376)
    
    Bug #734376 - Add GRUB 2 Restore Steps to GParted Manual

2013-09-03  Curtis Gedak <gedakc@gmail.com>

    Add GRUB 2 restoration steps to help manual (#734376)
    
    Also add short description of GRUB 2 and GRUB Legacy, and list of
    GNU/Linux distributions and which version started using GRUB 2.
    
    Bug #734376 - Add GRUB 2 Restore Steps to GParted Manual

2014-08-07  Daniel Mustieles <dnaiel.mustieles@gmail.com>

    Updated Spanish translation

2014-07-30  Enrico Nicoletto <liverig@gmail.com>

    Updated Brazilian Portuguese translation

2014-07-30  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2014-07-23  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Update parsing of btrfs filesystem show for multi-device membership (#733601)
    
    This patch changes the reading of the btrfs multi-device membership to
    resolve issue 1/2 by ignoring the exit status from the 'btrfs filesystem
    show' command and relying on parsing the required information to
    determine success or failure.
    
    Bug #733601 - Btrfs: Warnings and missing label with btrfs-progs 3.12
                  and 3.14

2014-07-23  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Update parsing of btrfs filesystem show for file system usage (#733601)
    
    Patch 3/4 - btrfs::read_label()
    
    This patch changes the btrfs file system usage reading code to resolve
    issue 1/2 by ignoring the exit status from the 'btrfs filesystem show'
    command and relying on parsing the required information to determine
    success or failure.
    
    Bug #733601 - Btrfs: Warnings and missing label with btrfs-progs 3.12
                  and 3.14

2014-07-23  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Update parsing of btrfs filesystem show for the label (#733601)
    
    Issue 2/2 - GParted doesn't show label for mounted btrfs file systems
    
    'btrfs filesystem show /dev/PTN' command is used to query details of a
    btrfs file system including reading the file system label.  When the
    file system is mounted the label is no longer enclosed in single quotes,
    but only when using btrfs-progs v3.12.  This causes GParted to think the
    label is blank when the file system is mounted and therefore no longer
    display it.
    
    File system label not enclosed in single quotes when mounted:
    
        # fgrep sdb1 /proc/mounts
        /dev/sdb1 /mnt/1 btrfs rw,relatime,space_cache 0 0
        # btrfs filesystem show /dev/sdb1
        Label: test1-btrfs  uuid: 1f78fa38-2f85-41d3-9be6-ae0356ae9469
                Total devices 1 FS bytes used 192.00KiB
                devid    1 size 2.00GiB used 240.75MiB path /dev/sdb1
    
        Btrfs v3.12
    
    File system label enclosed in single quotes when unmounted:
    
        # umount /dev/sdb1
        # btrfs filesystem show /dev/sdb1
        Label: 'test1-btrfs'  uuid: 1f78fa38-2f85-41d3-9be6-ae0356ae9469
                Total devices 1 FS bytes used 192.00KiB
                devid    1 size 2.00GiB used 240.75MiB path /dev/sdb1
    
        Btrfs v3.12
    
    Removing the single quotes enclosing the label makes the output
    identical to that from the older 'btrfs-show' command.
    
    Fix by using a common parser to extract the label from both the
    'btrfs filesystem show' and 'btrfs-show' commands which can read the
    label with and without enclosing single quotes.
    
    Patch 2/4 - btrfs::read_label()
    
    This patch changes the btrfs file system label parsing code to resolve
    issue 1/2 by ignoring the exit status from the 'btrfs filesystem show'
    command and relying on parsing the required information to determine
    success or failure.  Issue 2/2 is also resolved as described above.
    
    Bug #733601 - Btrfs: Warnings and missing label with btrfs-progs 3.12
                  and 3.14

2014-07-22  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Update parsing of btrfs filesystem show for the UUID (#733601)
    
    Issue 1/2 - GParted shows warnings for mounted btrfs file systems
    
    'btrfs filesystem show /dev/PTN' command is used to query details of a
    btrfs file system.  When the file system is mounted the command reports
    failed exit status 1, but only when using btrfs-progs v3.14 and v3.14.1.
    This causes GParted to: (1) report warnings from the failed commands for
    a mounted btrfs file system, (2) fail to determine file system usage
    figures and (3) fail to display the mount point and busy indicator for
    non-mounting devices in multi-device btrfs file systems.  The label is
    also read using the secondary blkid method via the FS_Info cache.
    
    Failed exit status 1 when the btrfs file system is mounted:
    
        # fgrep sdb1 /proc/mounts
        /dev/sdb1 /mnt/1 btrfs rw,seclabel,relatime,space_cache 0 0
        # btrfs filesystem show /dev/sdb1
        Label: 'test1-btrfs'  uuid: 033e6b07-ee6a-4620-a585-8580a2b83275
                Total devices 1 FS bytes used 192.00KiB
                devid    1 size 2.00GiB used 240.75MiB path /dev/sdb1
    
        Btrfs v3.14.1
        # echo $?
        1
    
    Successful exit status 0 when the btrfs file system is unmounted:
    
        # umount /dev/sdb1
        # btrfs filesystem show /dev/sdb1
        Label: 'test1-btrfs'  uuid: 033e6b07-ee6a-4620-a585-8580a2b83275
                Total devices 1 FS bytes used 192.00KiB
                devid    1 size 2.00GiB used 240.75MiB path /dev/sdb1
    
        Btrfs v3.14.1
        # echo $?
        0
    
    Fix by ignoring the exit status of the 'btrfs filesystem show' command
    and rely on parsing the required information to determine success or
    failure.  The output from the older 'btrfs-show' command is almost
    identical so the same code will parse it in all cases.
    
    Patch 1/4 - btrfs::read_uuid()
    
    This patch changes the secondary method used to read the btrfs UUID to
    resolve issue 1/2 as described above.
    
    Bug #733601 - Btrfs: Warnings and missing label with btrfs-progs 3.12
                  and 3.14

2014-03-23  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Flush devices when scanning to prevent reading stale signatures (#723842)
    
    While one partition is busy, reformat another partition from the command
    line.  Afterwards parted/libparted still detects the original file
    system and GParted shows errors from the file system specific tools
    reporting the new file system doesn't exist.  Only limitation is that
    the new new file system must be recognised by libparted (or by GParted's
    fallback file system signature detection).
    
    Case #1, File system reformatting:
    
        # parted /dev/sdb print
        Model: ATA SAMSUNG SSD UM41 (scsi)
        Disk /dev/sdb: 8012MB
        Sector size (logical/physical): 512B/512B
        Partition Table: msdos
    
        Number  Start   End     Size    Type     File system  Flags
         1      1049kB  2149MB  2147MB  primary  ext2
         2      2149MB  4296MB  2147MB  primary  ext2
        # mount | fgrep sdb
        /dev/sdb1 on /mnt/1 type ext2 (rw)
    
        # mkfs.xfs -f /dev/sdb2
        # blkid /dev/sdb2
        /dev/sdb2: UUID="c31823a2-b81b-46fa-8246-0a59695e4834" TYPE="xfs"
        # parted /dev/sdb print
        Model: ATA SAMSUNG SSD UM41 (scsi)
        Disk /dev/sdb: 8012MB
        Sector size (logical/physical): 512B/512B
        Partition Table: msdos
    
        Number  Start   End     Size    Type     File system  Flags
         1      1049kB  2149MB  2147MB  primary  ext2
         2      2149MB  4296MB  2147MB  primary  ext2
        # e2label /dev/sdb2
        e2label: Bad magic number in super-block while trying to open /dev/sdb2
        Couldn't find valid filesystem superblock.
        # dumpe2fs /dev/sdb2
        dumpe2fs 1.41.12 (17-May-2010)
        dumpe2fs: Bad magic number in super-block while trying to open /dev/sdb2
        Couldn't find valid filesystem superblock.
    
    Case #2, Removing device from multi-device btrfs:
    
        # btrfs filesystem show /dev/sdb1
        Label: none  uuid: a05db434-efd5-4e8c-902f-05f89a88b610
                Total devices 2 FS bytes used 156.00KB
                devid    2 size 2.00GB used 512.00MB path /dev/sdb2
                devid    1 size 2.00GB used 240.75MB path /dev/sdb1
    
        # mount /dev/sdb1 /mnt/1
        # btrfs device delete /dev/sdb2
        # btrfs filesystem show /dev/sdb1
        Label: none  uuid: a05db434-efd5-4e8c-902f-05f89a88b610
                Total devices 1 FS bytes used 92.00KB
                devid    1 size 2.00GB used 714.25MB path /dev/sdb1
        # btrfs filesystem show /dev/sdb2
    
    and GParted reports this error for partition /dev/sdb2:
        Unable to read the contents of this file system!
        Because of this some operations may be unavailable.
        The cause might be a missing software package.
        The following list of software packages is required for btrfs
        file system support:  btrfs-tools.
    
    This is another case of libparted reading from the whole disk device
    (/dev/sdb) yet the file system tools use the partition specific block
    device (/dev/sdb2), and the Linux buffer cache not providing cache
    coherency.  Previous scenario was fixed with:
    
        797f0b8eeb61f81da1791c3cf048b5c0abf9a550
        Flush device after wiping a file system (#688882)
    
    This affects libparted 2.0 to 3.1 inclusive and is fixed by:
    
        http://git.savannah.gnu.org/cgit/parted.git/commit/?id=fb99ba5ebd0dc34204fc9f1014131d5d494805bc
        Revert "linux-commit: do not unnecessarily open partition device nodes"
    
    Fix by calling ped_device_sync() to guarantee cache coherency for each
    device during scanning.
    
    Bug #723842 - GParted resizes the wrong filesystem (does not pass the
                  devid to btrfs filesystem resize)

2014-05-16  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Display btrfs members in the Partition Information dialog (#723842)
    
    Bug #723842 - GParted resizes the wrong filesystem (does not pass the
                  devid to btrfs filesystem resize)

2014-04-14  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fallback to reading mount command output instead of /etc/mtab (#723842)
    
    With linux 3.5 and later, the device used to mount a btrfs file system
    is updated in /proc/mounts when the previous mounting device is removed
    from the file system.  Most recent distributions make /etc/mtab a
    symbolic link to /proc/mounts.  However some still have /etc/mtab as a
    plain file only updated by mount and umount, thus showing the old device
    name which is no longer part of the file system.
    
    On Ubuntu 13.10, which has /etc/mtab as a plain file managed by mount
    and umount:
    
        # mkfs.btrfs /dev/sdb1
        # mount /dev/sdb1 /mnt/1
        # btrfs device add /dev/sdb2 /mnt/1
        # btrfs device delete /dev/sdb1 /mnt/1
        # sync
        # btrfs filesystem show /dev/sdb1
        # btrfs filesystem show /dev/sdb2
        Label: none  uuid: e47775a6-e5ad-4fb4-9ea4-1570aa5b4009
                Total devices 2 FS bytes used 28.00KB
                devid    2 size 2.00GB used 272.00MB path /dev/sdb2
    
        # fgrep btrfs /proc/mounts
        /dev/sdb2 /mnt/1 btrfs rw,relatime,space_cache 0 0
        # ls -l /etc/mtab
        -rw-r--r-- 1 root root 842 Apr 15 19:41 /etc/mtab
        # fgrep btrfs /etc/mtab
        /dev/sdb1 /mnt/1 btrfs rw 0 0
    
    This causes GParted to report /dev/sdb1 as busy and mounted at /mnt/1
    when it is no longer mounted.  This effects recent releases of Ubuntu,
    13.04, 13.10 and 14.04.
    
    Either /etc/mtab is a symlink and is identical to /proc/mounts or
    /etc/mtab is a plain file with wrong information.  Fix by not reading
    mounted file systems from /etc/mtab.
    
    However old distributions only contain 'rootfs' and '/dev/root' device
    names for the / (root) file system with '/dev/root' being a block device
    rather than a symlink to the true device.  For example from CentOS 5.x:
    
        # fgrep ' / ' /proc/mounts
        rootfs / rootfs rw 0 0
        /dev/root / ext3 rw,data=ordered 0 0
        # ls -l /dev/root
        brw------- 1 root root 8, 3 Jun  4  2013 /dev/root
    
    This prevents identification, and therefore busy detection, of the
    device containing the / (root) file system.  Used to read /etc/mtab to
    get the root file system device name.
    
        # fgrep ' / ' /etc/mtab
        /dev/sda3 / ext3 rw 0 0
        # ls -l /dev/sda3
        brw-r----- 1 root disk 8, 3 Jun  4  2013 /dev/sda3
    
    As per commit:
    
        409096f739118af95e3bff4484fdedb7885c97a2
        improved scanning for root mountpoint (/) ...
    
    but, as discussed above, this contains an out of date device name after
    the mounting device has been dynamically removed from a multi-device
    btrfs, thus identifying the wrong device as busy.  Instead fall back to
    reading mounted file systems from the output of the mount command, but
    only when required.
    
        # mount | fgrep ' / '
        /dev/sda3 on / type ext3 (rw)
    
    Bug #723842 - GParted resizes the wrong filesystem (does not pass the
                  devid to btrfs filesystem resize)

2014-04-20  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add fallback busy detection for btrfs file systems (#723842)
    
    In a number of cases there may be no btrfs device cache entry.  Some of
    the reasons why this can occur:
    1)  Mounting device removed from btrfs on linux <= 3.4 so old mount
        point in /proc/mounts;
    2)  btrfs and btrfs-show commands don't exist;
    3)  btrfs or btrfs-show command returned non-zero exit status;
    4)  get_cache_entry() failed to parse output from btrfs filesystem show
        or btrfs-show.
    
    Without a valid btrfs device cache entry, busy detection for all member
    devices fails.  Search the GParted internal mounted partitions map as
    the fallback busy detection method.  This can only determine if the
    mounting device is mounted or not, not any of the other members of a
    multi-device btrfs file system.
    
    Bug #723842 - GParted resizes the wrong filesystem (does not pass the
                  devid to btrfs filesystem resize)

2014-04-11  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Pass devid when resizing btrfs file systems (#723842)
    
    GParted doesn't specify the devid when resizing a btrfs file system, so
    the kernel defaults to resizing devid 1.  On a multi-device btrfs this
    may not be the same partition which GParted is resizing.  This will
    result in file system truncation and corruption.  Shrinking the wrong
    partition example:
    
        1)  Create a btrfs file system spanning 2 partitions:
                # mkfs.btrfs /dev/sdb1 /dev/sdb2
                # btrfs filesystem show /dev/sdb1
                Label: none  uuid: 41654265-9840-45c4-aca1-55989da358d6
                        Total devices 2 FS bytes used 112.00KiB
                        devid    1 size 2.00GiB used 437.50MiB path /dev/sdb1
                        devid    2 size 2.00GiB used 417.50MiB path /dev/sdb2
    
        2)  Resize /dev/sdb2 down to 1 GiB using GParted.  This command was
            run:
                btrfs filesystem resize 1048576K /tmp/gparted-ddyGRh
            which resized devid 1 (/dev/sdb1) to 1 GiB:
                # btrfs filesystem show /dev/sdb1
                Label: none  uuid: 41654265-9840-45c4-aca1-55989da358d6
                        Total devices 2 FS bytes used 256.00KiB
                        devid    1 size 1.00GiB used 437.50MiB path /dev/sdb1
                        devid    2 size 2.00GiB used 417.50MiB path /dev/sdb2
            but GParted instead resized /dev/sdb2 to 1 GiB:
                # sfdisk -s /dev/sdb1
                2097152
                # sfdisk -s /dev/sdb2
                1048576
    
    Even on a single device btrfs devid 1 may no longer exist if the file
    system has had the initial device removed from it.  Example:
    
        1)  Create a single btrfs file system, add a second device and
            remove the first:
                # mkfs.btrfs /dev/sdb1
                # mount /dev/sdb1 /mnt/1
                # btrfs device add /dev/sdb2 /mnt/1
                # btrfs device remove /dev/sdb1 /mnt/1
                # umount /mnt/1
                # btrfs filesystem show /dev/sdb2
                Label: none  uuid: 2cbf3ac3-1344-472a-a0c7-1476d23bdc9f
                        Total devices 1 FS bytes used 256.00KiB
                        devid    2 size 2.00GiB used 480.00MiB path /dev/sdb2
    
        2)  Again resize /dev/sdb2 down to 1 GiB using GParted.  This
            command was run:
                btrfs filesystem resize 1048576K /tmp/gparted-ddyGRh
            but it failed with:
                ERROR: unable to resize 'tmp/gparted-lEyGaY' - No such device
            A more informative error message was written to syslog:
                # tail -1 /var/log/messages
                Mar 12 14:15:01 localhost kernel: btrfs: resizer unable to find device 1
    
    This is with Linux kernel 3.13.5 on Fedora 20, circa March 2014.
    
    Fix by specifying the devid when resizing (part of) a btrfs file system.
    Example command specifying devid 2:
    
        btrfs filesystem resize 2:1048576K /tmp/1
    
    This will always work because it is the kernel which interprets the
    devid colon size parameter and has always done so since btrfs was first
    added to the kernel in version 2.6.32 [1].
    
    Reference:
    [1] linux v2.6.32 fs/btrfs/ioctl.c btrfs_ioctl_resize()
        https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/fs/btrfs/ioctl.c?id=v2.6.32#n578
    
    Bug #723842 - GParted resizes the wrong filesystem (does not pass the
                  devid to btrfs filesystem resize)

2014-04-10  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add devid to the cache of btrfs device information (#723842)
    
    Bug #723842 - GParted resizes the wrong filesystem (does not pass the
                  devid to btrfs filesystem resize)

2014-03-29  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Display usage for multi-device btrfs file systems (#723842)
    
    Currently GParted fails to report the usage of a multi-device btrfs file
    system if it is mounted or if the used space is larger than the size of
    an individual member device.  When GParted does display usage figures it
    also incorrectly reports the file system wide used figure against every
    member device.
    
    Mounted case:
        statvfs() provides an FS size which is larger than any individual
        device so is rejected.  See:
            GParted_Core::mounted_set_used_sectors()
                Utils::get_mounted_filesystem_usage()
                partition .set_sector_usage()
    
    Unmounted case, FS used > device size:
        FS used figure is larger than any individual device so free space is
        calculated as a negative number and rejected.  See:
            btrfs::set_used_sectors()
    
    Btrfs has a volume manager layer within the file system which allows it
    to provide multiple levels of data redundancy, RAID levels, and use
    multiple devices both of which can be changed while the file system is
    mounted.  To achieve this btrfs has to allocate space at two different
    level: (1) chunks of 256 MiB or more at the volume manager level; and
    (2) extents at the file data level.
    References:
    *   Btrfs: Working with multiple devices
        https://lwn.net/Articles/577961/
    *   Btrfs wiki: Glossary
        https://btrfs.wiki.kernel.org/index.php/Glossary
    
    This makes the question of how much disk space is being used in an
    individual device a complicated question to answer.  Further, the
    current btrfs tools don't provide the required information.
    
    Btrfs filesystem show only provides space usage information at the chunk
    level per device.  At the file extent level only a single figure for the
    whole file system is provided.  It also reports size of the data and
    metadata being stored, not the larger figure of the amount of space
    taken after redundancy is applied.  So it is impossible to answer the
    question of how much disk space is being used in an individual device.
    Example output:
    
        Label: none  uuid: 36eb51a2-2927-4c92-820f-b2f0b5cdae50
                Total devices 2 FS bytes used 156.00KB
                devid    2 size 2.00GB used 512.00MB path /dev/sdb2
                devid    1 size 2.00GB used 240.75MB path /dev/sdb1
    
    Fix by guesstimating the per device used figure as the fraction of the
    file system wide extent usage based on chunk usage per device.
    Calculation:
        ptn fs used = total fs used * devid used / sum devid used
    
    Positives:
    1) Per device used figure will correctly be between zero and allocated
       chunk size.
    
    Known inaccuracies:
    [for single and multi-device btrfs file systems]
    1) Btrfs filesystem show reports file system wide file extent usage
       without considering redundancy applied to that data.  (By default
       btrfs stores two copies of metadata and one copy of data).
    2) At minimum size when all data has been consolidated there will be a
       few partly filled chunks of 256 MiB or more for data and metadata of
       each storage profile (RAID level).
    [for multi-device btrfs file systems only]
    3) Data may be far from evenly distributed between the chunks on
       multiple devices.
    4) Extents can be and are relocated to other devices within the file
       system when shrinking a device.
    
    Bug #723842 - GParted resizes the wrong filesystem (does not pass the
                  devid to btrfs filesystem resize)

2014-03-25  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Display mount points for multi-device btrfs file systems (#723842)
    
    Linux can only show a single device name in /proc/mounts and /etc/mtab
    for each mounted btrfs, even if it is a multi-device file system.  So
    GParted only shows a mount point for one of the devices in the btrfs, no
    matter how many devices are part of the file system.
    
        # mkfs.btrfs /dev/sdb1 /dev/sdb2
        # btrfs filesystem show /dev/sdb1
        Label: none  uuid: 36eb51a2-2927-4c92-820f-b2f0b5cdae50
                Total devices 2 FS bytes used 156.00KB
                devid    2 size 2.00GB used 512.00MB path /dev/sdb2
                devid    1 size 2.00GB used 240.75MB path /dev/sdb1
        # mount /dev/sdb1 /mnt/1
        # grep btrfs /proc/mounts
        /dev/sdb1 /mnt/1 btrfs rw,seclabel,relatime,ssd,space_cache 0 0
    
    GParted only shows the mount point for /dev/sdb1 as /mnt/1, but nothing
    for /dev/sdb2.
    
    Make GParted report the same mount point for all devices included in a
    multi-device btrfs file system.
    
    Add btrfs specific get_mount_device() method to report the mounting
    device, if any, for the btrfs file system in the occupying the device in
    question.  Uses the existing cache of btrfs file system device
    membership.  Also extract common code from GParted_Core::
    set_mountpoints() into set_mountpoints_helper().
    
    Bug #723842 - GParted resizes the wrong filesystem (does not pass the
                  devid to btrfs filesystem resize)

2014-02-17  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Detect busy status of multi-device btrfs file systems (#723842)
    
    Busy detection of file systems works by checking if the device is
    mounted (appears in the mount_info map).  For a multi-device btrfs file
    system this will only report one of the devices as busy, not all of
    them.
    
        # btrfs filesystem show /dev/sdb1
        Label: none  uuid: 36eb51a2-2927-4c92-820f-b2f0b5cdae50
                Total devices 2 FS bytes used 156.00KB
                devid    2 size 2.00GB used 512.00MB path /dev/sdb2
                devid    1 size 2.00GB used 240.75MB path /dev/sdb1
        # mount /dev/sdb1 /mnt/1
        # grep btrfs /proc/mounts
        /dev/sdb1 /mnt/1 btrfs rw,seclabel,relatime,ssd,space_cache 0 0
    
    GParted will only report /dev/sdb1 as busy, but not /dev/sdb2.
    
    Add btrfs specific is_busy() method which reports the device as busy if
    any of the devices in the btrfs file system are mounted.  This uses a
    cache which maps device membership in all btrfs file systems.  The cache
    is cleared on GParted refresh and incrementally populated as each btrfs
    partition is checked for busy status.
    
    WARNING:
    Removal of the mounting device from a btrfs file system makes it
    impossible to determine whether the file system is mounted or not for
    linux <= 3.4.  This is because /proc/mounts continues to show the old
    device which is no longer a member of the file system.
    
        # btrfs device delete /dev/sdb1 /mnt/1
        # sync
        # grep btrfs /proc/mounts
        /dev/sdb1 /mnt/1 btrfs rw,seclabel,relatime,ssd,space_cache 0 0
        # btrfs filesystem show /dev/sdb1
        # btrfs filesystem show /dev/sdb2
        Label: none  uuid: 36eb51a2-2927-4c92-820f-b2f0b5cdae50
                Total devices 1 FS bytes used 28.00KB
                devid    2 size 2.00GB used 1.02GB path /dev/sdb2
    
    Fixed in linux 3.5 by commit:
        Btrfs: implement ->show_devname
        https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=9c5085c147989d48dfe74194b48affc23f376650
    
    Bug #723842 - GParted resizes the wrong filesystem (does not pass the
                  devid to btrfs filesystem resize)

2014-02-16  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add is_dev_mounted() to expose core partition is mounted test (#723842)
    
    Add static member function GParted_Core::is_dev_mounted() so that other
    modules can determine if a particular partition contains a mounted file
    system or not.
    
    Make it a static member function so that it can be called without
    needing the gparted_core object.  Extend to make the group of
    manipulated variables (mount_info, fstab_info) and manipulating
    functions (init_maps(), read_mountpoints_from_file(),
    read_mountpoints_from_file_swaps(), get_all_mountpoints()) static too.
    
    Bug #723842 - GParted resizes the wrong filesystem (does not pass the
                  devid to btrfs filesystem resize)

2014-03-18  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Restore busy detection of unknown mounted file systems (#723842)
    
    Previous commit:
        Make partition busy detection method selectable per file system
        (#723842)
    causes GParted to no longer detect an unknown mounted file system as
    busy.
    
    This is needed because there are many less popular file systems which
    Linux can mount but GParted doesn't recognise, such as: Acorn ADFS,
    AFFS, BeFS, BFS, etc.  Encountering an unrecognised mounted device can
    also occur with btrfs on Linux 3.4 and earlier when the mounting device
    is deleted from a multi-device btrfs file system.  Happens because
    /proc/mounts continues to show the original mounting device even after
    that device was deleted from the file system.
    
        # mkfs.btrfs /dev/sdb1
        # mount /dev/sdb1 /mnt/1
        # btrfs device add /dev/sdb2 /mnt/1
        # btrfs device delete /dev/sdb1 /mnt/1
        # btrfs filesystem sync /mnt/1
        # grep btrfs /proc/mounts
        /dev/sdb1 /mnt/1 btrfs rw,seclabel,relatime,ssd,space_cache 0 0
        # blkid /dev/sdb1
        # btrfs filesystem show /dev/sdb1
        # blkid /dev/sdb2
        /dev/sdb2: UUID="9c75647c-217a-4718-bcc7-f3ccd8cc7dc6" UUID_SUB="b5d43630-80d4-42ac-b406-185e97cd5bbe" TYPE="btrfs"
        # btrfs filesystem show /dev/sdb2
        Label: none  uuid: 9c75647c-217a-4718-bcc7-f3ccd8cc7dc6
                Total devices 1 FS bytes used 28.00KB
                devid    2 size 2.00GB used 1.02GB path /dev/sdb2
    
    Reinstate the search for mounted partitions for busy detection even for
    unrecognised file system types.
    
    Bug #723842 - GParted resizes the wrong filesystem (does not pass the
                  devid to btrfs filesystem resize)

2014-02-15  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Make partition busy detection method selectable per file system (#723842)
    
    GParted's primary inbuilt busy detection method is "is the partition
    mounted?".  A custom method is used for LVM2 PV because its not a
    mounted file system.
    
    Make busy detection selectable per file system type.
    
        .fs.busy = FS::NONE  (default)
            No busy detection.
    
        .fs.busy = FS::GPARTED
            Use internal GParted method which checks if the partition is
            mounted.
    
        .fs.busy = FS:EXTERNAL
            Call the file system type's member function is_busy().
    
    LVM2 PV busy detection changes from a special case to just electing to
    call the lvm2_pv::is_busy() method.  Linux Software RAID remains a
    special case because it's only recognised, but not otherwise supported.
    
    Bug #723842 - GParted resizes the wrong filesystem (does not pass the
                  devid to btrfs filesystem resize)

2014-07-06  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Make ./configure fail when C++ compiler is missing (#732803)
    
    Currently ./configure passes successfully even if a C++ compiler is not
    installed.  The first time building the code fails is when make tries
    to compile the first C++ source file and the compiler executable is not
    found.
    
    Also because there is no C++ compiler the autoconf generated test for
    Gtk::Window::set_default_icon_name() will always fail, leaving
    HAVE_SET_DEFAULT_ICON_NAME unset.  Therefore as well as installing a
    C++ compiler, ./configure must be run again to correctly test for
    set_default_icon_name().
    
    This is as a result of a little known consequence of having AC_PROG_CC
    proceed AC_PROG_CXX in the autoconf file configure.ac.
        Subject: AC_PROG_CXX behaviour when no C++ compiler is found
        http://lists.gnu.org/archive/html/bug-autoconf/2010-05/msg00001.html
    
    Reverse the order, placing AC_PROG_CXX before AC_PROG_CC, so that the
    generated ./configure script fails with an error if there is no C++
    compiler available.
    
    Bug #732803 - ./configure is successful even when C++ compile is missing

2014-07-15  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2014-07-15  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.19.1   ==========

2014-07-15  Wolfgang Stöggl <c72578@yahoo.de>

    Updated German translation

2014-07-14  Abderrahim Kitouni <a.kitouni@gmail.com>

    Updated Arabic translation

2014-07-14  Rafael Ferreira <rafael.f.f1@gmail.com>

    Updated Brazilian Portuguese translation

2014-07-13  Safa Alfulaij <safa1996alfulaij@gmail.com>

    Updated Arabic translation

2014-07-13  Daniel Șerbănescu <daniel [at] serbanescu [dot] dk>

    Updated Romanian Translation

2014-07-11  Daniel Korostil <ted.korostiled@gmail.com>

    Updated Ukrainian translation

2014-07-10  Milo Casagrande <milo@ubuntu.com>

    Updated Italian translation

2014-07-05  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Prevent cross thread write after free in _OnReadable() (#731752)
    
    Fragment of debugging and valgrind output:
    D: tid=2193 main()
    ...
    D: tid=2202 GParted_Core::set_devices_thread()
    ...
    D: tid=2202 Utils::execute_command(command="dumpe2fs -h /dev/sda1", output, error, use_C_locale=1)
    D: tid=2202 this=0x13fef4a0 PipeCapture::PipeCapture()
    D: tid=2202 this=0x13fef4f0 PipeCapture::PipeCapture()
    D: tid=2202 this=0x13fef4a0 PipeCapture::connect_signal()
    D:  sourceid=77
    D: tid=2202 this=0x13fef4f0 PipeCapture::connect_signal()
    D:  sourceid=78
    D: tid=2193 data=0x13fef4a0 PipeCapture::_OnReadable()
    D: tid=2193 this=0x13fef4a0 PipeCapture::OnReadable()
    D:  signal_update.emit()
    D:  return true
    D: tid=2193 data=0x13fef4f0 PipeCapture::_OnReadable()
    D: tid=2193 this=0x13fef4f0 PipeCapture::OnReadable()
    D:  signal_update.emit()
    D:  return true
    D: tid=2193 data=0x13fef4a0 PipeCapture::_OnReadable()
    D: tid=2193 this=0x13fef4a0 PipeCapture::OnReadable()
    D:  signal_update.emit()
    D:  return true
    D: tid=2193 data=0x13fef4f0 PipeCapture::_OnReadable()
    D: tid=2193 this=0x13fef4f0 PipeCapture::OnReadable()
    D:  signal_eof.emit()
    D:  return false
    D:  (!rc)  &(pc->sourceid)=0x13fef518
    D: tid=2193 data=0x13fef4a0 PipeCapture::_OnReadable()
    D: tid=2193 this=0x13fef4a0 PipeCapture::OnReadable()
    D:  signal_update.emit()
    D:  return true
    D: tid=2193 data=0x13fef4a0 PipeCapture::_OnReadable()
    D: tid=2193 this=0x13fef4a0 PipeCapture::OnReadable()
    D:  signal_update.emit()
    D:  return true
    D: tid=2193 data=0x13fef4a0 PipeCapture::_OnReadable()
    D: tid=2193 this=0x13fef4a0 PipeCapture::OnReadable()
    D:  signal_eof.emit()
    D: tid=2202 this=0x13fef4f0 PipeCapture::~PipeCapture()
    D:  sourceid=0
    D: tid=2202 this=0x13fef4a0 PipeCapture::~PipeCapture()
    D:  sourceid=77
    D:  return false
    D:  (!rc)  &(pc->sourceid)=0x13fef4c8
    ==2193== Thread 1:
    ==2193== Invalid write of size 4
    ==2193==    at 0x490580: GParted::PipeCapture::_OnReadable(_GIOChannel*, GIOCondition, void*) (PipeCapture.cc:56)
    ==2193==    by 0x38662492A5: g_main_context_dispatch (gmain.c:3066)
    ==2193==    by 0x3866249627: g_main_context_iterate.isra.24 (gmain.c:3713)
    ==2193==    by 0x3866249A39: g_main_loop_run (gmain.c:3907)
    ==2193==    by 0x3D7FD45C26: gtk_main (gtkmain.c:1257)
    ==2193==    by 0x469743: GParted::GParted_Core::set_devices(std::vector<GParted::Device, std::allocator<GParted::Device> >&) (GParted_Core.cc:155)
    ==2193==    by 0x4A78F1: GParted::Win_GParted::menu_gparted_refresh_devices() (Win_GParted.cc:1259)
    ==2193==    by 0x4A7886: GParted::Win_GParted::on_show() (Win_GParted.cc:1253)
    ==2193==    by 0x3D82B2009C: Gtk::Widget_Class::show_callback(_GtkWidget*) (widget.cc:3855)
    ==2193==    by 0x3867210297: g_closure_invoke (gclosure.c:777)
    ==2193==    by 0x3867221B86: signal_emit_unlocked_R (gsignal.c:3516)
    ==2193==    by 0x386722A0F1: g_signal_emit_valist (gsignal.c:3330)
    ==2193==  Address 0x13fef4c8 is not stack'd, malloc'd or (recently) free'd
    ==2193==
    
    PipeCapture.cc (with debugging):
        46  gboolean PipeCapture::_OnReadable( GIOChannel *source,
        47                                     GIOCondition condition,
        48                                     gpointer data )
        49  {
        50          std::cout << "D: tid=" << (long int)syscall(SYS_gettid) << " data=" << data << " PipeCapture::_OnReadable()" << std::endl;
        51          PipeCapture *pc = static_cast<PipeCapture *>(data);
        52          gboolean rc = pc->OnReadable( Glib::IOCondition(condition) );
        53          if (!rc)
        54          {
        55                  std::cout << "D:  (!rc)  &(pc->sourceid)=" << &(pc->sourceid) << std::endl;
        56                  pc->sourceid = 0;
        57          }
        58          return rc;
        59  }
    
    The use after free across threads only happens when an external program
    is being executed from a thread other than the main() thread.  This is
    because by default glib registered callbacks are run by the glib main
    loop, which is only called from the main() thread with Gtk::Main::run().
    
    Event sequence:
    tid=2193                      tid=2202
    
    main()
    ...
      GParted_Core::set_devices()
        Glib::Thread::create(... set_devices_thread ...)
        Gtk::Main::run()          GParted_Core::set_devices_thread()
                                  ...
                                    Utils::execute_command("dumpe2fs ... /dev/sda1" ...)
                                      Glib::spawn_async_with_pipes()
                                      PipeCapture outputcapture(out, output)
                                      outputcapture.connect_signal()
          //Glib main loop runs callback
          PipeCapture::_OnReadable()
            pc->OnReadable()
              //output read
              signal_update.emit()
              return true
          ...
          //Glib main loop runs callback
          PipeCapture::_OnReadable()
            pc->OnReadable()
              //eof reached
    [1]       signal_eof.emit()
                                      return status.exit_status
    [2]                               PipeCapture::~PipeCapture()
    [3]       return false
    [4]     pc->sourceid = 0
    
    What is happening is that the PipeCapture destructor [2] is running in
    the set_devices_thread() thread and freeing the object's memory as soon
    as signal_eof.emit() [1] has been called.  Then signal_eof.emit()
    returns back to OnReadable() which then returns false [3] back to the
    _OnReadable() callback function which then assigns 0 to sourceid member
    variable [4] in the already freed object, detected by valgrind as:
        Invalid write of size 4
           at ... GParted::PipeCapture::_OnReadable(...) (PipeCapture.cc:56)
    
    This is happening because PipeCapture member variable sourceid is being
    saved, in a different thread, just so the _OnReadable() callback can be
    removed.  However a glib IOChannel callback, type GIOFunc(), returning
    false will be automatically removed.
    
        GLib Reference Manual 2.26 / IO Channels
        https://developer.gnome.org/glib/2.26/glib-IO-Channels.html#GIOFunc
    
        GIOFunc()
    
        Returns : the function should return FALSE if the event source
                  should be removed
    
    Therefore fix by just not saving the event sourceid at all, and not
    calling g_source_remove() to manually remove the callback, but instead
    letting glib automatically remove the callback when it returns false.
    
    Bug #731752 - Write after free cross thread race in
                  PipeCapture::_OnReadable()

2014-06-18  MarMav <mavridou@gmail.com>

    Updated Greek translation

2014-06-12  Daniel Mustieles <dnaiel.mustieles@gmail.com>

    Updated Spanish translation

2014-06-10  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2014-06-10  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.19.0   ==========

2014-06-09  Alexandre Franke <alexandre.franke@gmail.com>

    Updated French translation

2014-06-04  Andika Triwidada <andika@gmail.com>

    Updated Indonesian translation

2014-06-03  Muhammet Kara <muhammetk@gmail.com>

    Updated Turkish translation

2014-05-19  GunChleoc <fios@foramnagaidhlig.net>

    Updated Scottish Gaelic translation

2014-04-01  Phillip Susi <psusi@ubuntu.com>

    Change OperationDetail to not store complex objects in STL containers (#729139)
    
    OperationDetail was storing its children in a std::vector.  This means they
    can be moved around in memory arbitrarily, going through indeterminate
    lifetimes.  This is generally a bad thing for any non trivial object and
    in the case of OperationDetail, it created havoc with the way it maintains
    pointers between parent/child objects for signal connections.  It will now
    keep only pointers to children in a std::vector instead, so their lifetime
    can be controlled, fixing various crashes.
    
    Bug 729139 - Refactor OperationDetail to address random behavior

2014-05-10  Phillip Susi <psusi@ubuntu.com>

    Prevent GSource double-destroy warning messages (#729800)
    
    Returning false from the OnReadable callback causes the source to
    be destroyed, but PipeCapture::~PipeCapture was destroying it a
    second time.  Prevent this by zeroing out the sourceid.
    
    Bug 729800 - Prevent GSource double-destroy warning messages

2014-05-18  Seong-ho Cho <shcho@gnome.org>

    Updated Korean translation

2014-05-14  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2014-05-01  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2014-04-30  Rafael Ferreira <rafael.f.f1@gmail.com>

    Updated Brazilian Portuguese translation

2014-04-27  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Make LVM members selectable together in delete non-empty PV dialog
    
    Place the LVM2 member names in a single string, separated by new lines,
    so that they can be selected all together by the user.  This was not
    previously possible when each member name was placed in a separate
    widget.

2014-04-26  Curtis Gedak <gedakc@gmail.com>

    Set top vertical alignment for multi-line field and value label pairs
    
    A LVM volume group can contain more than one member and comprise a
    multi-line entry.  As such set the "Members" field header and value
    label pair to top vertical alignment.

2014-04-26  Curtis Gedak <gedakc@gmail.com>

    Add optional yalign argument to Utils::mk_label() method
    
    As part of the work on bug 652044 - uses deprecated APIs, selectable
    vertical alignment was defaulted to ALIGN_CENTER for all labels.  The
    relevant commits can be viewed in comment 26 of said bug report.
    https://bugzilla.gnome.org/show_bug.cgi?id=652044#c26
    
    For multi-line labels a vertical ALIGN_CENTER value is not
    consistently aesthetically pleasing.  This becomes obvious when a
    single-line heading label is paired with a multi-line value label.
    To improve the aesthetics, a vertical alignment of ALIGN_TOP is
    preferred.
    
    Hence re-add the ability to optionally specify a vertical alignment for
    labels.  If a yalign value is not specified a default vertical alignment
    of ALIGN_CENTER is used.

2014-04-26  Curtis Gedak <gedakc@gmail.com>

    Remove unused text_color argument from Utils::mk_label() method
    
    None of the current GParted code uses the text_color argument for
    Utils::mk_label().  Remove unused argument to simplify code.

2014-04-25  Curtis Gedak <gedakc@gmail.com>

    Remove partition information vgname from status field (#690542)
    
    With the volume group name displayed immediately below the status field,
    the vgname is no longer needed in the status field.
    
    Bug 690542 - Partition Information Dialog Warning not readable

2014-04-25  Curtis Gedak <gedakc@gmail.com>

    Center the data below the partition information graphic (#690542)
    
    When the partition information dialog is resized, the data below the
    partition graphic would remain left aligned.  Improve the aesthetics by
    horizontally centering the data in the window similar to the partition
    graphic.
    
    Bug 690542 - Partition Information Dialog Warning not readable

2014-04-24  Curtis Gedak <gedakc@gmail.com>

    Place partition information LVM2 member names in string list (#690542)
    
    Placing the LVM2 member names in a string list enables the member names
    to be selected all at once by a user.  This was not possible with
    separate label widgets for each LVM2 member name.
    
    Bug 690542 - Partition Information Dialog Warning not readable

2014-04-22  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove shadow border from partition information scrollable region (#690542)
    
    Bug 690542 - Partition Information Dialog Warning not readable

2014-04-14  Curtis Gedak <gedakc@gmail.com>

    Make the partition information dialog resizable (#690542)
    
    Make the dialog resizable, add a vertical scrollbar to the information
    and messages section, and set the initial height to ensure the dialog
    fits entirely on an 800x600 screen.
    
    A default height is required because some window managers, such as
    fluxbox used in GParted Live, only permit resizing the height by using
    the bottom corners of the dialog.  If the dialog is too large for the
    screen then the user would not be able to resize it.
    
    Note that two default initial heights are used in an effort to minimize
    the amount of extra whitespace.
    
    Bug 690542 - Partition Information Dialog Warning not readable

2014-04-13  Curtis Gedak <gedakc@gmail.com>

    Place partition information percentages in their own column (#690542)
    
    On some desktop environments, such as Unity on Ubuntu 13.04, the
    partition information dialog can display the used/unused/unallocated
    field values overlapping with the "(##%)" percentage value.  The problem
    is pronounced for values with 4 digits to the left of the decimal (for
    example a 1024 MiB partition ).  To address this problem, these
    percentages are placed in their own column.
    
    Bug 690542 - Partition Information Dialog Warning not readable

2014-03-30  Curtis Gedak <gedakc@gmail.com>

    Organize partition information into two field & value columns (#690542)
    
    Organize the partition information field & value areas into two columns
    to minimize the amount of vertical space required.
    
    This is part of a series of changes to enable viewing all partition
    information details on a minimum 800x600 display.
    
    Part of Bug 690542 - Partition Information Dialog Warning not readable

2014-03-30  Curtis Gedak <gedakc@gmail.com>

    Add partition information section titles and indent fields (#690542)
    
    This is part of a series of changes to enable viewing all partition
    information details on a minimum 800x600 display.
    
    Part of Bug 690542 - Partition Information Dialog Warning not readable

2014-03-29  Curtis Gedak <gedakc@gmail.com>

    Organize partition information fields into logical sections (#690542)
    
    This is part of a series of changes to enable viewing all partition
    information details on a minimum 800x600 display.
    
    Part of Bug 690542 - Partition Information Dialog Warning not readable

2014-03-23  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Initialise file system objects only once
    
    The code used to unnecessarily destroy and re-create the file system
    objects on every scan for file system support tools.
    
    Instead only create the file system objects once and just call each
    object's get_filesystem_support() method on each rescan.

2014-02-12  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove set_proper_filesystem() method
    
    Prior to commit:
    
        1f3b11748e99c0b56fed35a3fc77b2da5dc3072e
        Remove GParted_Core::p_filesystem (#683149)
    
    set_proper_filesystems() used to set GParted_Core::p_filesystem member
    variable to one of the FileSystem objects, but that was just treating it
    like a local variable.  After the commit local variables named
    p_filesystem were used where required and set_proper_filesystem() became
    a function which did nothing other than call get_filesystem_object().
    
    Now remove set_proper_filesystem() altogether and use
    get_filesystem_object() in its place.

2014-02-16  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove unused member variable GParted_Core::buf

2014-02-22  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove outdated comment about ped_partition_is_busy() for DMRaid devices
    
    Comment is outdated after GParted stopped using ped_partition_is_busy()
    for busy partition detection of normal and logical partitions since
    commit:
    
        420299206323fb49da5ba099b9f51cba95e58603
        Fix false busy detection of unusual case with Linux Software RAID (#712533)

2014-04-18  Jan Simon <jan.simon@gmx.de>

    Updated German translation

2014-04-15  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2014-04-15  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2014-04-08  Rafael Ferreira <rafael.f.f1@gmail.com>

    Updated Brazilian Portuguese translation

2014-04-04  Piotr Drąg <piotrdrag@gmail.com>

    doap: update URLs

2014-03-30  Andika Triwidada <andika@gmail.com>

    Updated Indonesian translation

2014-03-14  Joe Hansen <joedalton2@yahoo.dk>

    Updated Danish translation

2014-03-03  Curtis Gedak <gedakc@gmail.com>

    Avoid using String::ucompose to build command lines
    
    The String::ucompose method is for easy, i18n-friendly composition of
    strings with Gtkmm.  From past experience, String::ucompose should not
    be used to build command lines due to differences in how locales handle
    number translation.  More specifically, not all locales use number
    separators (spaces, commas or periods) and the decimal separator
    (period or comma) in the same way.
    
    The problem with using String::ucompose for command lines was
    originally encountered and corrected in the following commit:
    
    Fix attempt data rescue fail to open read-only view (#673246)
    e494eca1f7798d98cc4e83fb2875f1c409d0ac98

2014-01-05  Phillip Susi <psusi@ubuntu.com>

    Use e2image to move/copy ext[234] file systems (#721516)
    
    Use e2image features added in e2fsprogs 1.42.9 to move/copy
    an ext[234] file system more efficiently by skipping unused blocks.
    Fall back to the internal copy algorithm if e2image is not found
    or does not support move/copy.
    
    Bug #721516 - Use e2image to move/copy ext[234] filesystems

2014-03-03  GunChleoc <fios@foramnagaidhlig.net>

    Updated Scottish Gaelic translation

2014-02-19  Rūdolfs Mazurs <rudolfsm@src.gnome.org>

    Updated Latvian translation

2014-02-19  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2014-02-19  Curtis Gedak <gedakc@gmail.com>

    Update NEWS file with missed 0.18.0 release items
    
    Improve release news announcement and add missing BitLocker encrypted
    disk detection.

2014-02-19  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.18.0   ==========

2014-02-15  Aurimas Černius <aurisc4@gmail.com>

    Updated Lithuanian translation

2014-02-14  GunChleoc <fios@foramnagaidhlig.net>

    Updated Scottish Gaelic translation

2014-02-14  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2014-02-13  Claude Paroz <claude@2xlibre.net>

    Updated French manual translation

2014-02-12  Daniel Korostil <ted.korostiled@gmail.com>

    Updated Ukrainian translation

2014-02-10  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2014-02-08  GunChleoc <fios@foramnagaidhlig.net>

    Updated Scottish Gaelic translation

2014-02-06  Curtis Gedak <gedakc@gmail.com>

    Update copyright year

2014-02-06  Curtis Gedak <gedakc@gmail.com>

    Add gnome-common to fedora dependencies in README
    
    The gnome-common package is needed when building from the git
    repository.  This package was missed in the list of dependencies for
    the Fedora GNU/Linux distribution.

2014-02-06  Curtis Gedak <gedakc@gmail.com>

    Update help manual to match file system support dialog (#342682)
    
    The help manual was updated to reflect that the legend is now always
    displayed on the File System Support dialog.
    
    Bug #342682 - too much information in 'features' dialog

2014-02-07  Curtis Gedak <gedakc@gmail.com>

    Add empty Scottish Gaelic translation files for GParted help manual
    
    GunChleoc has brought to my attention an inability to create the
    Scottish Gaelic (gd) translation files for the GParted help
    manual using Damned Lies.  In an effort to work around this challenge
    I am adding "gd" to LINGUAS in help/Makefile.am, and also adding a
    template help/gd/gd.po file for translation.

2014-02-05  Phillip Susi <psusi@ubuntu.com>

    Remove incorrect rounding in file system resize (#723543)
    
    Work on bug 701075 inadvertently introduced a problem where ext2/3/4,
    resierfs, and ntfs file systems were rounding the file system size up
    to the nearest kiB.
    
    The problem was discovered when a user resized a partition by moving
    only the start boundary to the right thereby shrinking the partition.
    In the situation where the resulting partition size was not an integer
    kiB value (such as might occur on a 512 byte per sector device) the
    file system size was rounded up to the nearest kiB.  This resulted in
    a file system size being set one sector larger than the partition
    size.
    
    This problem was introduced with the following commit:
    
    Shrink file systems to exact size (#701075)
    3461413d283f1bac77e541b1054e775ec105212f
    
    The fix chosen for this problem involved removing the rounding logic.
    
    Bug 723543 - Shrink ext2/3/4 results in attempt to set partition
                 smaller than file system

2014-02-05  GunChleoc <fios@foramnagaidhlig.net>

    Updated Scottish Gaelic translation

2014-02-03  Gabor Kelemen <kelemeng@gnome.hu>

    Updated Hungarian translation

2014-01-29  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Recognise BitLocker encrypted partitions (#723232)
    
    Only recognises partitions containing BitLocker Disk Encryption content.
    No other actions are supported.
    
    Bug #723232 - BitLocker Disk Encryption not recognised

2014-01-31  Daniel Mustieles <daniel.mustieles@gmail.com>

    Revert "Fixed FSF's address. Fixes #721565"
    
    This reverts commit 9f5d683644d698fa7f8c034ceaadb9baeaeaed07.

2014-01-23  Daniel Mustieles <daniel.mustieles@gmail.com>

    Fixed FSF's address. Fixes #721565

2014-01-28  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Updated Serbian translation

2013-03-20  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Restore compilation order of source files
    
    Restore the order of the source files so that they are once again
    compiled in order A-Z, a-z.  Order is obtained with:
    
        fgrep .cc src/Makefile.am | LANG=C sort
        fgrep .h include/Makefile.am | LANG=C sort

2013-12-03  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Make the File System Support dialog resizable (#342682)
    
    Make the dialog resizable, add a vertical scrollbar and set the minimum
    (and therefore initial) height to 500 pixels.  This is so that the
    dialog entirely fits on an 800x600 screen, thus allowing the rescan
    button to be pressed.
    
    100 pixel difference is to account for the size of the top and bottom
    GNOME 2 panels and two sets of title bars.  Two sets of title bars
    because the window manager tries to place the top of dialog title bars
    in line with the bottom of the main window title bar.
    
    Bug #342682 - too much information in 'features' dialog

2014-01-24  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Indent File System Support legend narrative (#342682)
    
    Use padding to indent the legend narrative to better show hierarchy and
    association with the "Legend" category as recommended in the:
    
        GNOME HIG 2.2.3 / Visual Design / Window Layout
        https://developer.gnome.org/hig-book/stable/design-window.html.en
    
    Padding the legend narrative widget also deliberately increases the
    spacing to the legend icons too.
    
    Bug #342682 - too much information in 'features' dialog

2013-09-28  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Always show the File System Support dialog legend (#342682)
    
    Make the legend always shown, ready for when the dialog is resizable.
    
    Change the widget containing the legend from an expander to a frame
    widget.  Set the frame to be borderless using a bold label as
    recommended in the GNOME Human Interface Guidelines 2.2.1 / Controls /
    Frames and Separators.
    
        https://developer.gnome.org/hig-book/2.32/controls-frames.html.en
    
    Bug #342682 - too much information in 'features' dialog

2014-01-17  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Enhance readability of the DialogFeatures constructor
    
    The DialogFeatures::DialogFeatures() constructor used four levels of
    nested code blocks and reused the same variable names at multiple
    levels.  The variable hbox was used at three of the four levels.  This
    was done by commit:
    
        91b971691d912859cbeb3b916c27bb90c1fcceec
        Bug #634090: Change some attributes to local variables
    
    In my opinion this made the code hard to understand.  Give every local
    variable a unique and meaningful name and remove the nested code blocks.

2014-01-23  Daniel Mustieles <daniel.mustieles@gmail.com>

    Replace obsolete FSF postal address in copyright notices (#721565)
    
    This is part of parent bug:
        Bug #721455 - Obsolete info in license text on multiple modules
    
    and GNOME Goal:
        https://wiki.gnome.org/Initiatives/GnomeGoals/Proposals
    
        * verify all source files to make sure they have a license and a
          copyright, and that both are up-to-date
    
    Bug #721565 -  License text contains obsolete FSF postal address

2014-01-22  GunChleoc <fios@foramnagaidhlig.net>

    Added Scottish Gaelic translation

2014-01-11  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Prevent crash when creating new partition on loop label (#721988)
    
    Write a loop partition table to a disk and then try to create a new
    partition on that disk crashes GParted.
    
    Analysis:
    
    1) Loop partition table, actually just the signature / label
       "GNU Parted Loopback 0", is written to the disk.
    2) create_partition() calls ped_disk_app_partition() to create the
       partition which, arguably erroneously, clears the loop signature.
    3) In erase_filesystem_signatures(), get_device_and_disk() fails because
       there's no longer a loop signature for libparted to recognise.  This
       leaves lp_device, lp_disk and lp_partition = NULL, but incorrectly
       overall_success = true.
    4) Overall_success = true allows the signature erasure loop to run and
       evaluate lp_device->sector_size, dereferencing a NULL pointer and
       crashing GParted.
    
    Fix erase_filesystem_signatures() to correctly handle failure from
    get_device_and_disk(), broken by this commit:
    
        246e05559d91865dd135690a62d56144f375c26b
        Clear btrfs file system super block mirror copies too (#705426)
    
    Bug #721988 - Crash when creating new partition on disk with loop label

2014-01-11  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2014-01-10  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2014-01-08  Dimitris Spingos <dmtrs32@gmail.com>

    Updated Greek translation of help

2014-01-06  Curtis Gedak <gedakc@gmail.com>

    Fix typo in package name for Fedora C++ compiler in README
    
    "gcc-g++" -> "gcc-c++"

2014-01-01  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Update manual with default to GPT on disks >= 2 TiB (#711098)
    
    Bug #711098 - Default partition table can not handle > 2 TiB disks

2014-01-03  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Display partition table types in order (#711098)
    
    In the Create Partition Table dialog display the entries in the combobox
    in order.
    
    Previously the default of MSDOS or GPT was moved to the first item in
    the combobox.  Now the partition table types remain in order with just
    either MSDOS or GPT being selected as as the default as required.
    
    The partition table types are displayed in the order supplied by
    libparted, which is alphabetic except with "loop" last.
    
    Bug #711098 - Default partition table can not handle > 2 TiB disks

2013-12-13  Phillip Susi <psusi@ubuntu.com>

    Default to GPT on disks >= 2 TiB (#711098)
    
    MSDOS partition table is limited to addressing 2^32 sectors, limiting
    disks using 512 byte sectors to 2 TiB in size.  Fdisk reports the
    following warning on disks 2 TiB and larger.
    
        # truncate -s 2T /var/tmp/loop-2T
        # losetup /dev/loop0 /var/tmp/loop-2T
        # fdisk /dev/loop0
    
        WARNING: The size of this disk is 2.2 TB (2199023255552 bytes).
        DOS partition table format can not be used on drives for volumes
        larger than (2199023255040 bytes) for 512-byte sectors. Use parted(1) and GUID
        partition table format (GPT).
    
    (Fdisk arguably reports this warning one sector too early.  Anyway for
    safety and consistency GParted will use this limit too).  Continue to
    use MSDOS as the default partition table type for disks smaller than 2
    TiB and use GPT as the default for disks 2 TiB and larger.  This
    maximises compatibility.
    
    Also remove the advanced expander and always show the partition table
    list box.
    
    Bug #711098 - Default partition table can not handle > 2 TiB disks

2014-01-03  Fran Diéguez <fran.dieguez@mabishu.com>

    Updated Galician translations

2013-12-22  Seong-ho Cho <darkcircle.0426@gmail.com>

    Updated Korean translation

2013-12-18  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2013-12-12  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2013-12-09  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2013-12-09  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.17.0   ==========

2013-12-08  Chao-Hsiung Liao <j_h_liau@yahoo.com.tw>

    Updated Traditional Chinese translation(Hong Kong and Taiwan)

2013-12-07  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2013-12-07  Muhammet Kara <muhammetk@gmail.com>

    [l10n]Updated Turkish translation

2013-12-05  Christian Kirbach <christian.kirbach@gmail.com>

    Updated German translation

2013-12-03  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Successfully read kernel versions with only 2 components
    
    When the kernel version as stated in /proc/version did not have at least
    three numbers separated by periods, the version would fail to be read.
    Sample /proc/version to demonstrate problem:
    
        Linux version 3.10-3-686-pae ...
    
    The Linux kernel will always have a major number and a minor number
    separated by a period.  There is likely also a patch version number too
    that would be preceded by a period.  This enhancement will read 2 and 3
    component Linux kernel versions.

2013-12-03  Claude Paroz <claude@2xlibre.net>

    Updated French translation

2013-12-02  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2013-12-02  Milo Casagrande <milo@ubuntu.com>

    [l10n] Updated Italian translation.

2013-12-01  Rafael Ferreira <rafael.f.f1@gmail.com>

    Updated Brazilian Portuguese translation of help files

2013-12-01  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2013-12-01  Rafael Ferreira <rafael.f.f1@gmail.com>

    Updated Brazilian Portuguese translation of help files

2013-11-22  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove multi-line comment compiler warning from PipeCapture.cc
    
    Remove this compiler warning:
        PipeCapture.cc:56:2: warning: multi-line comment [-Wcomment]
          //      /\                                          /\        /\
          ^
    
    added by commit:
        1b54123580aa668d3a2c391cce2d60c65a1668f9
        Enhance line discipline in PipeCapture::OnReadable() (#709276)

2013-11-27  Curtis Gedak <gedakc@gmail.com>

    Show SWRAID active/not active status in information dialog (#712533)
    
    Bug #712533 - Partitions not detected as busy inside Software RAID on
                  some distros

2013-11-22  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fix detection of busy status of extended partitions (#712533)
    
    GParted doesn't report extended partitions as busy if it contains only
    busy LVM2 PV or SWRAID logical partitions.  Libparted's
    ped_partition_is_busy() only detects mounted file systems and swap space
    as busy, not active LVM2 PVs or SWRAID members.  This is as of libparted
    3.1 and earlier.
    
    Fix by determining the busy status of an extended partition based solely
    on the busy status of the logical partitions it contains.  This makes it
    unnecessary to check for mounted DMRAID logical partitions or call
    ped_partition_is_busy() for extended partitions.
    
    Bug #712533 - Partitions not detected as busy inside Software RAID on
                  some distros

2013-11-22  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fix false busy detection of unusual case with Linux Software RAID (#712533)
    
    In this unusual setup of having one Linux Software RAID array
    partitioned and a second array not partitioned, /dev/md1p1 partition in
    the first array is falsely reported as busy when the file system filling
    the second array /dev/md2 is mounted.
    
      Partition   RAID                File System        Mount mount
      ---------   -----------------   ----------------   -----------
      /dev/sdb1   SWRAID /dev/md1
                         /dev/md1p1   ext4,Label=test1   (Unmounted)
      /dev/sdb2   SWRAID /dev/md2     ext4,Label=test2   /mnt/2
    
    This again affects Debian 6, Debian 7 and RHEL/CentOS 6.x and is as a
    result of the this bug fixed in libparted 2.4:
        http://git.savannah.gnu.org/cgit/parted.git/commit/?id=db52898c214310dab4ed84e6cb2f9ffc8c3aa502
        linux: also detect "in-use" dmraid and scsi-Nth (N>=16) partition
    
    Fix by not using libparted's ped_partition_is_busy() to determine if a
    normal or logical partition is busy.
    
    Bug #712533 - Partitions not detected as busy inside Software RAID on
                  some distros

2013-11-16  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fix busy detection of file systems inside Linux Software RAID (#712533)
    
    On some distributions GParted doesn't detect when a file system is busy
    and mounted when the partition is within a Linux Software RAID array.
    Affected distributions include: Debian 6, Debian 7 and RHEL/CentOS 6.x.
    
    This is because of a bug in libparted 2.3 and earlier.  It was fixed by
    this change in libparted 2.4:
        http://git.savannah.gnu.org/cgit/parted.git/commit/?id=db52898c214310dab4ed84e6cb2f9ffc8c3aa502
        linux: also detect "in-use" dmraid and scsi-Nth (N>=16) partition
    
    Ubuntu 13.10 with libparted 2.3 is not affected because it contains a
    distribution specific patch to correct it.
    
    Fix by using GParted's internal mounted partitions map, mount_info, to
    determine if a partition is busy, in addition to using libparted's
    ped_partition_is_busy().
    
    Bug #712533 - Partitions not detected as busy inside Software RAID on
                  some distros

2013-11-25  Rafael Ferreira <rafael.f.f1@gmail.com>

    Updated Brazilian Portuguese translation

2013-11-25  Piotr Drąg <piotrdrag@gmail.com>

    Actually translate the AppData file

2013-10-01  Richard Hughes <richard@hughsie.com>

    Add an AppData file (#709164)
    
    For more information on AppData see:
    
    AppData Specification
    http://people.freedesktop.org/~hughsient/appdata/
    
    Application metadata with AppData
    http://lwn.net/Articles/569034/
    
    Bug #709164 - Please include an AppData file

2013-11-20  Curtis Gedak <gedakc@gmail.com>

    Update help manual for online resize support (#694622)
    
    Indicate that online resize is available for some mounted or otherwise
    active partitions.
    
    Bug #694622 - Add support for online resize

2013-11-15  Phillip Susi <psusi@ubuntu.com>

    Add online resize support (#694622)
    
    Many file systems are capable of growing while mounted, and a few can
    even shrink.  This support must be explicitly enabled at configure time
    with the --enable-online-resize flag and depends on a patched libparted.
    Also requires kernel >= 3.6 for partition resizing, even if the
    partition is in use (BLKPG_RESIZE_PARTITION).
    
    Thanks to Mike Fleetwood for double check mark idea instead of a second
    column to show the online grow/shrink.
    
    Bug #694622 - Add support for online resize

2013-10-30  Mike Fleetwood <mike.fleetwood@googlemail.com>

    List ext4 in the GParted Manual (#711114)
    
    Bug #711114 - Change default fs to ext4

2013-10-29  Phillip Susi <psusi@ubuntu.com>

    Change default file system to ext4 (#711114)
    
    In the Create New Partition dialog use ext4 as the default choice for
    new file systems.  It has been the preferred file system of
    distributions for many years.  Use ext3 and ext2 as second and third
    choice defaults.  This handles RHEL/CentOS 5.x which doesn't support
    ext4.
    
    Bug #711114 - Change default fs to ext4

2013-10-10  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Make Partition Information dialog warnings selectable (#705596)
    
    Allow all partition warning messages to be selectable and copied.  Merge
    all the messages into a single Gtk::Label widget so that they can be
    selected together.
    
    Use a blank line between individual messages so that each message can be
    distinguished. Therefore each message should be formatted as one or more
    non-blank lines, with an optional trailing new line.  This is true of
    GParted internal messages and probably all external messages and errors
    from libparted and executed commands too.
    
    Bug #705596 - Partition Information Dialog - let user copy warnings

2013-10-21  Anish A <aneesh.nl@gmail.com>

    Updated Malayalam Translation

2013-10-07  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove unused function declarations for *_mtoolsrc_file()
    
    Remove left behind function declarations create_mtoolsrc_file() and
    delete_mtoolsrc_file() after commit:
    
        2706f0174aeca1fdad08669c67fab5ac75ebfd5f
        Remove mtoolsrc file

2013-10-11  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Prevent GParted starting stopped Linux Software RAID arrays (#709640)
    
    Applying operations or just scanning the partitions in GParted was
    causing all stopped Linux Software RAID arrays to be automatically
    started.  This is not new with this patch set, but as a result of the
    following behaviour which has existed for a long time.  Chain of events
    goes likes this:
    
     1) Gparted calls commit_to_os() to update the kernel with the new
        partition table;
     2) Libparted calls ioctl() BLKPG_DEL_PARTITION on every partition to
        delete every partition from the kernel.  Succeeds on non-busy
        partitions only;
     3) Kernel emits udev partition remove event on every removed partition;
     4) Libparted calls ioctl() BLKPG_ADD_PARTITION on every non-busy
        partition to re-add the partition to the kernel;
     5) Kernel emits udev partition add event on every added partition;
     6) Udev rule:
          SUBSYSTEM=="block", ACTION=="add", ENV{ID_FS_TYPE}=="linux_raid_member", \
                  RUN+="/sbin/mdadm -I $tempnode"
        from either /lib/udef/rules.d/64-md-raid.rules or
        .../65-md-incremental.rules incrementally starts the member in a
        Linux Software RAID array.
    
    Fix by temporarily adding blank override rules files which does nothing,
    so that when the udev add and remove events for Linux Software RAID
    array member partitions fire nothing is done; but only when required.
    Note that really old versions of udev don't have rules to incrementally
    start array members and some distributions comment out such rules.
    
    Bug #709640 - Linux Swap Suspend and Software RAID partitions not
                  recognised

2013-10-07  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Detect busy status of Linux Software RAID members (#709640)
    
    Read the contents of /proc/mdstat file to determine if a device is a
    member of of an active RAID array.
    
        $ cat /proc/mdstat
        Personalities : [raid1]
        md1 : active raid1 sda1[2] sdb1[3]
              524224 blocks super 1.0 [2/2] [UU]
    
        md2 : active raid1 sdb2[2] sda2[3](F)
              5238720 blocks super 1.1 [2/1] [U_]
    
        md3 : active raid1 sdb3[1]
              10477440 blocks super 1.1 [2/1] [_U]
              bitmap: 1/1 pages [4KB], 65536KB chunk
    
        md4 : inactive sda4[0](S)
              1048564 blocks super 1.2
    
        unused devices: <none>
    
    There are 5 example Linux Software RAID arrays, md1 to md5.  All are
    RAID1 mirrors with 2 members, in various states.
    
        Array  Members     Status
        md1    sda1, sdb2  Fully operational.
        md2    sda2, sdb2  Member sda2 marked as faulty.  (Device sda2 is
                           still in use).
        md3    sda3, sdb3  Member sda3 has been removed.  (Device sda3 is
                           not in use).
        md4    sda4, sdb4  Incremental start of member sda4 only.  (Neither
                           member devices is in use).
        md5    sda5, sdb5  Array stopped.  (Neither member device is in
                           use).
    
    Also disable "Unmount" in the partition menu for active RAID array
    members.
    
    Bug #709640 - Linux Swap Suspend and Software RAID partitions not
                  recognised

2013-10-05  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Recognise Linux Swap Suspend and Software RAID partitions (#709640)
    
    Recognise in kernel, Linux Swap Suspend partitions.  (When hibernated
    the kernel write the RAM out to swap space and changes the magic string
    from swap space to suspend).  Recognition required either
    libparted >= 1.8.8.1 or blkid from util-linux >= 2.15 or before that
    blkid from e2fsprogs >= 1.39.
    
    Recognise Linux Software RAID partitions.  Recognition requires blkid
    from util-linux >= 2.15.
    
    Example:
    
        # blkid /dev/sda10 /dev/sda11
        /dev/sda10: ... TYPE="swsuspend"
        /dev/sda11: ... TYPE="linux_raid_member"
    
        # parted /dev/sda print
        Model: ATA SAMSUNG HM500JI (scsi)
        Disk /dev/sda: 500GB
        Sector size (logical/physical): 512B/512B
        Partition Table: msdos
    
        Number  Start   End     Size    Type      File system     Flags
        ...
        10      361GB   362GB   1074MB  logical   swsusp
        11      362GB   363GB   1074MB  logical                   raid
    
    Bug #709640 - Linux Swap Suspend and Software RAID partitions not
                  recognised

2013-10-16  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Stop using deprecated widget alignment enumerators (#652044)
    
    Step 3 of 3:
    
    Now that all label widgets are created with ALIGN_LEFT and ALIGN_CENTER
    alignment remove the x_align and y_align parameters from mk_label() and
    always use this alignment.  Also specify this alignment via floats
    rather than enumerators, one of which was deprecated.
    
    Bug #652044 - uses deprecated APIs

2013-10-16  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Replace widget alignment ALIGN_RIGHT with ALIGN_LEFT (#652044)
    
    Step 2 of 3:
    
    ALIGN_RIGHT was only used for the size figures in the GParted > Devices
    device selector with radio buttons.  Change to ALIGN_LEFT and adjust the
    widget packing to maintain appearance.
    
    Bug #652044 - uses deprecated APIs

2013-10-15  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Replace widget alignment ALIGN_TOP with ALIGN_CENTER (#652044)
    
    Gtkmm release 2.24 in February 2011 deprecated the use of these
    alignment enumerators superseding them with:
    
        Deprecated enumerator    Use instead
        Gtk::ALIGN_LEFT          Gtk::ALIGN_START
        Gtk::ALIGN_RIGHT         Gtk::ALIGN_END
        Gtk::ALIGN_TOP           Gtk::ALIGN_START
        Gtk::ALIGN_BOTTOM        Gtk::ALIGN_END
    
        gtkmm: gtkmm Enums and Flags [2.24]
        https://developer.gnome.org/gtkmm/2.24/group__gtkmmEnums.html
    
    The deprecated alignment enumerators were only used in the creation of
    Gtk::Label widgets by method Utils::mk_label().  In all but three cases
    the alignment was left, center.  So make all labels with alignment left,
    center and then stop using the deprecated enumerators.
    
    Step 1 of 3:
    
    ALIGN_TOP was only used for these 2 labels:
    
        "Path:" text in View > Device Information;
        "Path:" text in Partition > Information.
    
    Use of ALIGN_TOP makes no difference to these labels so just change to
    ALIGN_CENTER.
    
    Bug #652044 - uses deprecated APIs

2013-10-11  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Stop using deprecated method free_colors() (#652044)
    
    Gtkmm releases 2.7.1 in July 2005 and 2.8 in September 2005 deprecated
    Gdk::Colormap::free_colors() and replaced it with
    Gdk::Colormap::free_color().  The oldest distribution currently
    supported is RHEL / CentOS 5.9 with gtkmm 2.10 so just unconditionally
    replace.
    
        ANNOUNCE: gtkmm 2.7.1
        https://mail.gnome.org/archives/gnome-announce-list/2005-July/msg00025.html
    
        ANNOUNCE: gtkmm and glibmm 2.8
        https://mail.gnome.org/archives/gnome-announce-list/2005-September/msg00026.html
    
    Bug #652044 - uses deprecated APIs

2013-10-01  Curtis Gedak <gedakc@gmail.com>

    Update install instructions for some GNU/Linux distributions

2013-10-05  Curtis Gedak <gedakc@gmail.com>

    Do not mask virtual file systems when using systemctl (#708378)
    
    This enhancement removes the virtual file systems from the list of file
    systems (shown below) to be masked.
    
    The following output was captured using Fedora 19:
    
    $ systemctl list-units --full --all -t mount
    UNIT                          LOAD   ACTIVE   SUB     DESCRIPTION
    -.mount                       loaded active   mounted /
    boot.mount                    loaded active   mounted /boot
    dev-hugepages.mount           loaded active   mounted Huge Pages File System
    dev-mqueue.mount              loaded active   mounted POSIX Message Queue File System
    proc-sys-fs-binfmt_misc.mount loaded inactive dead    Arbitrary Executable File Formats File System
    run-user-1000-gvfs.mount      loaded active   mounted /run/user/1000/gvfs
    sys-fs-fuse-connections.mount loaded active   mounted FUSE Control File System
    sys-kernel-config.mount       loaded active   mounted Configuration File System
    sys-kernel-debug.mount        loaded active   mounted Debug File System
    tmp.mount                     loaded active   mounted Temporary Directory
    
    LOAD   = Reflects whether the unit definition was properly loaded.
    ACTIVE = The high-level unit activation state, i.e. generalization of SUB.
    SUB    = The low-level unit activation state, values depend on unit type.
    
    10 loaded units listed.
    To show all installed unit files use 'systemctl list-unit-files'.
    
    Bug #708378 - Advertised new feature: Use systemctl runtime mask to
                  prevent automounting (#701676) doesn't work

2013-10-01  Curtis Gedak <gedakc@gmail.com>

    Change systemctl to also mask /etc/fstab mount entries (#708378)
    
    A mistake was made in the following commit:
    
    Use systemctl runtime mask to prevent automounting (#701676)
    4c109df9b59e55699bd42023cf4007ee359793e9
    
    The intention was to use 'systemctl list-units' rather than
    'systemctl list-unit-files' so that auto-generated mount files would
    also be masked and hence prevented from auto-mounting.
    
    Now 'systemctl list-units' is used.
    
    Bug #708378 - Advertised new feature: Use systemctl runtime mask to
                  prevent automounting (#701676) doesn't work

2013-10-05  Rūdolfs Mazurs <rudolfsm@src.gnome.org>

    Updated Latvian translation

2013-10-03  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Turn on resize2fs text progress bar (#709276)
    
    Turn on the text progress bar for the resize2fs command.  Looks like:
    
        # resize2fs -p /dev/sda13 262144
        resize2fs 1.41.12 (17-May-2010)
        Resizing the filesystem on /dev/sda13 to 262144 (4k) blocks.
        Begin pass 2 (max = 97177)
        Relocating blocks             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
        Begin pass 3 (max = 80)
        Scanning inode table          XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
        Begin pass 4 (max = 5597)
        Updating inode references     XXXXXXXXX-------------------------------
    
    Bug #709276 - Percentage indicator for subcommand

2013-10-03  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Enhance line discipline in PipeCapture::OnReadable() (#709276)
    
    Add concept of cursor position within the current line, separate from
    the end of the buffer.  This is so that programs which output a text
    progress bar using backspace, such as resize2fs -p, are displayed
    correctly.
    
    Bug #709276 - Percentage indicator for subcommand

2013-09-15  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Allow GParted to read the UUID from older btrfs-show command
    
    All the code was there in btrfs::read_uuid() to read the UUID from the
    btrfs-show command.  It just needed enabling.
    
    This is only relevant when: (1) the blkid command is unavailable as
    GParted primarily reads the UUID through the FS_Info cache using the
    blkid command, and (2) the btrfs command is unavailable and the btrfs
    module uses the older btrfs-show command instead.

2013-09-14  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Actually display error message from statvfs() failure
    
    Pass error_message parameter by reference to
    get_mounted_filesystem_usage() so that the caller can access the
    modified error message when required.

2013-09-14  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add reporting of linux-swap usage (#708107)
    
    For active swap space read the usage from /proc/swaps.  (Linux kernel
    uses units of 1 KiB).  By definition inactive swap space is 100% free.
    
        $ cat /proc/swaps
        Filename                                Type            Size    Used    Priority
        /dev/sda2                               partition       5242876 430552  -1
    
    Always set fs.read = FS::EXTERNAL even if /proc/swaps doesn't exist so
    that an attempt is made to open the file generating a specific error, in
    addition to the generic error.
    
        open("/proc/swaps", O_RDONLY): No such file or directory
    
        Unable to read the contents of this file system!
        Because of this some operations may be unavailable.
    
        The cause might be a missing software package.
        The following list of software packages is required for linux-
        swap file system support: util-linux.
    
    Closes Bug #708107 - Usage of swap space is not reported

2013-09-19  Daniel Șerbănescu <cyber19rider@gmail.com>

    Updated Romanian Translation

2013-09-18  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2013-09-18  Curtis Gedak <gedakc@gmail.com>

    Minor cleanup of whitespace and format of NEWS file

2013-09-18  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.16.2   ==========

2013-09-17  Chao-Hsiung Liao <j_h_liau@yahoo.com.tw>

    Updated Traditional Chinese translation(Hong Kong and Taiwan)

2013-09-17  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Updated Serbian translation

2013-09-15  Seong-ho Cho <darkcircle.0426@gmail.com>

    Updated Korean translation

2013-09-14  Ville-Pekka Vainio <vpvainio@iki.fi>

    Finnish translation update by Jiri Grönroos

2013-09-11  Joe Hansen <joedalton2@yahoo.dk>

    Updated Danish translation

2013-09-11  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2013-09-11  Daniel Korostil <ted.korostiled@gmail.com>

    Updated Ukrainian

2013-09-11  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2013-09-11  Claude Paroz <claude@2xlibre.net>

    Updated French manual translation

2013-09-11  Andika Triwidada <andika@gmail.com>

    Updated Indonesian translation

2013-09-10  Enrico Nicoletto <liverig@gmail.com>

    Updated Brazilian Portuguese translation for manual

2013-06-09  Curtis Gedak <gedakc@gmail.com>

    Add changes for Force Cancel button to help manual (#707070)
    
    A "Force Cancel" button and proper cancel support was added to
    GParted 0.15.0 with the following commit:
    
      Add proper cancel support (#601239)
      89de9a50269c2f92208a549f0e5feb6127ca7d30
    
    Part of Bug #707070 - Update Help Manual with GPT flags, Force Cancel
                          button, etc.

2013-06-05  Curtis Gedak <gedakc@gmail.com>

    Add list of gpt flags to help manual (#707070)
    
    Part of Bug #707070 - Update Help Manual with GPT flags, Force Cancel
                          button, etc.

2013-05-31  Curtis Gedak <gedakc@gmail.com>

    Add diag flag to help manual and update manual metadata (#707070)
    
    Part of Bug #707070 - Update Help Manual with GPT flags, Force Cancel
                          button, etc.

2013-09-10  Yuri Myasoedov <omerta13@yandex.ru>

    Fixed bug in Russian translation

2013-06-16  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Enable %age complete display from e2fsck command (#697662)
    
    Enable the text progress bar and percentage complete from the e2fsck
    command.  Looks like:
    
        # e2fsck -f -y -v -C 0 /dev/sda8
        e2fsck 1.41.12 (17-May-2010)
        Pass 1: Checking inodes, blocks, and sizes
        Pass 2: Checking directory structure
        test8: |=========================================               / 73.6%
    
    Note that e2fsck deliberately brackets the progress bar with control-A
    and control-B characters when it detects that it is not being run from a
    terminal so that logsave(8) can exclude the progress bar from being
    written to a log file.  As GParted doesn't run e2fsck via a pty it
    receives these control characters.  Ignore them.
    
    References:
    Change e2fsck to bracket its progress bar output with ctrl-A and ctrl-B
    http://git.kernel.org/cgit/fs/ext2/e2fsprogs.git/commit/?id=bc34d6be65cb93a65451ad209cfea2f98b03fd22
    
    Don't print ^A and ^B chars when e2fsck is talking directly to a tty
    http://git.kernel.org/cgit/fs/ext2/e2fsprogs.git/commit/?id=54a31a3b2e432c124aa03442f2983c4f4d4a974c
    
    Closes Bug #697662 - Do not hide the progress of the tools used

2013-04-09  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Allow ntfsresize command to report real-time %age progress (#697662)
    
    Remove the -P, no progress bar option, from the ntfsresize command.
    This allows the command to display the %age complete on its output which
    is displayed in the operation details dialog, updated in real time.
    Possible since:
        Bug #685740 - Refactor to use asynchronous command execution
    
    Bug #697662 - Do not hide the progress of the tools used

2013-08-27  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Also accept btrfs tools using IEC prefix multipliers (#706914)
    
    Currently the btrfs command outputs figures to 2 decimal places followed
    by an SI multiplier, e.g. 1.00GB.
    
    This patch to btrfs-progs has been included in the integration
    repository and will likely be included in the official btrfs-progs
    repository at some point.  It changes btrfs-progs to use IEC
    multipliers, e.g. 1.00GiB.  In fact multipliers already aren't used for
    figures less than 1024.
        [PATCH] btrfs-progs: use IEC units for size
        http://permalink.gmane.org/gmane.comp.file-systems.btrfs/26888
        https://patchwork.kernel.org/patch/2825841/
    
    Make GParted capable of also accepting IEC prefix multipliers, just "B"
    for bytes and no multiplier, as well as an optional space between the
    number and multiplier.  Therefore accept values like these:
        1.00GB         1.00 GB
        1.00GiB        1.00 GiB
        1073741824B    1073741824 B
        1073741824
    
    Closes Bug #706914 - Prepare for btrfs tools using IEC prefix
                         multipliers

2013-08-28  Fran Diéguez <fran.dieguez@mabishu.com>

    Updated Galician translations

2013-08-14  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Clear btrfs file system super block mirror copies too (#705426)
    
    With recent btrfs-progs, GParted failed to format a btrfs file system
    over the top of an existing one.  Make btrfs failed with this error:
    
        # mkfs.btrfs /dev/sdb1
        ...
        /dev/sdb1 appears to contain an existing filesystem (btrfs).
        Use the -f option to force overwrite.
    
    With this commit to btrfs-progs on 2013-02-19, mkfs.btrfs checks for
    existing file system signatures, including all mirror copies of btrfs
    super blocks, before writing to the partition.
    
        http://git.kernel.org/cgit/linux/kernel/git/mason/btrfs-progs.git/commit/?id=2a2d8e1962e8b6cda7b0a7584f6d2fb95d442cb6
        btrfs-progs: require mkfs -f force option to overwrite filesystem or partition table
    
    Make GParted clear all the mirror copies of the btrfs file system super
    blocks as erase_filesystem_signatures() is intended to prevent detection
    of old signatures.  This also avoids having to determine if the -f
    option to mkfs.btrfs is available before trying to use it.
    
    Closes Bug #705426 - Formatting Existing BTRFS Partition as BTRFS Fails
                         Because mkfs.btrfs Is Not Run with "-f"

2013-08-22  Curtis Gedak <gedakc@gmail.com>

    Fix regression - linux-swap resize broken (#706604)
    
    Unfortunately a regression was introduced with GParted 0.14.1 wherein
    linux-swap grow and shrink operations were broken.  This regression was
    a direct result of the following commit:
    
        Prevent file system grow when partition grow fails (#686668)
        fd963289201532f2216029ffd1e0b49e22d79560
    
    The regression did not result in an error in the GUI, but rather the
    linux-swap file system was not "resized" to the correct partition size.
    
    The logic error introduced with the above commit listed has now been
    fixed.
    
    BACKGROUND INFORMATION ON LINUX-SWAP RESIZING
    
    Currently no command line tools are available for resizing linux-swap.
    However, since linux-swap does not contain data in the usual sense, we
    simulate resizing linux-swap by re-creating (maximizing to fill
    partition) the linux-swap file system with the same UUID and volume
    label.  To work correctly, the linux-swap file system must be re-created
    after the final partition resize action has occurred.
    
    Closes Bug #706604 - Failure to properly grow or shrink linux-swap when
                         resizing

2013-08-02  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Ensure running GParted is named correctly under GNOME Shell (#705323)
    
    Under GNOME Shell a running instance of GParted was getting named
    "Gpartedbin".  Ultimately GNOME Shell [1] uses the WM_CLASS X Window
    property [2], which GDK defaults from the executable name.
    
        $ xprop WM_NAME WM_CLASS
        (Click on running GParted window)
        WM_NAME(STRING) = "/dev/sda - GParted"
        WM_CLASS(STRING) = "gpartedbin", "Gpartedbin"
    
    Set the Class name, second string of the WM_CLASS X Window property, to
    "GParted".  (This prevents the use of the '--class' GTK+/GDK common
    command line option [3] to override the class name, but I expect nobody
    ever uses the option.  GNOME Terminal has the same limitation.  It also
    has the same change setting the Class name [4]).
    
    References:
    
    [1] Application Based GNOME 3
        https://wiki.gnome.org/GnomeShell/ApplicationBased
    
    [2] WM_CLASS Property, Inter-Client Communication Conventions Manual
        http://tronche.com/gui/x/icccm/sec-4.html#s-4.1.2.5
    
    [3] Running GTK+ Applications, Common command line options
        https://developer.gnome.org/gtk3/stable/gtk-running.html
    
    [4] Bug #685742 - Window class of terminals doesn't match the desktop
        file name
        https://bugzilla.gnome.org/show_bug.cgi?id=685742
        https://git.gnome.org/browse/gnome-terminal/commit/?id=3370c0e51159f5be476b909e94ac05e5362dd28a
    
    Closes Bug #705323 - Shows up as 'Gpartedbin' in GNOME Shell

2013-08-10  Akom Chotiphantawanon <knight2000@gmail.com>

    Updated Thai translation.

2013-08-04  Seong-ho Cho <darkcircle.0426@gmail.com>

    Updated Korean translation

2013-07-25  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Recognise new dosfstools program names (#704629)
    
    Dosfstools >= 3.0.18, released June 2013, renamed the programs thus:
    
        dosfslabel becomes fatlabel,
        dosfsck becomes fsck.fat,
        and mkdosfs becomes mkfs.fat.
    
    Dosfstools creates symbolic links for the old names for backward
    compatibility, but unfortunately the Debian dosfstools-3.0.22-1
    (experimental) package doesn't include those symbolic links.  This
    causes create, check and read unmounted FAT16/32 file systems to not be
    supported.
    
    Make GParted look for the new names first and the old names second.
    
    Closes Bug #704629 - Program name changes in dosfstools 3.0.18+ break
                         FAT16/32 support

2013-07-19  Dimitris Spingos <dmtrs32@gmail.com>

    Added Greek translation

2013-02-25  Curtis Gedak <gedakc@gmail.com>

    Ensure active tense of menu option in en_CA translation
    
    The menu option to mount a partition containing a file system should
    be the active tense because choosing the menu option will perform the
    action.
    
    Changing:
       "_Mounted on" --> "_Mount on"

2012-10-08  Curtis Gedak <gedakc@gmail.com>

    Add missing colon to label in en_CA translation
    
    "UUID" --> "UUID:"

2013-06-14  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Stop using locate in autogen.sh (#702040)
    
    If the gnome-doc-utils package isn't installed and you try to compile
    GParted from git it will fail with this:
    
        $ ./autogen.sh
        /usr/bin/gnome-autogen.sh
        Cannot find file: gnome-doc-utils.make
        You need to install gnome-doc-utils
    
    After installing the gnome-doc-utils package the same error will be
    reported again unless you also update the locate database.
    
    Instead query the full path to the gnome-doc-utils.make file from the
    gnome-doc-utils' pkg-config metadata.
    
    Closes Bug #702040 - very strange gnome-doc-utils check in gparted

2013-06-11  Curtis Gedak <gedakc@gmail.com>

    Only permit one instance of GParted to execute at a time
    
    Only one partition editing tool should be in use at any one point
    in time.  If more than one is in use concurrently, then data loss
    might occur through operations on common partitions or partition
    tables.  As such, prevent multiple copies of GParted from running
    at the same time.

2013-06-09  Curtis Gedak <gedakc@gmail.com>

    Use systemctl runtime mask to prevent automounting (#701676)
    
    With the beta release of Fedora 19, invoking gparted appears to
    automatically mount partitions.  The systemd daemon appears to be
    performing the automounting.  Hence use systemctl runtime mask to
    prevent this automounting from occurring.
    
    Bug #701676 - gparted doesn't inhibit systemd mounting, leading to
                  potential data loss

2013-06-05  Sinlu Bes <e80f00@gmail.com>

    Add create_with_label flag to struct FS (#701569)
    
    It was difficult to retrieve whether a filesystem's label can be set on reformat.
    
    The read_label flag can't be used as it decides whether to use the logic in the filesystem class
    rather than the fallback in GParted::set_device_partitions, to determine the label of a partition.
    
    The create_with_label flag is NONE for file systems that we cannot format with a
    label (or that we cannot format at all).
    The value is usually EXTERNAL for file systems that we can format with a label.

2013-05-23  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove unused read-only functionality from internal block copy
    
    The read-only functionality is unused and the readonly parameter is
    always false in copy_filesystem() and copy_blocks() methods.  This has
    been the case since the copy simulation was dropped by commit:
    
        b9b4b2e55d1dadd5a5c0fef552dbbd2499561182
        Remove simulation pass ( read test ) on move

2013-05-27  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Make include guards unique (#539297)
    
    Include guards need to be unique within GParted code and all included
    library header files.
        http://en.wikipedia.org/wiki/Include_guard#Difficulties
    
    Use this model for all include guards:
        #ifndef GPARTED_FILE_NAME_H
        #define GPARTED_FILE_NAME_H
        ...
        #endif /* GPARTED_FILE_NAME_H */
    
    Closes Bug #539297 - Make include guards unique

2013-05-30  Curtis Gedak <gedakc@gmail.com>

    Set NTFS minimum partition size to 2 MiB (#697848)
    
    The minimum NTFS volume size supported by the ntfs-3g mkntfs command
    is 1 MiB.  Since 1 extra sector is required for the backup NTFS boot
    sector, an NTFS partition must be at least 1 MiB plus 1 sector.
    
    To demonstrate, create a 1 MiB unformatted partition using MiB
    alignment (/dev/sdd1), and then try to format the partition as NTFS.
    
    # mkntfs -Q -v -L "ntfs-test" /dev/sdd1
    Device is too small (1023kiB).  Minimum NTFS volume size is 1MiB.
    
    For GParted this means a minimum NTFS partition size of 2 MiB since
    the smallest unit in the GUI is MiB.
    
    Bug #697848 - Failure to Create 1 MiB NTFS Partition

2013-05-27  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Place options before device name for the ntfsresize command
    
    Place the size and noaction options before the device name when resizing
    an NTFS file system to match the order documented in the manual page.
    Example fixed command:
    
        # ntfsresize -P --force --force -s 104857600 --no-action /dev/sda11

2013-05-27  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Shrink file systems to exact size (#701075)
    
    Ext[234] file systems were being shrunk 1 KiB too small.  Ntfs and
    reiserfs file systems were being shrunk 1 byte too small.  The resultant
    file systems were ending up 1 block smaller than they could have been.
    
    This looks like an accidental leftover from when GParted use to:
    1) Shrink the file system 1 cylinder too small
    2) Shrink the partition
    3) Grow the file system to fill the partition
    Relevant commit:
    
        d663c3c277f60da2ac1785c039f25f7920a315e9
        removed cylindersize buffering during resize from the filesystems
    
    Closes Bug #701075 - Setting the backup boot sector when resizing NTFS

2013-05-27  Curtis Gedak <gedakc@gmail.com>

    Add GPLv2+ license to gparted.in script source file
    
    Note the license text of this file differs slightly from the C++
    source code license text to indicate this file is a part of GParted.
    
    See:  https://www.gnu.org/licenses/gpl-howto.html
    
        For programs that are more than one file, it is better to replace
        “this program” with the name of the program, and begin the
        statement with a line saying “This file is part of NAME”.

2013-05-27  Curtis Gedak <gedakc@gmail.com>

    Remove GNOME SVN from message text
    
    GNOME is now managed under git revision control (not SVN).
    Also missing dependencies can be installed in many ways.

2013-05-27  Curtis Gedak <gedakc@gmail.com>

    Add GNU All-Permissive License to autogen.sh

2013-05-24  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Update licensing statement in the README file
    
    Explicitly state that GParted is licensed under the GPLv2+ and the
    GParted Manual is licensed under the GFDLv1.2+.

2013-05-07  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add testbuild.sh script (#699881)
    
    For developers to build GParted in a git repository, logging the top
    commit and build results to testbuild.log.  Intended for use with
    git-test-sequence to verify every change of a patch set compiles, but
    can be used standalone too.
    
    Example usage:
        git-test-sequence origin/master.. testbuild.sh
    
    Further documentation can be found on the GParted web site at page:
        Git Source Code Management
        http://www.gparted.org/git.php
    
    Closes Bug #699881 - testbuild.sh - Builds GParted logging results

2013-05-25  Dušan Kazik <prescott66@gmail.com>

    Updated slovak translation

2013-05-17  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Only allow Undo and Apply after merging operations (#699452)
    
    It was possible to make GParted crash by adding a label, check or new
    UUID operation and then applying the operation before the view of
    pending operations had finished fully opening.  The operation would be
    successfully applied but GParted would crash afterwards.
    
    The fault was that Add_Operation() still enabled the Undo and Apply
    buttons and processed the GTK event loop before merging the list of
    pending operations.  Faulty code flow went like this:
    
        activate_*()
            Add_Operation()
                Add operation to the operations[] vector
                Enable Undo and Apply buttons
                Refresh_Visual()
                    Process GTK event loop
                        Process Apply button callback applying operations,
                        refreshing display and clearing operations[] vector
            Merge operations in the operations[] vector
            << Core dump here >>
                Merge_Operations()
                    Refresh_Visual()
    
    This faulty code flow came about when merging of operations was added
    and it didn't appreciate that the operations[] vector could have been
    processed and cleared by Add_Operations() before the merge step.
    Relevant commit:
    
        b10349ae37df06b7bf7de91ea93a3913535ade3a
        Merge overlapping operations (#438573)
    
    Fragment of code in the label operation case:
    
      2454  void Win_GParted::activate_label_partition()
      2455  {
      ...
      2472          Add_Operation( operation ) ;
      2473
      2474          // Verify if the two operations can be merged
      2475          for ( unsigned int t = 0 ; t < operations .size() - 1 ; t++ )
      2476          {
      2477              if ( operations[ t ] ->type == OPERATION_LABEL_PARTITION )
      2478              {
      2479                  if ( Merge_Operations( t, operations .size() - 1 ) )
      2480                      break;
      2481              }
      2482          }
    
    Commentary in the crashing label operation case:
    
      2472  The pending operation was already applied when Add_Operation()
            returned resulting in the operations[] vector being cleared
            setting its size to 0.
      2475  The return type of operations.size() is an unsigned integral, so
            the upper limit of the for loop is t < 0UL - 1.  Assuming a
            32-bit machine that's t < 4294967295.
      2477  operations[] vector is access from out of bounds offset 0
            upwards until unallocated memory is accessed resulting in a core
            dump.
    
    Fix this by not enabling the Undo and Apply buttons and processing the
    GTK event loop until after merging of operations has been performed.
    Fixed code flow goes like this:
    
        activate_*()
            Add_Operation()
                Add operation to the operations[] vector
            Merge operations in the operations[] vector
                Merge_Operations()
            show_operationslist()
                Enable Undo and Apply buttons
                Refresh_Visual()
                    Process GTK event loop
                        Process Apply button callback applying operations,
                        refreshing display and clearing operations[] vector
    
    Not allowing the operations list to be process until after the merge
    step is the be correct ordering.  This also prevents the new operation
    from flashing up in the operations list and then immediately
    disappearing if merged.  In the case of adding the first operation,
    delaying enabling the Undo and Apply buttons is enough as the buttons
    were previously disabled preventing the operation being applied before
    the merge.  In the case of adding further operations, processing of the
    GTK event loop must also be delayed until after the merge to prevent the
    operations being applied before the merge.  Although that window of
    opportunity would only be microseconds.
    
    Bug #699452 - Crash when applying operations before pending operations
                  fully displayed

2013-05-17  Curtis Gedak <gedakc@gmail.com>

    Remove fat32.cc from POTFILES.in (#700228)
    
    As part of bug 700228, the fat16 and fat32 code was combined.  As a
    result, the fat32.cc file no longer exists and hence is not available
    for translation.

2013-05-14  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Pad fat16/32 file system labels with spaces (#700228)
    
    Mlabel sometimes writes uninitialised memory at the end of the label.
    This causes mlabel, and therefore GParted, to display extra junk at the
    end of the label.  Depending on the bytes written GParted may also show
    the following error on stdout:
    
        (gpartedbin:18116): glibmm-CRITICAL **:
        unhandled exception (type Glib::Error) in signal handler:
        domain: g_convert_error
        code  : 1
        what  : Invalid byte sequence in conversion input
    
    This is caused by a bug in mlabel, believed fixed in mtools 4.0.14.
    Effects at least Fedora 14, RHEL/CentOS 6.x and Debian 6.  (Use label
    "1234567890" on Debian 6 to reproduce).  Reproduction steps:
    
        # mkdosfs -F16 /dev/sda7
        mkdosfs 3.0.9 (31 Jan 2010)
        # export MTOOLS_SKIP_CHECK=1
        # mlabel ::123456 -i /dev/sda7
        # mlabel -s :: -i /dev/sda7
         Volume label is 123456~1t
    
    It is not possible to detect which characters are junk so they can't be
    trimmed.  Instead just space pad labels so that at least newly written
    labels aren't effected.  (Fat labels are space padded on the disk by
    definition anyway).
    
    Bug #700228 - FAT16/32 labels are sometimes shown corrupted

2013-05-14  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Combine duplicate code for fat16/32
    
    There was virtually no difference between the separate modules for fat16
    and fat32.  Remove module fat32 and patch fat16 to serve both file
    system subtypes.  This is equivalent to what was previously done for
    ext[234] by commit:
    
        38dc55d49c062cb8e93c797f9bf166d3abc3456e
        Combine duplicate code for ext[234]

2013-05-17  Dimitris Spingos <dmtrs32@gmail.com>

    Updated Greek translation

2013-05-02  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Rename function relay_update
    
    Rename function to update_command_output() to better reflect that this
    callback updates the UI with the latest output read from the command
    being executed.
    
    This makes more sense knowing a future change will add a separate
    callback which parses the output read from the command and updates the
    progress bar.  This function should be named update_command_progress().

2013-05-02  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Rename signals update and eof
    
    Rename the libsigc++ signals to signal_update and signal_eof to match
    the naming used for signals in GParted.
        fgrep 'sigc::signal' include/*.h
    
    Also explicitly use the emit() method rather than using the object
    operator().  This again is to match the convention in GParted and make
    it more obvious what is happening.
        fgrep '.emit(' include/*.h

2013-04-30  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Rename class utils_execute_command_status
    
    Rename the class to CommandStatus to match the CamelCase naming used for
    classes in GParted.
        fgrep class include/*.h

2013-05-08  OKANO Takayoshi <kano@na.rim.or.jp>

    l10n: Update Japanese translation

2013-05-05  Curtis Gedak <gedakc@gmail.com>

    Add xdg-su to README (#699626)
    
    Add xdg-su to list of possible programs used to acquire root
    privileges in the gparted.desktop file.
    
    Bug #699626 - Enable gparted.desktop to prompt for root on default
                  openSUSE installation

2013-05-03  Curtis Gedak <gedakc@gmail.com>

    Add xdg-su program to gparted.desktop file (#699626)
    
    Add xdg-su to list of graphical switch-to-root programs to be
    considered for gparted.desktop file.
    
    The openSUSE GNU/Linux distribution includes the program xdg-su by
    default for graphically prompting for root privilege.
    
    This enhancement enables a user to compile and install gparted from
    source code on openSUSE and have the gparted menu entry graphically
    prompt for root privilege.
    
    Bug #699626 - Enable gparted.desktop to prompt for root on default
                  openSUSE installation

2013-04-30  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2013-04-30  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.16.1   ==========

2013-04-29  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fix autoconf check for set_default_icon_name method (#695279)
    
    The autoconf check for the Gtk::Window::set_default_icon_name() method
    was failing to detect its availability, but only on Ubuntu >= 11.10.
    
    Turns out that the autoconf check incorrectly defined the link libraries
    via the C++ flags variable CXXFLAGS, rather than the LIBS variable.
    This resulted in the libraries being specified in the wrong order on the
    command line.  The test only failed when Ubuntu also added the
    "--as-needed" flag to the linker by default [1] which required the
    libraries to be correctly specified at the end of the command line.
    
    [1] Ubuntu 11.10 Release Notes, GCC 4.6 Toolchain
        https://wiki.ubuntu.com/OneiricOcelot/ReleaseNotes#GCC_4.6_Toolchain
    
    This fixes commit:
    
        a04210788399736ff7f097cb75650ebcbd0a4950
        Only use Gtk::Window::set_default_icon_name method when available
    
    Bug #695279 - GParted doesn't compile on RHEL / CentOS 5.9

2013-04-25  Phillip Susi <psusi@ubuntu.com>

    Avoid glibmm GSource bug/crash (again) (#697727)
    
    The previous commit missed one glibmm GSource wrapper in the form of the
    io watch for the PipeCapture class.  Convert this one to use glib
    directly as well.
    
    Bug #697727 - Segfault in livecd Gparted v 0.15.0-3 when copying
                  partition

2013-04-27  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add copyright notice to PipeCapture .cc and .h files

2013-04-28  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Only install fallback icon when required (#695279)
    
    Applications are moving away from storing icons in /usr/share/pixmaps,
    instead preferring /usr/share/icons/hicolor/$SIZE/apps, so only install
    the fallback icon when GParted requires it.
    
    Bug #695279 - GParted doesn't compile on RHEL / CentOS 5.9

2013-04-24  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add fallback method for specifying GParted icon (#695279)
    
    On RHEL / CentOS 5.9 GParted couldn't set an icon as the
    set_default_icon_name() method is not available.  See commit [1] for
    details.
    
    Re-add the old set_icon_from_file() method as a fallback and re-install
    a GParted pixmap as was used before commit [2].
    
    Commit [1]:
        a04210788399736ff7f097cb75650ebcbd0a4950
        Only use Gtk::Window::set_default_icon_name method when available
    
    Commit [2]:
        f5a80bc9048ffa859aab40de27d96a5dd1d7f65b
        Enabled GParted to use themed app icon (Tango theme)
    
    Bug #695279 - GParted doesn't compile on RHEL / CentOS 5.9

2013-04-18  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Work around failure to execute commands with old glibmm (#695279)
    
    On RHEL / CentOS 5.9 GParted failed to run any external commands and
    instead reported the following warnings to the terminal:
    
        # src/gpartedbin
        ======================
        libparted : 1.8.1
        ======================
        Failed to change to directory '' (No such file or directory)
        Failed to change to directory '' (No such file or directory)
        Failed to change to directory '' (No such file or directory)
        ...
    
    Utils::execute_command() and FileSystem::execute_command() passed a zero
    length string for the working directory to
    Glib::spawn_async_with_pipes() to mean don't change directory.  Instead
    glibmm just tried to change to the directory with a zero length name.
    This was fixed with glibmm >= 2.21.2 released July 2009, however RHEL /
    CentOS 5.9 only has glibmm 2.12.10.
    
    Relevant glibmm fix:
        Treat empty Glib::spawn*() working dir as unset
        https://git.gnome.org/browse/glibmm/commit/?id=8a7805cbbe6d268e975669349beb4e82d971537d
    
    Fix by simply specifying ".", the current working directory, as the
    directory to change into before executing all commands.
    
    Bug #695279 - GParted doesn't compile on RHEL / CentOS 5.9

2013-04-14  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Further RHEL / CentOS 5.9 compile fixes (#695279)
    
    Glib::ustring::compose() method requires glibmm >= 2.16, but RHEL /
    CentOS 5.9 only provides glibmm 2.12.  Replace with String::ucompose()
    as is used everywhere else in the code.
    
    Add missing include for kill() and SIGINT declarations.
    
    Bug #695279 - GParted doesn't compile on RHEL / CentOS 5.9

2013-04-25  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Recognise HFSX variant as an HFS+ file system (#698876)
    
    Roughly HFSX is a case sensitive version of the HFS+ file system.
    
    Parted reports such a file system as "hfsx" rather than "hfs+".
    
        # mkfs.hfsplus -v "case insensitive hfs+" /dev/sda7
        Initialized /dev/sda7 as a 1024 MB HFS Plus volume
    
        # mkfs.hfsplus -s -v "case sensitive hfs+" /dev/sda8
        Initialized /dev/sda8 as a 1024 MB HFS Plus volume
    
        # parted /dev/sda print
        ...
        Number  Start   End     Size    Type      File system     Flags
        ...
         7      356GB   357GB   1074MB  logical   hfs+
         8      357GB   358GB   1074MB  logical   hfsx
    
        # blkid /dev/sda[78]
        /dev/sda7: LABEL="case insensitive hfs+" TYPE="hfsplus"
        /dev/sda8: LABEL="case sensitive hfs+" TYPE="hfsplus"
    
    Make GParted recognise HFSX file system variants too.
    
    Closes Bug #698876 - GParted fails to recognize HFS+ partition (possible
                         due to disabled journaling)

2013-04-24  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2013-04-24  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.16.0   ==========

2013-04-22  Daniel Șerbănescu <cyber19rider@gmail.com>

    Updated Romanian Translation

2013-04-20  Wolfgang Stöggl <c72578@yahoo.de>

    [l10n] Updated German documentation translation

2013-04-20  Wolfgang Stöggl <c72578@yahoo.de>

    [l10n] Updated German translation

2013-04-20  Gabor Kelemen <kelemeng@gnome.hu>

    Updated Hungarian translation

2013-04-19  Milo Casagrande <milo@ubuntu.com>

    [l10n] Updated Italian translation.

2013-04-18  Curtis Gedak <gedakc@gmail.com>

    Fix gparted scans forever blank disk in virtual machine (#697518)
    
    In some circumstances gparted would appear to scan forever if it
    encountered a blank hard disk.  This would happen if the timing of
    events was right and gparted encountered a disk without a partition
    table.  The missing partition table would cause a call to the
    exception handler, which could get stuck in a thread waiting position.
    
    The problem was traced back to the ped_exception_handler
    and a cond.signal() call missing the requisite mutex.lock() and
    mutex.unlock() around the signal call.
    
    Closes Bug #697518 - gparted scans forever blank disk in virtualbox

2013-04-19  Christian Kirbach <Christian.Kirbach@googlemail.com>

    Updated German translation

2013-04-18  Muhammet Kara <muhammetk@gmail.com>

    l10n: Update Turkish translation

2013-04-18  Claude Paroz <claude@2xlibre.net>

    Updated French translation

2013-04-17  Rafael Ferreira <rafael.f.f1@gmail.com>

    Updated Brazilian Portuguese translations

2013-04-16  Phillip Susi <psusi@ubuntu.com>

    Avoid glibmm GSource bug/crash (#697727)
    
    The glibmm GSource wrappers have a bug where they do not do
    reference counting properly, and have a race condition where
    the background thread can try to touch the source after the
    main thread has already processed and destroyed it.  This
    results in writes to freed memory and sometimes this causes
    crashes or other erratic behavior.  Avoid using the glibmm
    wrappers and use glib directly.  See bug #561885 for details
    of the glibmm bug.
    
    Bug #697727 - Segfault in livecd Gparted v 0.15.0-3 when copying partition

2013-04-13  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Correctly report usage of absolutely full NTFS (#697946)
    
    For an absolutely full NTFS GParted doesn't show the file system usage
    but instead shows a warning against the partition.
    
    GParted was looking only for "resize at %d" to determine file system
    used figure in the output from the ntfsresize command.  Also handle
    finding "ERROR: Volume is full" too to derive used figure.
    
    NTFS with 1 block free case:
        # ntfsresize --info --force --no-progress-bar /dev/sda9
        ...
        Current volume size: 1073738240 bytes (1074 MB)
        ...
        Collecting resizing constraints ...
        You might resize at 1073737728 bytes (freeing 4096 bytes).
        ...
        # echo $?
        0
    
    Absolutely full NTFS case:
        # ntfsresize --info --force --no-progress-bar /dev/sda9
        ...
        Current volume size: 1073738240 bytes (1074 MB)
        ...
        Collecting resizing constraints ...
        ERROR: Volume is full. To shrink it, delete unused files.
        # echo $?
        1
    
    Closes Bug #697946 - Absolutely full NTFS reported as partition error

2013-04-12  Nicolás Satragno <nsatragno@gnome.org>

    Updated Spanish translation

2013-04-12  Nicolás Satragno <nsatragno@gnome.org>

    Updated Spanish translation

2013-04-09  Rafael Ferreira <rafael.f.f1@gmail.com>

    Updated Brazilian Portuguese translation

2013-04-02  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Updated Serbian translation

2013-04-01  Aurimas Černius <aurisc4@gmail.com>

    Updated Lithuanian translation

2013-04-01  Daniel Șerbănescu <cyber19rider@gmail.com>

    Updated romanian translation

2013-03-31  Carles Ferrando <carles.ferrando@gmail.com>

    [l10n] Updated Catalan (Valencian) translation

2013-03-31  Pau Iranzo <paugnu@gmail.com>

    [l10n] Update Catalan translation

2013-03-31  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2013-03-30  Martin Srebotnjak <miles@filmsi.net>

    Updated Slovenian translation

2013-03-29  Martin Srebotnjak <miles@filmsi.net>

    Updated Slovenian translation

2013-03-27  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2013-03-27  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2013-03-27  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2013-03-27  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2013-03-26  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2013-03-25  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2013-03-25  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2013-03-16  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove unused function copy_filesystem_simulation()
    
    The function is no longer used after commit:
    
        b9b4b2e55d1dadd5a5c0fef552dbbd2499561182
        Remove simulation pass ( read test ) on move

2013-02-23  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Don't hard code reiser4 max label length when reading the label
    
    Lookup the maximum reiser4 file system label length instead, so that it
    is defined in only one place.  Small improvement missed from earlier
    commit:
    
        18941e24d3cb0b97a6d7cf52800f8f506f6a9ba8
        Avoid reading trailing junk for a reiser4 label (#689318)

2013-02-25  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Refactor and rename GParted_Core::open/close_device_and_disk()
    
    These functions in GParted_Core:
        open_device()
        open_device_and_disk()
        close_disk()
        close_device_and_disk()
    call the following functions in the libparted API:
        ped_device_get()
        ped_disk_new()
        ped_disk_destroy()
        ped_device_destroy()
    which don't open or close anything.  Instead they allocate and
    deallocate PedDevice and PedDisk memory structures which describe block
    devices and partition tables respectively.
    
    Rename functions:
        open_device_and_disk()  -> get_device_and_disk()
        close_device_and_disk() -> destroy_device_and_disk()
    and merge open_device() and open_device() as each only wrapped one
    libparted function and was only called from a single place.

2013-03-03  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add "cleared" file system format details to the GParted Manual (#688882)
    
    Minimum update explaining the meaning of the cleared and unformatted
    file system types.
    
    Also markup file system names as GUI menu items.
    
    Bug #688882 - Improve clearing of file system signatures

2013-03-23  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove use of wipefs to clear file system signatures (#688882)
    
    The wipefs command has the following significant limitations which were
    worked around in previous commits:
    
    1)  Wasn't available in the earliest distributions supported by GParted;
    
    2)  Had to be called 3 times to erase vfat (fat16/32) signatures in all
        but the most recent versions.
    
    This meant we had all the code to clear file system signatures without
    using the wipefs command as well as extra complexity of using wipefs
    too.  So just remove use of the wipefs command.
    
    Bug #688882 - Improve clearing of file system signatures

2013-02-25  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Clear nilfs2 secondary super block (#688882)
    
    Wipefs only clears the nilfs2 file system signature from the primary
    super block at the start of the partition.  This is enough for blkid to
    no longer detect the file system.  However parted (>= 2.4 with nilfs2
    support) and therefore GParted still detect the file system using the
    secondary super block at the end of the partition.
    
        # mkfs.nilfs2 /dev/sda12
        # wipefs -a /dev/sda12
        2 bytes were erased at offset 0x00000406 (nilfs2): 34 34
        # blkid /dev/sda12
        # parted /dev/sda12 print
        Model: Unknown (unknown)
        Disk /dev/sda12: 1074MB
        Sector size (logical/physical): 512B/512B
        Partition Table: loop
        Disk Flags:
    
        Number  Start  End     Size    File system  Flags
         1      0.00B  1074MB  1074MB  nilfs2
    
    Overwrite the nilfs2 secondary super block at the end of the partition
    with 4K block of zeros.  Always do this just in case the partition
    contains a nilfs secondary super block but is detected as a different
    file system.  Such an example was documented in an earlier commit
    message.
    
    Bug #688882 - Improve clearing of file system signatures

2013-03-02  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Make flush OS cache a reported step (#688882)
    
    As failure of flushing the cache can lead to misidentification of file
    systems make it a checked step in the displayed operation details.
    
    Bug #688882 - Improve clearing of file system signatures

2013-03-02  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Display failure from wipefs as an error not a warning (#688882)
    
    When wipefs command fails this means that in the display of the
    operation results tree:
    
     1) The command is displayed with a time and a stop sign, rather than no
        time and a warning sign;
    
     2) There is no report of any warnings or failures at the top level
        summary.
    
    (The immedately following "clear primary signatures" step will clear all
    the file system signatures which wipefs failed to do.  Should this fail
    too it will report errors which will fail the whole operation).
    
    Bug #688882 - Improve clearing of file system signatures

2013-02-27  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Implement fallback if wipefs is not available or fails (#688882)
    
    RHEL/CentOS 5.x uses util-linux 2.13 which predates the wipefs command.
    Also the wipefs command may fail.  Therefore implement a fallback which
    caters for both these cases by overwriting all possible file system
    super blocks with zeros at the start of the partition.
    
    The "MUST be cleared" requirement stated in the first patch is now
    satisfied.  Therefore the status of the "clear old file system
    signatures" step, as returned by erase_filesystem_signatures(), now
    reflects the success of the wipefs command or the internal write zeros.
    Failure of both will stop all operations, matching what happens with all
    other steps.
    
    Bug #688882 - Improve clearing of file system signatures

2013-02-17  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Workaround not so old wipefs only erasing 1 of 3 vfat signatures (#688882)
    
    Before util-linux 2.21.0, released Feb 2012, wipefs only cleared one of
    the three vfat (fat16/fat32) signatures it can be detected by each time
    wipefs was run.  Also if a nilfs2 file system was created before all
    three signatures were cleared the partition was still recognised as a
    vfat file system, albeit a corrupted one, rather than as a nilfs2 file
    system.
    
    Old wipefs clearing vfat signatures:
        # wipefs --version
        wipefs from util-linux 2.20.1
        # wipefs -a /dev/sda7
        8 bytes were erased at offset 0x52 (vfat)
        they were: 46 41 54 33 32 20 20 20
        # wipefs -a /dev/sda7
        1 bytes were erased at offset 0x0 (vfat)
        they were: eb
        # wipefs -a /dev/sda7
        2 bytes were erased at offset 0x1fe (vfat)
        they were: 55 aa
    
    New wipefs clearing vfat signatures:
        # wipefs --version
        wipefs from util-linux 2.21.2
        # wipefs -a /dev/sda12
        8 bytes were erased at offset 0x00000052 (vfat): 46 41 54 33 32 20 20 20
        1 bytes were erased at offset 0x00000000 (vfat): eb
        2 bytes were erased at offset 0x000001fe (vfat): 55 aa
    
    Workaround by calling "wipefs -a" three times if the output indicated
    only one vfat signature was cleared.
    
    Bug #688882 - Improve clearing of file system signatures

2013-01-15  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Flush device after wiping a file system (#688882)
    
    When just formatting an existing partition to "cleared", GParted just
    uses wipefs to clear the file system signatures.  Afterwards parted/
    libparted still detect the file system and GParted shows errors from the
    file system specific tools reporting the file system doesn't exist.
    
        # wipefs /dev/sda7
        offset               type
        ----------------------------------------------------------------
        0x0                  xfs   [filesystem]
                             UUID:  28399a74-83a5-4ed7-aaf8-c76ac449fb57
        # wipefs -a /dev/sda7
        4 bytes were erased at offset 0x0 (xfs)
        they were: 58 46 53 42
        # parted /dev/sda print
        Model: ATA SAMSUNG HM500JI (scsi)
        Disk /dev/sda: 500GB
        Sector size (logical/physical): 512B/512B
        Partition Table: msdos
    
        Number  Start   End     Size    Type      File system     Flags
         1      1049kB  538MB   537MB   primary   ext4            boot
         2      538MB   5907MB  5369MB  primary   linux-swap(v1)
         3      5907MB  32.8GB  26.8GB  primary   ext4
         4      32.8GB  500GB   467GB   extended
         5      32.8GB  355GB   322GB   logical   ext3
         6      355GB   356GB   1074MB  logical
         7      356GB   357GB   1074MB  logical   xfs
        # xfs_db -c 'sb 0' -c 'print blocksize' -c 'print dblocks' -c 'print fdblocks' -r /dev/sda7
        xfs_db: /dev/sda7 is not a valid XFS filesystem (unexpected SB magic number 0x00000000)
    
    Wipefs was run on the partition specific block device (/dev/sda7) where
    as libparted reads the disk using the whole disk device (/dev/sda).
    However as the Linux buffer cache does not provide cache coherency, the
    xfs file system can still be found in the cache of /dev/sda.
    
    Fix this by calling ped_device_sync() after wipefs as it guarantees
    cache coherency.
    
    (As documented in erase_filesystem_signatures() there are cases when
    calling ped_device_sync() isn't necessary, but testing shows that the
    whole processes takes at most 0.15 seconds.  As this is in the middle of
    applying an operation, uses won't notice this extra time so just always
    call ped_device_sync()).
    
    Bug #688882 - Improve clearing of file system signatures

2012-12-08  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add new "cleared" file system format (#688882)
    
    Add "cleared" to the bottom of list of file system formats available in
    the Create new Partition dialog and in the Format to --> (file system
    list) menu.  This clears existing file system signatures in the newly
    created partitions and existing partitions respectively.
    
    Bug #688882 - Improve clearing of file system signatures

2012-12-07  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Refactor Win_GParted::create_format_menu() (#688882)
    
    Move some code into new create_format_menu_add_item() sub-function which
    adds one file system entry to the Partition --> Format to -->
    (file system list) menu.
    
    Bug #688882 - Improve clearing of file system signatures

2012-12-01  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Use wipefs to clear old signatures before creating new file systems (#688882)
    
    Previously the function erase_filesystem_signatures() was used to clear
    file system signatures when a new partition was created and when an
    existing partition was formatted with a file system.  However this was
    only available with libparted <= 2.4 and then only for the file systems
    which libparted supports.
    
    Having multiple different file system signatures on a partition leads to
    misidentification of file system.  For example creating a nilfs2 over
    the top of a fat32 file system is detected as a fat32, not nilfs2.  This
    shows that old file system signatures must be cleared before a new file
    system is created.
    
    Fix by always using "wipefs -a /dev/PARTITION" command to clear all old
    file system signatures rather than libparted API calls.  Failure from
    wipefs is only considered a warning so doesn't fail the file system
    creation.  (This doesn't yet fully meet the "MUST be cleared"
    requirement above.  Will be fully met later in this patchset).  Output
    from the wipefs command is displayed as a new sub-step which looks like
    this:
    
        v Format /dev/sda7 as xfs                            00:00:05
          > calibrate /dev/sda14                             00:00:01
          v clear old file system signatures in /dev/sda7    00:00:01  [NEW]
            > wipefs -a /dev/sda7                                      [NEW]
          > set partition type on /dev/sda7                  00:00:02
          v create new xfs file system                       00:00:01
            > mkfs.xfs -f -L "" /dev/sda7
    
    Also signatures are only cleared immediately before a new file system is
    written and not when an unformatted partition is created.  This allows
    recovery from accidental partition deletion by re-creating the deleted
    partition as unformatted.
    
    Bug #688882 - Improve clearing of file system signatures

2013-03-10  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add autoconf checking messages for two checks
    
    Make the generated configure script additionally report these two checks
    with their outcome:
        checking for gtk_show_uri function... yes
        checking for Gtk::MessageDialog::get_message_area() method... yes

2013-03-10  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Modernise to a minimum of autoconf 2.50
    
    1)  Require autoconf >= 2.50
        (Released May 2001).
    
    2)  Rename file to configure.ac
        (Recommended with autoconf >= 2.50).
    
    3)  Update macro from AC_TRY_RUN to AC_RUN_IFELSE
        (As wanted by the autoupdate program).

2013-03-03  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Only use Gtk::Window::set_default_icon_name method when available (#695279)
    
    GParted fails to compile on RHEL/CentOS 5.9 because it doesn't provide
    the Gtk::Window::set_default_icon_name() method.  The "gtkmm GTK::Window
    Class Reference" document says that set_default_icon_name() is available
    in gtkmm >= 2.6, however it is not available in RHEL/CentOS 5.9 with
    gtkmm 2.10.
    
    Add an autoconf compile and link check for the set_default_icon_name()
    method and make GParted only use the method when available.
    
    Bug #695279 - GParted doesn't compile on RHEL / CentOS 5.9

2013-03-03  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Implement fallback if Glib::Regex class is missing (#695279)
    
    GParted fails to compile on RHEL/CentOS 5.9 because it doesn't provide
    the Glib::Regex class.  Glib::Regex class requires glibmm >= 2.14,
    however RHEL/CentOS 5.9 only provides glibmm 2.12.
    
    Add an autoconf check for the Glib::Regex class and fallback code using
    the POSIX regex function.  Fall back code is the same as that used prior
    to commit:
        b6f1c56fb1e6119131a475ff6362f8cd59b1b33b
        Enhance regexp_label method to handle unicode characters
    
    Bug #695279 - GParted doesn't compile on RHEL / CentOS 5.9

2013-03-19  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Update AUTHORS
    
    Provide credit for Patrick Verner

2013-03-16  Patrick Verner <exodusrobot@yahoo.com>

    Add f2fs file system support (#695396)
    
    Only supports detection and creation of f2fs file systems.  Requires
    f2fs-tools and a blkid with f2fs support, util-linux > 2.22.2.
    
    f2fs-tools v1.1.0 only supports file system creation.
    Currently requires util-linux directly from the git repository as f2fs
    support was only committed on 5 Feb 2013 and it has not yet been
    released.
    
    Closes Bug #695396 - Please apply f2fs patch

2013-03-19  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2013-03-19  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.15.0   ==========

2013-03-18  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2013-03-18  Daniel Șerbănescu <cyber19rider@gmail.com>

    Updated Romanian Translation

2013-03-17  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Select largest unallocated partition by default (#667365)
    
    After a refresh, instead of having no partition selected, default to the
    largest unallocated partition.  This allows immediate creation of a new
    partition in the unallocated space.
    
    Bug 667365 - Free space should be selected by default

2013-03-17  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Revert "Select unallocated partition by default (#667365)"
    
    This reverts commit 3dd769d955764455ade6ddee746a37657bff8f4a.
    
    It didn't consider unallocated partitions within extended partitions
    when looking for the largest one to select.

2013-03-17  Joe Hansen <joedalton2@yahoo.dk>

    Updated Danish translation

2013-03-17  Aurimas Černius <aurisc4@gmail.com>

    Updated Lithuanian translation

2013-03-17  António Lima <amrlima@gmail.com>

    Updated Portuguese translation and converted to New Spelling (Novo AO)

2013-03-16  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Updated Serbian translation

2013-03-15  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2013-03-14  Gabor Kelemen <kelemeng@gnome.hu>

    Updated Hungarian translation

2013-03-12  Mario Blättermann <mario.blaettermann@gmail.com>

    [l10n] Updated German translation

2013-03-12  Enrico Nicoletto <liverig@gmail.com>

    Updated Brazilian Portuguese translation

2013-03-12  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2013-03-12  Claude Paroz <claude@2xlibre.net>

    Updated French translation

2013-03-12  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2013-03-11  Curtis Gedak <gedakc@gmail.com>

    Mark string "Force Cancel" for translation

2013-03-11  Curtis Gedak <gedakc@gmail.com>

    Update translation file list in POTFILES.in

2013-03-11  Curtis Gedak <gedakc@gmail.com>

    Update AUTHORS
    
    Provide credit for patch set by Phillip Susi

2013-01-30  Phillip Susi <psusi@ubuntu.com>

    Pass Partition instead of just its path to FileSystem::copy()
    
    Other operations get the Partition object and can look up the path or other
    attributes they need.  The copy method should be no different.

2013-01-30  Phillip Susi <psusi@ubuntu.com>

    Cleanup duplicate fs code
    
    Many filesystems do not implement some of their methods, but had to provide
    dummy implementations.  Remove all of the dummy implementations and instead
    just provide one in the base FileSystem class.

2013-01-30  Phillip Susi <psusi@ubuntu.com>

    Fix dialog progress details view size (#602635) (#662722)
    
    The details view refused to use additional space, even after the window was
    expanded, instead continuing to use the scrollbars.  Now resizing the
    window will be allowed regardless of the state of the details expander, and
    the details view will expand to use the extra space.  Also request enough
    initial width to not need a horizontal scrollbar.
    
    Closes:
    Bug 602635 - list of tasks in apply dialog does not expand to the available
                 vertical space
    
    Bug 662722 - Increase default width of "applying..." dialog to include the
                 "Details" status icons

2013-01-21  Phillip Susi <psusi@ubuntu.com>

    Combine duplicate code for ext[234]
    
    There were separate modules for ext3 and ext4 even though there
    were virtually no differences with ext2.  Remove the duplicate
    modules and patch ext2 to serve as a common reference for all
    three sub types.

2013-01-27  Phillip Susi <psusi@ubuntu.com>

    Clean up OperationDetail timer initialization
    
    The timer variables were not being properly initialized leading to bogus
    time values sometimes being displayed.

2013-01-26  Phillip Susi <psusi@ubuntu.com>

    Don't revert more than needed
    
    After a move is canceled or fails, an attempt is made to revert the disk to
    its previous state.  This was moving back all blocks that had already been
    copied.  Many of the first blocks copied during a move do not overwrite
    any valid data, and so do not need put back after an error, so don't bother
    doing so.

2013-01-26  Phillip Susi <psusi@ubuntu.com>

    Check fs after reverting partition table
    
    After a failed or canceled move, the move was reverted, and the filesystem
    was fscked while the partition was still in the expanded state encompassing
    the original and destination partitions, resulting in errors and
    corruption.  Move fsck to after the partition table has been restored to
    its original state.

2013-01-26  Phillip Susi <psusi@ubuntu.com>

    Remove simulation pass ( read test ) on move
    
    The simulation pass is unnecessary and just wastes more time when moving,
    so get rid of it.

2013-01-20  Phillip Susi <psusi@ubuntu.com>

    Bind ctrl-enter to apply-operations
    
    Bind the keyboard accelerator key ctrl-enter to apply operations.

2013-01-20  Phillip Susi <psusi@ubuntu.com>

    Select unallocated partition by default (#667365)
    
    After a refresh, instead of having no partition selected, default to the
    largest unallocated partition.  This allows immediate creation of a new
    partition in the unallocated space.
    
    Closes Bug 667365 - Free space should be selected by default

2013-01-20  Phillip Susi <psusi@ubuntu.com>

    Bind Insert key to new partition
    
    Add an accelerator key for Insert to trigger the new partition menu item.

2013-01-28  Phillip Susi <psusi@ubuntu.com>

    Flag mkfs and copy operations as safe to cancel (#601239)
    
    Closes Bug #601239 - Please allow 'Cancel after current operation'

2013-01-20  Phillip Susi <psusi@ubuntu.com>

    Add proper cancel support (#601239)
    
    Interested operations can now connect a signal to their OperationDetail
    to be notified of a cancelation request.  The internal copy/move code
    will now cleanly stop on cancelation, allowing the partition to be
    rolled back to its previous state.  This makes canceling a move
    perfectly safe.
    
    After clicking cancel, the button changes to "Force Cancel" and is
    disabled for 5 seconds.  Operations that are safe to cancel will do so
    and those that are not will continue to run.  Clicking force cancel
    asks operations to cancel, even if doing so is unsafe.  For the
    internal copy/move algorithm, canceling is always safe because an
    error results in a rollback operation.  Canceling the rollback is
    unsafe.  For external commands, filesystem modules may indicate
    that the command is safe to cancel or not.  Canceled commands will
    be terminated with SIGINT.
    
    As a result of the new safe cancel vs force cancel distinction, the
    scary warning about cancl causing corruption has been moved to
    after clicking the force cancel button.
    
    Part of Bug #601239 - Please allow 'Cancel after current operation'

2013-01-20  Phillip Susi <psusi@ubuntu.com>

    Thread the internal copy algorithm (#685740)
    
    Have the copy code create a background thread to do the actual copying so
    that it won't block the main loop.
    
    Part of Bug 685740 - Refactor to use asynchronous command execution

2013-02-21  Phillip Susi <psusi@ubuntu.com>

    Reduce threading (#685740)
    
    Win_Gparted and Dialog_Progress were creating threads to perform most
    functions in the background.  Most of the time, the only reason the
    threads blocked was to execute an external command.  The external command
    execution has been changed to spawn the command asynchronously and wait
    for completion with a nested main loop.  While waiting for completion,
    the pipe output is captured via events.  In the future, this will allow
    for it to be parsed in real time to obtain progress information.
    
    Those tasks in GParted_Core that still block now spawn a background thread
    and wait for it to complete with a nested main loop to avoid hanging the
    gui.
    
    Part of Bug #685740 - Refactor to use asynchronous command execution

2013-01-17  Phillip Susi <psusi@ubuntu.com>

    Remove mtoolsrc file
    
    fat16 and fat32 were creating a temp mtoolsrc file to configure the
    command to reference a drive letter and ignore certain errors.  They have
    been changed to pass this information via the command line and environment
    instead.

2012-01-24  Phillip Susi <psusi@ubuntu.com>

    Switch Dialog_Progress to use Glib thread instead of pthread (#601239)
    
    Dialog_Progress was using pthread_create() so that it could later
    pthread_cancel() the thread.  pthread_cancel() is wildly unsafe and full
    of errors.  Changed to use Glib's threads like the rest, and only cancel
    between operations.  Because it can take some time to cancel, disable
    the cancel button once it has been clicked once.
    
    Bug 601239 - Please allow 'Cancel after current operation'

2013-01-14  Phillip Susi <psusi@ubuntu.com>

    Use a full fledged nested main loop while waiting and pulsing progress bars (#685740)
    
    Win_Gparted and Dialog_Progress were looping on Gtk::Main::events_pending()
    and iteration() with usleeps in between.  Use a full mainloop instead and
    a proper timeout to trigger pulsebar updates instead of usleeps.
    
    Part of Bug 685740 - Refactor to use asynchronous command execution

2013-01-14  Phillip Susi <psusi@ubuntu.com>

    Remove gdk_threads_enter/exit (#685740)
    
    Use of these functions is depreciated and making gtk calls in a background
    thread still sometimes causes deadlocks or crashes.  Change ped exception
    handler to instead use an idle function to force the main thread to display
    the dialog box.
    
    Part of Bug 685740 - Refactor to use asynchronous command execution

2013-03-05  Dušan Kazik <prescott66@gmail.com>

    Updated slovak translation

2013-03-03  Curtis Gedak <gedakc@gmail.com>

    Fix move partition right to left shrinks partition 1 MiB (#695078)
    
    When moving a MiB aligned primary partition from right to left, the
    resulting partition was unexpectedly 1 MiB smaller in size.
    
    From further testing, this occurred only if the move boundaries
    overlapped the original partition boundaries.
    
    In cases where the move did not overlap the original partition
    boundaries, then the size remained the same.
    
    Closes Bug #695078 - Move of MiB aligned partition right to left
                         yields unexpected shrink of 1 MiB

2013-03-03  Christian Kirbach <Christian.Kirbach@googlemail.com>

    Updated German translation

2013-02-24  Curtis Gedak <gedakc@gmail.com>

    Add docbook style sheets to README to speed up build time
    
    The w3C has implemented measures to discourage excessive DTD traffic
    and to encourage caching the XML.  See,
    
    The W3C servers are slow to return DTDs. Is the delay intentional?
    http://www.w3.org/Help/Webmaster.html#slowdtd
    
    Caching XML data at install time
    http://www.w3.org/QA/2008/09/caching_xml_data_at_install_ti.html
    
    Many GNU/Linux distributions conveniently include these docbook
    style sheets in a package.  This package has been added to the
    dependencies for building from source.
    
    Also added and updated are commands related to installation on
    OpenSUSE.

2013-02-21  Curtis Gedak <gedakc@gmail.com>

    Update copyright year

2013-02-21  Curtis Gedak <gedakc@gmail.com>

    Update AUTHORS
    
    Provide credit for patch by Jan Claeys

2013-02-16  Jan Claeys <devel@janc.be>

    Work around faulty "complete disks" detection in mkdosfs (#693955)
    
    Add -I option to 'mkdosfs' command to work around faulty detection of
    "complete disks" vs. "partitions".
    
    Bug #693955 - mkdosfs detects "complete disk" vs. "partition" incorrectly
    
    Thanks to Kano for reporting this!
    
    (This will also be needed if GParted ever allows formatting a device without
    partitioning it.)

2013-02-17  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2013-02-06  Muhammet Kara <muhammetk@acikkaynak.name.tr>

    [l10n] Updated Turkish translation

2013-01-22  Reinout van Schouwen <reinouts@gnome.org>

    Updated Dutch translation by Paulus Santané (laudaka)
    <laudaka@xs4all.nl>

2013-01-20  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Prevent crash when using an unknown locale (#692049)
    
    When GParted is run with a locale the OS doesn't know it crashes.
    Reapply original fix.
    
        # LANG=xx_XX.UTF-8 ~mike/bin/gpartedbin
    
        (process:20385): Gtk-WARNING **: Locale not supported by C library.
                Using the fallback 'C' locale.
        ======================
        libparted : 3.1
        ======================
    
        (gpartedbin:20385): glibmm-ERROR **:
        unhandled exception (type std::exception) in signal handler:
        what: locale::facet::_S_create_c_locale name not valid
    
        Trace/breakpoint trap (core dumped)
    
    Original bug:
        Bug #157871 - gparted 0.0.6 segfaults on start
    First fix:
        commit a98126d69b176a35ca30bbdb469e84478d76f08d
        quick 'fix' for crashers in some locales (#157871) basicly the same +
    Accidentally reintroduced by:
        commit a739afc9a1d1d94a8c95446db762db93cff15572
        Update String::ucompose library to version 1.0.5
    
    Bug #692049 - Troubles with some locales

2013-01-12  Curtis Gedak <gedakc@gmail.com>

    Update AUTHORS
    
    Provide credit for patch by Mathieu Dupuy

2012-12-14  Mathieu Dupuy <deronnax@gmail.com>

    Argument vector usage improvement (#689689)
    
    Minor change to filling user_devices vector.
    
    Closes Bug #689689 - argument vector filling improvement proposal

2013-01-02  Curtis Gedak <gedakc@gmail.com>

    Provide credit in About dialog for contributions
    
    Recognize contributions by Sinlu Bes.

2013-01-02  Curtis Gedak <gedakc@gmail.com>

    Update AUTHORS
    
    Provide credit for patches by Sinlu Bes and Mike Fleetwood

2012-12-29  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove redundant code trimming labels to length before use (#689318)
    
    No longer need to trim fat16, fat32 and xfs labels as all labels are
    limited to their maximum lengths during entry.
    
    Bug #689318 - filesystem type specific support for partition name
                  maximum length

2012-12-29  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Avoid reading trailing junk for a reiser4 label (#689318)
    
    For a reiser4 file system with exactly the maximum size 16 character
    label, debugfs.reiser4 may include junk at the end of the label it
    prints.  (It reads the label into a 16 character array and prints it as
    a string, but there isn't a nul terminating character).
    
        # mkfs.reiser4 --yes --label abcdefghij123456 /dev/sda13
        # debugfs.reiser4 /dev/sda13 2> /dev/null | grep label:
        label:          abcdefghij123456!
    
    Trim the read label to at most 16 characters.
    
    Bug #689318 - filesystem type specific support for partition name
                  maximum length

2012-12-31  Pau Iranzo <paugnu@gmail.com>

    [l10n] Updated Catalan translation

2012-12-16  sinlu bes <e80f00@gmail.com>

    Make the partition label length dependent from the file system (#689318)
    
    fixes Bug #689318 - filesystem type specific support for partition name
                        maximum length

2012-12-28  Yaron Shahrabani <sh.yaron@gmail.com>

    Updated Hebrew translation.

2012-12-14  Yuri Myasoedov <omerta13@yandex.ru>

    Updated Russian translation

2012-12-12  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2012-12-12  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.14.1   ==========

2012-12-11  Dušan Kazik <prescott66@gmail.com>

    Updated slovak translation

2012-11-14  Curtis Gedak <gedakc@gmail.com>

    Remove SWRaid method as it is no longer needed (#678379)
    
    Active Linux software RAID devices are detected in the
    Proc_Partitions_Info method.  Hence the SWRaid method is no longer
    required.
    
    Removal of the SWRaid method fixes the problem with the error message:
    
      Could not stat device /dev/md/0 - No such file or directory
    
    This fixes the problem because we no longer use "mdadm --examine
    --scan" in an attempt to detect Linux software RAID devices.  The
    mdadm command was returning device names such as /dev/md/0, which are
    incorrect for GParted.
    
    NOTE:  With this change, GParted no longer requires the mdadm command
           to detect Linux software RAID devices.
    
    Closes Bug #678379 - Could not stat device /dev/md/0 - No such file or
                         directory

2012-11-14  Curtis Gedak <gedakc@gmail.com>

    Add regexp for Linux SW RAID devices in /proc/partitions (#678379)
    
    Add regular expression to detect the device entry only (e.g., md127)
    and not the partitions (e.g., md127p1).
    
    Linux software RAID devices are listed in /proc/partitions as follows:
    
    # cat /proc/partitions
    major minor  #blocks  name
       9   127     523968 md127
     259     0     131072 md127p1
     259     1     262144 md127p2
    
    Part of Bug #678379 - Could not stat device /dev/md/0 - No such file
                          or directory

2012-11-14  Curtis Gedak <gedakc@gmail.com>

    Tighten up regexp for HP Smart Array Devices
    
    HP Smart Array Devices are listed in /proc/partitions as follows:
    
    major minor  #blocks  name
     104     0  143338560 cciss/c0d0
     104     1     104391 cciss/c0d0p1
     104     2      24097 cciss/c0d0p2
     104     3  143203410 cciss/c0d0p3
    
    The previous regular expression was too broad, and would match many
    other forms, including Linux software RAID devices such as md127.
    
    Linux software RAID devices are listed in /proc/partitions as follows:
    
    major minor  #blocks  name
       9   127     523968 md127
     259     0     131072 md127p1
     259     1     262144 md127p2
    
    This problem with the regexp was discovered while investigating a
    problem with Linux software RAID device detection.
    
    The regular expression has been tightened up to match the following
    hardware RAID controllers:
    
      Compaq/HP Smartarray RAID controller
        E.g., device = /dev/cciss/c0d0, partition = /dev/cciss/c0d0p1
        (linux-x.y.z/Documentation/blockdev/cciss.txt)
    
      Compaq SMART2 Intelligent Disk Array controller
        E.g., device = /dev/ida/c0d0, partition = /dev/ida/c0d0p1
        (linux-x.y.z/Documentation/blockdev/cpqarray.txt)
    
      Mylex DAC960/AcceleRAID/eXtremeRAID PCI RAID Controllers
        E.g., device = /dev/rd/c0d0,  partition = /dev/rd/c0d0p1
        (linux-x.y.z/Documentation/blockdev/README.DAC960)
    
    Related to Bug #678379 - Could not stat device /dev/md/0 - No such
                             file or directory

2012-11-25  Curtis Gedak <gedakc@gmail.com>

    Fix logical partition grow overlaps extended partition end (#686668)
    
    In certain situations with a mixture of partition alignments, the MiB
    alignment option would try to set the end of a logical partition
    beyond the end of the extended partition.  This, of course, is an
    invalid partition geometry and the libparted library correctly reports
    failure when this is attempted.
    
    This enhancement to MiB alignment adds a check to see if the end of
    the logical partition would be beyond the extended partition, and
    adjusts the end of the logical partition if required.
    
    Closes Bug #686668 - Growing logical partition overlaps end of
                         extended partition

2012-11-25  Curtis Gedak <gedakc@gmail.com>

    Prevent file system grow when partition grow fails (#686668)
    
    Prior to this enhancement, GParted ignored the status of the partition
    grow operation, and attempted to grow the file system.
    
    Now we check the status of the partition grow operation prior to
    growing the file system.
    
    Part of Bug #686668 - Growing logical partition overlaps end of
                          extended partition

2012-11-30  Curtis Gedak <gedakc@gmail.com>

    Provide credit in About dialog for contributions
    
    Recognize contributions by Matthias Gehre.

2012-11-30  Curtis Gedak <gedakc@gmail.com>

    Update AUTHORS
    
    Provide credit for patches by Matthias Gehre to clean up GParted Core
    global variables.

2012-11-30  Curtis Gedak <gedakc@gmail.com>

    Add *.mo to .gitignore file

2012-11-20  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Treat reiser4 label "<none>" as meaning blank (#688760)
    
    A reiser4 file system with a blank label is displayed as "<none>" by
    debugfs.reiser4 and therefore GParted too.
    
        # mkfs.reiser4 -y -L "" -f /dev/sda14
        # debugfs.reiser4 /dev/sda14 2> /dev/null | grep label:
        label:		<none>
    
    Additionally when displaying the Partition Information the following
    warning is written to the terminal:
    
        (gpartedbin:19609): Gtk-WARNING **: Failed to set text from markup
        due to error parsing markup: Error on line 1 char 23: Element
        'markup' was closed, but the currently open element is 'none'
    
    Fix by just assuming "<none>" always means blank.  If someone really
    does set the label to "<none>" it won't be displayed.  This is equlivant
    to how btrfs and nilfs2 are already handled.
    
    Closes bug 688760 - GParted displays blank resier4 label as <none>

2012-11-15  Dimitris Spingos <dmtrs32@gmail.com>

    Updated Greek translation

2012-11-06  Curtis Gedak <gedakc@gmail.com>

    Use gksudo, if available, in gparted.desktop
    
    If gksu was installed on a KDE system (tested with kubuntu 12.04 LTS),
    then gksu would prompt for the password three times and always fail to
    load gparted.  In a prior version of kubuntu 8.04 LTS, gksu would
    properly invoke gparted from the "K --> System --> GParted" menu
    entry.
    
    Since gksudo also works on KDE (and kubuntu 12.04 LTS), add gksudo to
    the root privilege invocation search list ahead of gksu.
    
    Note that gksu has been kept for backwards compatibility with systems
    that provide only gksu and not gksudo.
    
    Related to Bug #687813 - Use kdesudo on KDE, as gksu is not
                             installed by default

2012-11-06  Curtis Gedak <gedakc@gmail.com>

    Use kdesudo in gparted.desktop when gksu is not installed (#687813)
    
    Normally gksu is not installed by default on KDE systems.  When
    compiling and installing gparted on a KDE system without gksu, the
    desktop menu entry would try to run gparted as the user, and not with
    root privileges.
    
    To fix this, add kdesudo to the search list of root privilege
    invocation programs.
    
    Closes Bug #687813 - Use kdesudo on KDE, as gksu is not installed by
                         default

2012-10-30  Matthias Gehre <M.Gehre@gmx.de>

    Remove GParted_Core::p_filesystem (#683149)
    
    Bug #683149 - Cleanup(?): Remove lp_device and lp_disk from GParted_Core

2012-09-01  Matthias Gehre <M.Gehre@gmx.de>

    Remove GParted_Core::fs (#683149)
    
    Bug #683149 - Cleanup(?): Remove lp_device and lp_disk from GParted_Core

2012-09-01  Matthias Gehre <M.Gehre@gmx.de>

    Remove GParted_Core::partition_temp (#683149)
    
    Bug #683149 - Cleanup(?): Remove lp_device and lp_disk from GParted_Core

2012-09-01  Matthias Gehre <M.Gehre@gmx.de>

    Remove GParted_Core::temp (#683149)
    
    Bug #683149 - Cleanup(?): Remove lp_device and lp_disk from GParted_Core

2012-10-30  Matthias Gehre <M.Gehre@gmx.de>

    Remove lp_partition from GParted_Core (#683149)
    
    Bug #683149 - Cleanup(?): Remove lp_device and lp_disk from GParted_Core

2012-10-30  Matthias Gehre <M.Gehre@gmx.de>

    Remove unnecessary close_device_and_disk()
    
    1) lp_disk is not used and assigned NULL so doesn't need closing.
    2) lp_device is already ped_device_open()ed and ped_device_close()d
    within the above while loop.  lp_device will be set to NULL when the
    while loop ends so this doesn't need closing either.  Hence
    close_device_and_disk() is always passed with two NULL pointers and is a
    no operation so can be removed.

2012-10-30  Matthias Gehre <M.Gehre@gmx.de>

    Remove lp_device and lp_disk from GParted_Core (#683149)
    
    They were used like global variables.  Now they are moved to the
    functions that actually use them to make clearer how the data flow is.
    
    Bug #683149 - Cleanup(?): Remove lp_device and lp_disk from GParted_Core

2012-10-11  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Recognise when Linux swap label is changed to blank (#685656)
    
    Use swaplabel to read the Linux swap label so that 1) a blank label can
    be read, and 2) to replace deprecated and removed vol_id.
    
    Vol_id was deprecated in May 2009, superseded by blkid and soon
    thereafter removed.  Swaplabel is available in util-linux 2.18 from Jun
    2010.
    
    If the swaplabel command is not available GParted falls back on reading
    the label through the FS_Info cache which uses the blkid command.  If
    the blkid command is also not available FS_Info cache will *NOT* return
    any label and GParted will display blank.
    
    Bug 685656 - GParted doesn't notice when file system label is changed to
                 blank

2012-10-08  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Make GParted recognise reading blank file system labels (#685656)
    
    GParted doesn't notice when a file system label is changed to blank.
    GParted first calls the file system specific read_label() method.  When
    the label is blank read_label() correctly sets partition.label to the
    zero length string.  Second GParted_Core::set_device_partitions() treats
    the zero length string to mean that the label is unset and calls
    FS_Info::get_label() to retrieve it from the cache of blkid output.
    Blkid also doesn't notice when the file system label has been changed to
    blank so reports the previous label.  Hence GParted displays the
    previous file system label.
    
    Fix by making label a private member variable of the class Partition and
    providing access methods set_label(), get_label() and label_known()
    which track whether the label has been set or not.  This only fixes the
    fault for file systems which use file system specific commands to read
    the label and when these tools are installed.  Otherwise GParted uses,
    or has to fall back on using, the buggy blkid command to read the file
    system label.
    
    NOTE:
    Many of the file system specific read_label() methods use a tool which
    outputs more than just the label and use Utils::regexp_label() to match
    leading text and the label itself.  If the surrounding text changes or
    disappears altogether to indicated a blank label, regexp_label() doesn't
    match anything and returns the zero length string.  This  is exactly
    what is required and is passed to set_label() to set the label to blank.
    
    Bug 685656 - GParted doesn't notice when file system label is changed to
                 blank

2012-10-30  Christian Kirbach <Christian.Kirbach@googlemail.com>

    Updated German translation

2012-10-16  Yngve Spjeld Landro <l10n@landro.net>

    Updated Norwegian Nynorsk translation

2012-10-14  Rūdolfs Mazurs <rudolfsm@src.gnome.org>

    Updated Latvian translation

2012-10-11  Chao-Hsiung Liao <j_h_liau@yahoo.com.tw>

    Updated Traditional Chinese translation(Hong Kong and Taiwan)

2012-10-10  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2012-10-10  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.14.0   ==========

2012-10-08  Gabor Kelemen <kelemeng@gnome.hu>

    Updated Hungarian translation

2012-10-04  Daniel Korostil <ted.korostiled@gmail.com>

    Uploaded Ukranian

2012-10-04  Claude Paroz <claude@2xlibre.net>

    Updated French translation

2012-10-04  Milo Casagrande <milo@ubuntu.com>

    [l10n] Updated Italian translation.

2012-10-03  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2012-09-14  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove old FIXME comment from reiserfs::read_label()
    
    Traced debugreiserfs on a 10GiB reiserfs file system which was 100% full
    full with nearly 900,000 files.  It read exactly three 4KiB blocks from
    different offsets and the program never took more than 0.1 seconds.

2012-09-14  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove old #include <cerrno> from jfs and xfs modules
    
    Use of errno disappeared from jfs and xfs when they switched to using
    helper functions for file system resizing.

2012-09-12  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Read file system size for mounted ext2/3/4 from superblock (#683255)
    
    A user had a 190 MiB partition containing an old ext2 file system.  When
    unmounted it was reported as filling the partition, but when mounted it
    was reported as having 6% unallocated space.  The file system's inode
    tables were approximately twice the size of those created by default
    with the current mkfs.ext2 defaults.
    
    To create an equivalent file system in a 190 MiB partition:
        mkfs.ext2 -N 97344 /dev/sda15
    
    It turns out that for ext2, ext3 and ext4 file systems what was
    described as intrinsic unallocated space during the development of
    Bug #499202 is actually file system overhead.  When mounted the ext2/3/4
    kernel code reports the size of the file system after subtracting the
    overhead.  Overhead is made up of superblock backups, group descriptors,
    allocation bitmaps and largest of all inode tables.  E2fsprogs tools
    don't subtract this overhead when reporting the file system size.
    
    References:
    
     *  The Second Extended File System, Internal Layout, by Dave Poirier
        http://www.nongnu.org/ext2-doc/ext2.html
    
     *  Linux ext2_statfs() function
        http://lxr.linux.no/#linux+v3.5.3/fs/ext2/super.c#L1311
    
    Call the file system specific method for reading the usage of ext2, ext3
    and ext4 file systems while mounted.  Make it read the file system size
    from the on disk superblock to avoid subtraction of overhead and use the
    statvfs() system call to return an up to date free space figure.
    
    Bug #683255 - ext2: statvfs differs from dumpe2fs (x MB unallocated
                  space within the partition)

2012-09-10  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Make mounted partition usage method selectable per file system (#683255)
    
    Each file system class can now choose how the size and free space of the
    file system is determined when it is mounted.
    
        .fs.online_read = FS::NONE  (default)
            Do nothing.  Don't get the file system size and free space.
    
        .fs.online_read = FS::GPARTED
            Use internal GParted method which calls statvfs() system call on
            the mounted file system.
    
        .fs.online_read = FS::EXTERNAL
            Call the file system's member function set_used_sectors().  This
            is the same function as called when the file system is not
            mounted.   It can determine if the file system is mounted or not
            by testing partition.busy and acting accordingly.
    
    This means that determining the size and free space of active LVM2
    Physical Volumes is no longer a special case.  Instead the lvm2_pv class
    just elects to have its set_used_sectors() method called for both the
    active and deactive cases.
    
    Bug #683255 - ext2: statvfs differs from dumpe2fs (x MB unallocated
                  space within the partition)

2012-10-02  Akom Chotiphantawanon <knight2000@gmail.com>

    Updated Thai translation

2012-09-23  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Switch to using debugfs.reiser4 to read the label
    
    Vol_id command was deprecated in May 2009 and superseded by the blkid
    command.  Replace the generic vol_id command with the file system
    specific debugfs.reiser4 command to read the file system label.
    Debugfs.reiser4 will exist as it's already required to read the file
    system usage and UUID.

2012-09-23  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Update file system specific validation of RFC 4122 UUIDs
    
    Use the new RFC 4122 none Nil UUID regular expression to validate the
    UUID read in all the Linux native file system specific read_uuid()
    methods.  No longer need to explicitly exclude "<none>" or all zeros Nil
    UUID as the regular expression does this.

2012-09-23  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Switch to using jfs_tune to read the UUID
    
    Not necessary but use the simpler file system tune command rather than
    the file system debug command where possible.  Also saves creating an
    echo process.

2012-09-15  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Switch to using debugreiserfs to read the UUID (#684115)
    
    For a mounted reiserfs file system with a Nil UUID (all zeros) GParted
    will display a partition specific warning.  This comes from the reiserfs
    specific read_uuid() method.  Error demonstration:
    
        # blkid /dev/sda15
        /dev/sda15: LABEL="test-reiserfs-2" TYPE="reiserfs"
        # mount | grep sda15
        /dev/sda15 on /mnt/2 type reiserfs (rw,relatime)
        # reiserfstune /dev/sda15
        reiserfstune: Reiserfstune is not allowed to be run on mounted filesystem.
    
    Switch to using debugreiserfs to read the UUID as it can be used on a
    mounted file system.
    
        # debugreiserfs /dev/sda15 2> /dev/null | grep UUI
        UUID: 00000000-0000-0000-0000-000000000000
    
    Bug #684115 - Reiserfs UUID reading issues on Fedora and CentOS

2012-09-15  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Ignore invalid reiserfs UUIDs (#684115)
    
    On Fedora up to and including Fedora 16 and Red Hat and CentOS up to the
    current 6.3 release the UUID of an unmounted reiserfs file system is
    displayed as "<no" and a GTK markup warning is written to the terminal.
    
    This was because the reiserfs-utils package isn't linked with libuuid
    support so reiserfs file systems were created with a Nil UUID (all
    zeros).  To read the UUID GParted first tries to retrieve the UUID from
    the blkid command output via the FS_Info cache.  Secondly it tries the
    reiserfs file system specific read_uuid() method which uses the first
    space separated word following the text "UUID:", hence it gets "<no".
    
        # debugreiserfs /dev/sda15 2> /dev/null | grep UUID
        UUID: <no libuuid installed>
    
    In September 2012 Red Hat bug 660285 "reiserfstune compiled without UUID
    support" was fixed for Fedora 16 and later releases.  On Fedora with
    this fix applied GParted will display the Nil UUID (all zeros) for a
    previously created reiserfs file system rather than suppressing it.
    
    Only accept valid, none Nil UUIDs in the reiserfs file system specific
    read_uuid() method.
    
    Bug #684115 - Reiserfs UUID reading issues on Fedora and CentOS

2012-09-16  Ani Peter <apeter@redhat.com>

    Updated Malayalam file

2012-09-15  Aurimas Černius <aurisc4@gmail.com>

    Updated Lithuanian translation

2012-09-12  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2012-09-12  Djavan Fagundes <djavanf@gnome.org>

    Updated Brazilian Portuguese translation by Fábio Nogueira <deb-user-ba@ubuntu.com> and myself

2012-09-09  Andika Triwidada <andika@gmail.com>

    Updated Indonesian translation

2012-09-09  Seong-ho Cho <darkcircle.0426@gmail.com>

    Updated Korean translation

2012-09-08  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Updated Serbian translation

2012-09-04  Fran Diéguez <fran.dieguez@mabishu.com>

    Updated Galician translations

2012-09-04  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2012-09-03  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2012-09-02  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2012-09-01  Fran Diéguez <fran.dieguez@mabishu.com>

    Updated Galician translations

2012-09-01  Curtis Gedak <gedakc@gmail.com>

    Update AUTHORS
    
    Provide credit for patches by Mike Fleetwood to add LVM PV read-write
    support, and to prevent an ESC key crash in number entry dialogs.

2012-08-26  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Recognise lvm command immediately when rescanning for supported actions
    
    Rescanning for supported actions in the File System Support dialog was
    not detecting the removal and restoration of the lvm command.  GParted
    was only updating supported actions after refreshing all devices.
    
    Checking for the lvm command was tied to the refresh of the LVM2_PV_Info
    cache, hence the behaviour.  Fix by always checking for the lvm command
    when requested.
    
    Also remove extra new line from end of an error message in
    load_lvm2_pv_info_cache().

2012-08-25  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add a partition warning for LVM2 PVs which can't be resized (#670171)
    
    As LVM2 Physical Volumes can't be resized when they are members of
    exported Volume Groups add a warning message to explain this fact.
    Display the message as a partition specific warning and as additional
    text when growing the file system to fill the partition is skipped for
    the check operation and when pasting into an existing larger partition.
    
    Bug #670171 - Add LVM PV read-write support

2012-08-25  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Disallow resizing of LVM2 PVs which are members of exported VGs (#670171)
    
    When an inactive LVM2 Volume Group is exported it makes it unknown to
    the local system, ready for moving the member Physical Volumes to
    another system, where the VG can be imported and used.  In this state a
    PV can't be resized.
    
        # lvm pvresize /dev/sda10
          Volume group Test-VG1 is exported
          Unable to read volume group "Test-VG1".
          0 physical volume(s) resized / 1 physical volume(s) not resized
        # echo $?
        5
    
    Fix this by preventing resizing of such a PV.  This has been coded in a
    generic way using new function filesystem_resize_disallowed() to
    determine whether a file system is allowed to be resized or not.  For
    a file system which can be resized, but is currently not allowed to be
    resized, the behaviour is as follows:
    
    1)  Pasting into unallocated space is limited to creating a new
        partition which is the same size as the copied partition.
    
    2)  Resizing the partition is disallowed, only moving the partition is
        allowed.
    
    3)  Pasting into an existing partition will only copy the file system.
        If the destination partition is larger a warning will report that
        growing the file system is not currently allowed.
    
    4)  Checking a partition will also report a warning that growing the
        file system is not currently allowed.
    
    This is exactly the same behaviour as for a file system which does not
    implement resizing, except for a different warning message.
    
    Bug #670171 - Add LVM PV read-write support

2012-08-18  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Implement common LVM2_PV_Info cache search and index functions
    
    Create common cache search and index functions get_attr_by_name() and
    get_attr_by_row() as the existing ones, get_pv_attr_by_*() and
    get_vg_attr_by_*(), only differ from each other by the string vector
    they use.

2012-08-18  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Correctly show multiple "unknown device" LVM2 VG members (#670171)
    
    If an LVM2 Volume Group has two or more missing Physical Volumes, the VG
    is displayed as only having one "unknown device" because
    get_vg_members() only adds unique names to the list of members.
    
        # lvm pvcreate /dev/sda11 /dev/sda12 /dev/sda13
        # lvm vgcreate Test-VG1 /dev/sda11 /dev/sda12 /dev/sda13
        # wipefs -a /dev/sda12
        # wipefs -a /dev/sda13
        View partition information in GParted
    
    The simplest fix would be to include the PV's UUID in the cache of LVM2
    information and add PV names based on unique UUIDs being a member of the
    relevant VG.  Unfortunately "lvm pvs" seems to have a bug when
    displaying Logical Volume attributes, and there are two or more missing
    PVs, which causes one of the PVs to be displayed multiple times, rather
    than displaying each PV once.
    
    Without LV attributes, every PV is listed:
    
        # lvm pvs --nosuffix --separator , --units b -o pv_name,pv_uuid,vg_name,vg_attr 2> /dev/null
          PV,PV UUID,VG,Attr
          /dev/sda11,pJ3R51-AOPP-rKlr-CKCT-nfPS-G5FP-B5Vyjm,Test-VG1,wz-pn-
          unknown device,Y72oSm-uBcE-ktZL-OIFA-Q129-Uv1B-x5IsrA,Test-VG1,wz-pn-
          unknown device,1ESORF-7wlR-0tnO-fy2z-nOL1-MrnJ-2O5yjK,Test-VG1,wz-pn-
    
    With LV attributes, one missing PV is repeated:
    
        # lvm pvs --nosuffix --separator , --units b -o pv_name,pv_uuid,vg_name,vg_attr,lv_name,lv_attr 2> /dev/null
          PV,PV UUID,VG,Attr,LV,Attr
          /dev/sda11,pJ3R51-AOPP-rKlr-CKCT-nfPS-G5FP-B5Vyjm,Test-VG1,wz-pn-,,
          unknown device,Y72oSm-uBcE-ktZL-OIFA-Q129-Uv1B-x5IsrA,Test-VG1,wz-pn-,,
          unknown device,Y72oSm-uBcE-ktZL-OIFA-Q129-Uv1B-x5IsrA,Test-VG1,wz-pn-,,
    
    Also "lvm vgs" and "lvm lvs" don't display anything when including both
    VG and LV attributes.
    
    Instead query the LVM2 information in two separate commands, one
    querying PV attributes and one querying VG and LV attributes, saving the
    results in lvm_pv_cache and lvm_vg_cache respectively.
    
    Bug #670171 - Add LVM PV read-write support

2012-07-27  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove full stops from the end of primary text in dialogs
    
    The GNOME HIG, 3.4.1 "Alert Text" states:
    
        ...  The primary text is punctuated in 'newspaper headline' style,
        that is, it has no terminating period, but it may have a terminating
        question mark.
    
    http://developer.gnome.org/hig-book/3.0/windows-alert.html.en#alert-text

2012-07-07  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove outdated FIXME comment from active_partitions_on_device_count()
    
    Active LVM2 PVs have the partition class busy member set in
    GParted_Core::set_device_partitions() just as mounted file systems do.
    This is a basic requirement for GParted so that it only manipulates
    partitions and contained file systems when they are not in use.

2012-07-09  Mike Fleetwood <mike.fleetwood@googlemail.com>

    New LVM2_PV_Info::bit_set() testing VG and LV attribs "bits"
    
    Abstract repeated code used to test the setting of individual LVM Volume
    Group and Logical Volume "bits" attributes into bit_set() function.

2012-07-07  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Update declarations of some LVM2_PV_Info member functions
    
    Add const qualifier to get_pv_attr_by_path() and get_pv_attr_by_row() as
    they only access member variables read-only.
    
    Make lvm2_pv_attr_to_num() a static member function as it doesn't access
    any member variables.

2012-07-07  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove redundant lines from LVM2_PV_Info functions
    
    Splitting of each cache string on comma "," is performed in
    get_pv_attr_by_row() and not needed in the caller functions.

2012-07-07  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Only lookup LVM2 VG name once in Display_Info()
    
    For LVM2 Physical Volumes the Volume Group name was looked up multiple
    times, sometimes from the secondary location of the mount point and at
    other times from the primary location in the LVM2_PV_Info class.  Just
    lookup the VG name once from the primary location.

2012-06-17  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Rename *toggle_swap_mount* -> *toggle_busy*
    
    Rename functions and a variable to use a generic term for the menu item
    which changes the busy state of partitions now that it also activates
    and deactivates LVM2 Physical Volumes as well as mounting and unmounting
    file systems and enables and disables swap partitions.

2012-07-24  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add fallback implementation to new delete LVM2 PV warning dialog (#670171)
    
    The new delete non-empty LVM2 Physical Volume warning dialog uses
    Gtk::MessageDialog::get_message_area() in the display of Volume Group
    members.  This function was new in gtkmm 2.22, released September 2010,
    which is not available in a number of current distributions including:
    Unbuntu 10.04 LTS, RHEL 6.3, SLES 11-SP2, Debian 6.0.
    
    Implement fallback method to display the VG name and member PVs in the
    warning dialog for when get_message_area() is not available.
    
    Bug #670171 - Add LVM PV read-write support

2012-07-05  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add warning dialog when deleting non-empty LVM2 PVs (#670171)
    
    When attempting to delete a non-empty LVM2 Physical Volume (one which is
    still a member of a Volume Group) display a warning dialog which
    includes the VG name and a list of the PV members to allow the user to
    make an informed choice whether to go ahead and perform the deletion or
    cancel to the operation.  This dialog is displayed when a partition
    containing a PV is being deleted or being overwritten by being
    reformatted or pasted into.
    
    Bug #670171 - Add LVM PV read-write support

2012-07-01  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add LVM2 VG member details to the Information dialog (#670171)
    
    For LVM2 Physical Volumes display the Volume Group name and all the
    members in the Information dialog.
    
    Bug #670171 - Add LVM PV read-write support

2012-07-25  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Implement LVM2 PV remove() method (#670171)
    
    Implement remove() method so that the LVM2 metadata is updated to
    reflect the removal of the LVM2 Physical Volume as well as removing the
    signature from the PV before the partition is deleted or overwritten.
        lvm pvremove /dev/DEVICE
    
    Also specifically force the removal of the PV when it is a member of a
    Volume Group so that it will succeed.
    
    RATIONAL:
    
    If the PV was not removed before the partition was deleted or
    overwritten, LVM2 would be left in a broken state with metadata
    describing missing PVs for any partially deleted VGs.  This leaves the
    user needing to perform recovery of a lost PV, which required in depth
    understanding of LVM2 and is beyond the scope of what GParted can
    currently provide.
    
    The alternative is to use the pvremove command to instruct LVM2 to
    remove the PV and update LVM2 metadata to reflect the removal of the PV.
    For PVs which are a member of a VG this includes forcing the removal.
    This has the impact of making recovery from accidental deletion of a
    partition containing a PV irrecoverable.  GParted is not able to recover
    this situation anyway because Device -> Attempt Data Rescue, using the
    gpart command, is not able to detect the signature of an LVM2 PV.
    
    Choose to remove the PV, forcibly if required, rather than potentially
    leave LVM2 with missing PVs.
    
    Bug #670171 - Add LVM PV read-write support

2012-07-25  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add file system specific remove() methods (#670171)
    
    This commit only adds a remove() method to every file system and an
    optional call to it in the relevant operations.  All remove() methods
    are no operations and not enabled.
    
    The remove() method provides explicit controlled removal of a file
    system before the partition is deleted or overwritten by being formatted
    or pasted into.  When implemented, it appears as an extra step in the
    relevant operation.  The file system specific remove() method is
    explicitly allowed to fail and stop the operations currently being
    applied.
    
    This is different to the existing erase_filesystem_signatures() which
    wipes any previous file system signatures immediately before a new file
    system is written to ensure there is no possibility of the partition
    containing two or more different file system signatures.  It never fails
    or reports anything to the user.
    
    NOTE:
    Most file systems should NOT implement a remove() method as it will
    prevent recovery from accidental partition deletion.
    
    Bug #670171 - Add LVM PV read-write support

2012-01-15  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add LVM2 PV resize, check and move operations (#670171)
    
    Copy operation for LVM2 Physical Volumes is deliberately not implemented
    because it doesn't fit with how LVM2 works and is not safe in the
    general case without an understanding of its internals.  See comment in
    lvm2_pv::copy() for more details.
    
    Bug #670171 - Add LVM PV read-write support

2012-02-13  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Enable LVM2 VG activation / deactivation (#670171)
    
    In the Partition menu enable activation / deactivation of the LVM2
    Volume Group of which the Physical Volume is a member.
    
    Bug #670171 - Add LVM PV read-write support

2012-01-12  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add creation of LVM2 PVs (#670171)
    
    Add creation of Physical Volumes specifying LVM2 metatdata format:
        lvm pvcreate -M 2 /dev/DEVICE
    
    Also set the partition type to identify its contents as LVM.  Note that
    libparted treats every partition type as a file system except LVM which
    it treats as a flag, hence GParted displaying "lvm" in the Manage Flags
    dialog.  Never the less libparted set the partition types correctly.
    For MBR partitioning the type is 8e "Linux LVM" and for GPT partitioning
    the type is E6D6D379-F507-44C2-A23C-238F2A3DF928.  Setting the partition
    type as LVM is not strictly required as LVM2 scans the contents of all
    partitions looking for PVs, but it is best practice.
    
    Bug #670171 - Add LVM PV read-write support

2012-08-29  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Prevent crash from pressing Esc in dialogs with number entry (#682658)
    
    Steps to reproduce:
    1) Open any of these dialogs: Create New Partition, Resize/Move or
       Paste;
    2) Update any of the following numeric entry fields to a different value
       using the keyboard: Free space preceding, New size or Free space
       following;
    3) Press [Esc] key;
    Gparted crashes.
    
    What is happening is that the [Esc] key is leading to the dialog being
    closed and calling the ~Dialog_Base_Partition() destructor.  However
    after this the GTK widget is calling the on_spinbutton_value_change()
    registered callbacks for the change to the other two values, on the now
    just deleted object.
    
    Fix by disconnecting the change notification callbacks in the
    destructor.
    
    Closes bug #682658 - GParted crash by pressing Esc in dialogs with
                         number entry

2012-08-30  Fran Diéguez <fran.dieguez@mabishu.com>

    Updated Galician translations

2012-08-11  Chao-Hsiung Liao <j_h_liau@yahoo.com.tw>

    Updated Traditional Chinese translation(Hong Kong and Taiwan)

2012-08-08  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2012-08-08  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.13.1   ==========

2012-08-07  Tom Tryfonidis <tomtryf@gmail.com>

    Updated Greek translation

2012-08-07  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Updated Serbian translation

2012-08-05  Aurimas Černius <aurisc4@gmail.com>

    Updated Lithuanian translation

2012-08-05  Yngve Spjeld Landro <l10n@landro.net>

    Added Norwegian Nynorsk translation

2012-07-29  Joan Lledó <joanlluislledo@gmail.com>

    Fix failure creating read-only view of rescued file systems (#680740)
    
    The mount of lost file systems that were larger than a 32 bit integer
    could hold (~2 GiB), or started after the first ~2 GiB of disk, would
    fail.
    
    Closes Bug #680740 - Gparted fails when mounting the read-only view of
                         lost filesystems

2012-07-26  Baurzhan Muftakhidinov <baurthefirst@gmail.com>

    Updated Kazakh translation

2012-07-17  Wylmer Wang <wylmerwang@src.gnome.org>

    Update Chinese translation

2012-07-15  Christian Kirbach <Christian.Kirbach@googlemail.com>

    Updated German translation

2012-07-13  Enrico Nicoletto <liverig@gmail.com>

    Updated Brazilian Portuguese translation

2012-07-13  Curtis Gedak <gedakc@gmail.com>

    Minor spelling and word changes to NEWS for last release

2012-07-13  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2012-07-13  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.13.0   ==========

2012-07-12  Curtis Gedak <gedakc@gmail.com>

    Add more contributors to AUTHORS
    
    Scanned ChangeLog and added some GParted code contributors that had
    been accidentally missed from being included in the AUTHORS file.

2012-07-11  Aleksej Kabanov <ak099@mail.ru>

    Updated Russian translation

2012-07-11  Aleksej Kabanov <ak099@mail.ru>

    Updated Russian translation

2012-07-10  Alexander Shopov <ash@kambanaria.org>

    Updated Bulgarian translation

2012-07-10  Alexander Shopov <ash@kambanaria.org>

    Updated Bulgarian translation

2012-07-07  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Make btrfs_size_*() static member functions
    
    The member functions btrfs_size_to_num(), btrfs_size_max_delta() and
    btrfs_size_to_gdouble() don't access any member variables.  Therefore
    they don't need the const qualifier allowing them to be called when the
    btrfs object is const for read-only access to member variables, but
    instead need to be static member functions with no access to member
    variables.

2012-07-05  Milo Casagrande <milo@ubuntu.com>

    [l10n] Updated Italian translation.

2012-07-05  Andika Triwidada <andika@gmail.com>

    Updated Indonesian translation

2012-07-05  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2012-06-30  Curtis Gedak <gedakc@gmail.com>

    Provide credit in About dialog for significant contributions (#678486)
    
    Closes Bug #678486 - Provide Credit in About Dialog for Significant
                         Contributions

2012-06-30  Curtis Gedak <gedakc@gmail.com>

    Reorder names and add significant contribution reminder to AUTHORS

2012-06-30  Curtis Gedak <gedakc@gmail.com>

    Update AUTHORS
    
    Update email address for Seth Heeren

2012-06-30  Curtis Gedak <gedakc@gmail.com>

    Avoid end partition overlap when resizing extended partition (#678831)
    
    When resizing an extended partition, a problem can occur with MiB
    alignment wherein the requested end sector could be less than the end
    sector of the last logical partition.  This would be an invalid
    geometry because all the logical partitions must be wholly contained
    within the extended partition.
    
    Check for this situation and if found then set requested end for
    the extended partition to the end of the last logical partition.
    
    Closes Bug #678831 - Partition End Overlap when Resizing Extended
                         Partition

2012-06-30  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Restore original logic regarding negative values in get_usage_triple()
    
    Restore intended logic accidentally changed by my recent commit:
    
        Simplify calc_usage_triple() interface and rename
        6c96ab34b39eb23a906d6161a3d3b873025f4ec3
    
    Set each display integer to zero if the associated usage value is
    negative, rather than setting 100% unused for unknown usage.  Graphical
    display of partition usage for unknown and unsupported file system types
    is not affected and continues to be all white because of the logic in
    the callers.

2012-06-25  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Remove and rename local variables in Display_Info()
    
    Local variables used, unused and unallocated were hiding class member
    variables of the same name.  Remove first two local variables as they
    were only accessed once and rename third.

2012-06-21  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Simplify calc_usage_triple() interface and rename
    
    Now that every call to calc_usage_triple() just passes usage figures
    returned by get_sectors_*(), remove those parameters, call
    get_sectors_*() internally and rename to get_usage_triple().

2012-06-21  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Simplify main window partition usage graphic code
    
    Stop using fraction_unallocated and fraction_used member variables of
    the DrawingAreaVisualDisk class as intermediate storage of partition
    usage fractions.  Instead get the figures straight from the partition
    class and use the new calc_usage_triple() to directly set pixels widths
    for the partition usage graphic.

2012-06-20  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fix minor unallocated space display issue in the Info dialog (#499202)
    
    For specific partition usage values the right hand border of the
    partition graphic in the Information dialog would be displayed as grey
    rather than the color assigned to the partition.
    
    Steps to reproduce fault:
        Create 1024 MiB partition
        # lvm pvcreate /dev/sda12
        # lvm vgcreate GParted-VG1 /dev/sda12
        View partition information
    
    Fragment from Dialog_Partition_Info::init_drawingarea():
        139  else if ( partition .sector_usage_known() )
        140  {
        141          used        = Utils::round( ( 400 - BORDER *2 ) / ( dlength / partition .get_sectors_used()   ) ) ;
        142          unused      = Utils::round( ( 400 - BORDER *2 ) / ( dlength / partition .get_sectors_unused() ) ) ;
        143          unallocated = 400 - BORDER *2 - used - unused ;
        144  }
    
    For this issue the above values are both exactly x.5 and both round
    upwards, resulting in unallocated being -1.
        used        = round((400 - 8*2)/(2097152.0/8192))    = round(1.5)
        unused      = round((400 - 8*2)/(2097152.0/2088960)) = round(382.5)
        unallocated = 400 - 8*2 - 2 - 383 = -1
    
    The simple fix would be to use floor() instead of round() in the
    calculation of either used or unused.  The same fix would also need to
    be applied in Display_Info() for the calculation of the percentage
    figures.  Unfortunately this simple fix can lead to odd figures when the
    used or unused is close to zero and floor() or ceil() is effectively
    applied rather than round().  For example:
        Size:           227.23 GiB
        Used:           28.00 KiB   ( 1% )
        Unused:         180.00 GiB  ( 79% )
        Unallocated:    47.23 GiB   ( 20% )
    Used figure of 28 KiB in 227 GiB partition should be rounded to 0% but
    wasn't.
    
    Write Partition::calc_usage_triple() which calculates the "best" figures
    by rounding the smaller two figures and subtracts them from the desired
    total for the largest figure.  Apply to the calculation of the partition
    usage percentage figures in the Information dialog and the partition
    usage graphic in the same dialog and the main window.
    
    Bug #499202 - gparted does not see the difference if partition size
                  differs from filesystem size

2012-06-24  Wylmer Wang <wantinghard@gmail.com>

    update Simplified Chinese (zh_CN) translation

2012-06-21  Curtis Gedak <gedakc@gmail.com>

    Update credits in about dialog for artwork
    
    Provide credit for the Tango themed icons designed by Sebastian Kraft.

2012-06-18  Curtis Gedak <gedakc@gmail.com>

    Fix one spelling mistake in en_CA translation
    
    "file sysem" --> "file system"

2012-06-20  Rūdolfs Mazurs <rudolfsm@src.gnome.org>

    Updated Latvian translation

2012-06-19  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2012-06-18  Rogier Goossens <goossens.rogier@gmail.com>

    Updated Dutch translation

2012-06-18  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2012-06-18  Curtis Gedak <gedakc@gmail.com>

    Update AUTHORS
    
    Provide credit for patch set by Mike Fleetwood to show when partition
    size differs from file system size.

2012-06-15  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Don't show intrinsic unallocated space (#499202)
    
    Most file systems report intrinsic unallocated space using the statvfs()
    system call when mounted, but not using their own tools.  They are:
    ext2/3/4, fat16/32, hfs, nilfs2, reiserfs and xfs.  Showing either a
    little or no unallocated space, depending on whether a file system is
    mounted or not, could be confusing to the user.
    
    When all file systems are created filling their partitions the unused
    figure reported by statvfs() and their own tools are the same or very
    close.  Also the used plus unallocated figure from statvfs() agrees with
    the used figure from their own tools.
    
    For all file systems don't display intrinsic unallocated space (that
    below the threshold of 2 to 5%), instead include it as used space.  As
    soon as the amount of unallocated space becomes significant display it
    everywhere and also trigger the warning.
    
    For display purposes always use the new Partition methods:
    get_sectors_used(), get_sectors_unused(), and get_sectors_unallocated().
    When calculating new usage figures during Paste and Resize/Move
    operations directly access sectors_used, sectors_unused and
    sectors_unallocated members.
    
    Bug #499202 - gparted does not see the difference if partition size
                  differs from filesystem size

2012-06-05  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Enhance calculation of significant unallocated space (#499202)
    
    Many file systems report differing percentages of unallocated space over
    a range of sizes, as well differing figures using their own specific
    tools or using statvfs() system call when mounted.
    
    File systems reporting intrinsic unallocated space using their specific
    tools are: jfs, lvm2 pv and ntfs.  LVM2 PV has the largest amount of
    unallocated space with its default Physical Extent size of 4 MiB.  For a
    100 MiB partition it has 4.0% unallocated space.
    
    File systems reporting intrinsic unallocated space using the statvfs()
    system call when mounted are: ext2/3/4, fat16/32, hfs, jfs, nilfs2,
    ntfs, reiserfs, and xfs.  Xfs has the worst identified unallocated space
    of ~4.7% in a 100 MiB partition.  Ext2/3 exhibit unusual behaviour by
    reporting unallocated space of ~4.6% in a 100 MiB partition falling to a
    constant percentage of ~1.8% for sizes of 1 GiB and above.
    
    Update the calculation for used to estimate the maximum size of
    intrinsic unallocated space.  Limit is now 5% for partitions smaller
    than 100 MiB, 2% for partitions larger than 1 GiB and linear scaling of
    the percentage between.  Will still get false unallocated space warnings
    for mounted xfs file systems and lvm2 pvs smaller than 100 MiB.
    
    Also add a short note and worked example calculation of unallocated
    space to the HACKING file.
    
    Bug #499202 - gparted does not see the difference if partition size
                  differs from filesystem size

2012-06-02  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Include intrinsic unallocated space for resizing purposes (#499202)
    
    A number of file systems report intrinsic unallocated space even when
    they are created filling the partition.  As reported using their own
    specific tools, they are: jfs, lvm2 pv and ntfs.  Therefore when
    resizing a partition estimate its minimum size to be used sectors plus
    any unallocated sectors up to the significant amount.
    
    Bug #499202 - gparted does not see the difference if partition size
                  differs from filesystem size

2012-05-30  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Handle btrfs tools rounding of figures (#499202)
    
    The btrfs programs only provide approximations of file system sizes
    because they display figures using binary prefix multipliers to two
    decimal places of precision.  E.g. 2.00GB.  For partition sizes where
    the contained file system size rounds upwards, GParted will fail to read
    the file system usage and report a warning because the file system will
    appear to be larger than the partition.
    
    For example, create a 2047 MiB partition containing a btrfs file system
    and display its size.
    
        # btrfs filesystem show
        Label: none  uuid: 92535375-5e76-4a70-896a-8d796a577993
                Total devices 1 FS bytes used 28.00KB
                devid    1 size 2.00GB used 240.62MB path /dev/sda12
    
    The file system size appears to be 2048 MiB, but that is larger than the
    partition, hence the issue GParted has.  (Actually uses the btrfs devid
    size which is the size of the btrfs file system within the partition in
    question).
    
    This issue is new with the fix for Bug #499202 because it queries the
    file system sizes for the first time.  The same issue could
    theoretically occur previously, but with the used figure (FS bytes
    used).  This would have been virtually impossible to trigger because
    btrfs file system would have to have been greater than 99% full, but
    btrfs has been notorious for early reporting of file system full.
    
    The fix is that if a btrfs file system size appears larger than the
    partition size, but the minimum possible size which could have been
    rounded to the reported figure is within the partition size use the
    smaller partition size instead.  Apply the method to the used figure
    too, in case the file system is 100% full.  Also if the btrfs file
    system size appears smaller than the partition size, but the maximum
    possible size which could have been rounded to the reported figure is
    within the partition size use the larger partition size instead to avoid
    reporting, presumably false, unallocated space.  Not applied to file
    system used figure.
    
    Bug 499202 - gparted does not see the difference if partition size
                 differs from filesystem size

2012-03-28  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Set unallocated space for paste or resize/move operations (#499202)
    
    When pasting a copied partition into free space or move/resizing a
    partition set its space utilisation so that any unallocated space within
    the partition is displayed correctly before the operation is applied.
    
    NOTE:
    If the file system does not support file system resizing the Paste and
    Move/Resize dialogs don't allow resizing the partition so the preview
    will always be correct, unlike the case in the previous patch:
        Set unallocated space when performing simple operations (#499202)
    
    Also remove the deprecated and no longer used Partition::Set_Unused()
    and Partition::set_used() methods.
    
    Bug #499202 - gparted does not see the difference if partition size
                  differs from filesystem size

2012-04-11  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Set unallocated space when performing simple operations (#499202)
    
    When pasting a copied partition into an existing partition set its space
    utilisation so that any unallocated space is displayed correctly before
    the operation is applied.  If the destination partition is larger the
    file system will be grown to fill the partition.
    
    NOTE:
    GParted will attempt to grow the the file system in this situation
    regardless of whether the file system supports it or not.  These file
    systems: exfat, hfs, hfs+, reiser4 and ufs can't be grown and will fail
    with "growing is not available for this file system".  The preview will
    also be wrong in this case for the same reason.  Everything will be
    depicted correctly after the refresh.
    
    When formatting an existing partition default its space utilisation to
    unknown for display before the operation is applied.
    
    Bug 499202 - gparted does not see the difference if partition size
                 differs from filesystem size

2012-01-21  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Display unallocated space in the main window (#499202)
    
    Display the unallocated space within a partition in the main window's
    graphical disk representation.
    
    Bug #499202 - gparted does not see the difference if partition size
                  differs from filesystem size

2012-01-23  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Query unallocated space via libparted (#499202)
    
    Update the implementation using libparted to set the file system size
    and free space, thus allowing the unallocated space in the partition to
    be calculated, for the following unmounted file systems:
        hfs, hfs+
    (Requires libparted <= 2.4 or libparted >= 3.1, as the needed
    functionality did not exist in libparted 3.0).
    
    Bug #499202 - gparted does not see the difference if partition size
                  differs from filesystem size

2012-03-08  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Query unallocated space for LVM2 PVs (#499202)
    
    Add reporting of the LVM2 Physical Volume size allowing the unallocated
    space in the partition to be calculated.
    
    Bug #499202 - gparted does not see the difference if partition size
                  differs from filesystem size

2012-01-10  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Query unallocated space for unmounted file systems (#499202)
    
    Update file system specific implementations to set the size and free
    space, thus allowing the unallocated space in the partition to be
    calculated, for the following unmounted file systems:
        btrfs, ext2, ext3, ext4, fat16, fat32, jfs, nilfs2, ntfs, reiserfs,
        reiser4, xfs
    
    Bug #499202 - gparted does not see the difference if partition size
                  differs from filesystem size

2012-01-10  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Display unallocated space in the information dialog (#499202)
    
    Display the unallocated space in the graphical partition representation
    and numeric figures in the Partition Information dialog.
    
    Bug #499202 - gparted does not see the difference if partition size
                  differs from filesystem size

2012-01-10  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Record unallocated space within a partition (#499202)
    
    Currently GParted assumes that a file system fills its containing
    partition.  This is not always true and can occur when resizing is
    performed outside of GParted or a resize operation fails.  GParted
    doesn't display any information about unallocated space to the user
    and in most cases it is simply included in used space.
    
    Add partition unallocated space accounting.  Make GParted record the
    unallocated space for mounted file system and display a warning in the
    Partition Information dialog when too much unallocated space is found.
    
    Partition::set_sector_usage( fs_size, fs_unused ), is the new preferred
    method of recording file system usage because it allows the unallocated
    space in a partition to be calculated.  Partition::Set_Unused() and
    Partition::set_used() are now deprecated.
    
    NOTES:
    
    1)  Set the minimum unallocated space to be 5% before considering it
        significant to avoid false reporting.  Worst case found was a
        mounted xfs file system in a 100MiB partition, which reports as
        ~4.7% unallocated according to file system size from statvfs().
        However, it reports as having no unallocated space using xfs
        specific tools.
    
    2)  Unallocated space is only a graphical representation for the user.
        GParted must still use relevant tools to resize file systems before
        shrinking the data and can't assume all unallocated space exists
        after the file system at the end of the partition.
    
    Bug #499202 - gparted does not see the difference if partition size
                  differs from filesystem size

2012-06-12  Curtis Gedak <gedakc@gmail.com>

    Fix more spelling mistakes in en_CA translation
    
    "couln"    --> "could"
    "fromt he" --> "from the"
    "pendingi" --> "pending"

2012-05-22  Curtis Gedak <gedakc@gmail.com>

    Fix spelling mistake in two sentences in en_CA translation
    
    "fil esystem" --> "file system"

2012-05-22  Curtis Gedak <gedakc@gmail.com>

    Minor indentation change to NEWS for last release

2012-04-16  Pavol Klačanský <pavol@klacansky.com>

    Updated Slovak translation

2012-04-12  Ahmad Gharbeia <gharbeia@gmail.com>

    Updated Arabic translation

2012-04-09  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2012-04-09  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.12.1   ==========

2012-04-09  Ask H. Larsen <asklarsen@gmail.com>

    Updated Danish translation

2012-04-03  Joan Lledó <joanlluislledo@gmail.com>

    Fix attempt data rescue fail to open read-only view (#673246)
    
    Dialog_Rescue_Data::on_view_clicked(): String::ucompose() no longer
    used due to a bug with some locales.

2012-04-01  Rogier Goossens <goossens.rogier@gmail.com>

    Fix for FS flags becoming unknown after change label
    
    AFAICS, there is no reason to manually copy all partition fields,
    or to manually initialize the copy of the new partition object.
    So now the partition object is simply copied using assignment.

2012-04-01  Rogier Goossens <goossens.rogier@gmail.com>

    Fix for FS size & flags becoming unknown after change UUID
    
    AFAICS, there is no reason to manually copy all partition fields,
    or to manually initialize the copy of the new partition object.
    So now the partition object is simply copied using assignment.

2012-04-02  Sasi Bhushan <sasi@swecha.net>

    Updated Telugu Translation

2012-04-01  Milo Casagrande <milo@ubuntu.com>

    [l10n] Updated Italian translation

2012-03-31  Khaled Hosny <khaledhosny@eglug.org>

    Updated Arabic translation

2012-03-31  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Updated Serbian translation

2012-03-31  Daniel Korostil <ted.korostiled@gmail.com>

    Uploaded Ukranian

2012-03-31  Arash Mousavi <amousavi@src.gnome.org>

    Updated Persian Translations

2012-03-31  Claude Paroz <claude@2xlibre.net>

    Updated French translation

2012-03-30  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2012-03-30  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2012-03-27  Curtis Gedak <gedakc@gmail.com>

    Ensure Align to MiB does not overlap following partition (#661744)
    
    Normally the GUI should restrict partitions from overlapping other
    partitions.  However we have received a report where an overlap has
    occurred.
    
    Unfortunately we did not have enough details to recreate the problem.
    Based on the report my thoughts are that somehow the problem arose
    due to partitions aligned to boundaries other than MiB in combination
    with the size of a partition being rounded up in the GUI resizer.
    
    In an effort to prevent this problem in the future I have added a
    check for primary or extended partitions overlapping other primary or
    extended partitions.
    
    Closes Bug #661744 - libparted "Can't have overlapping partitions."
                         after successful move+resize?!

2012-03-27  Curtis Gedak <gedakc@gmail.com>

    Rework align to MiB adjustments to end sector of partition
    
    Ensure at least 2 sectors for Extended Boot Record (EBR) between end
    of logical partition and start of next logical partition.
    
    Ensure at least 34 sectors reserved for backup GUID Partition Table
    (GPT) after the end of the last partition.

2012-03-25  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2012-03-25  Curtis Gedak <gedakc@gmail.com>

    Use cached method first to read UUID to shorten scan time

2012-03-23  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fix uninitialised read when pasting into an existing partition
    
    GParted_Core::set_device_partitions() creates and initialises the
    partition objects based on the partitions on the disk using
    partition.Reset() and partition.Set().  These methods never set the
    alignment attribute.
    
    Copy and pasting into an existing partition calls GParted_Core::
    snap_to_alignment() to adjust the start and end of the newly created
    in memory partition object.  When pasting into unallocated space the
    user has selected the required alignment and this is exactly what is
    needed.  However when pasting into an existing partition the in memory
    partition object should always match the actual partition boundaries on
    disk.  Unfortunately the partition boundaries are adjusted based on
    reading the uninitialised alignment attribute.
    
    Initialise the alignment attribute of newly created partition objects to
    ALIGN_STRICT.  Also, when pasting into an existing partition set the
    alignment of that partition object to ALIGN_STRICT so that no boundary
    adjustment is performed.
    
    valgrind:
    ==6845== Conditional jump or move depends on uninitialised value(s)
    ==6845==    at 0x80C779A: GParted::GParted_Core::snap_to_alignment(...) (GParted_Core.cc:566)
    ==6845==    by 0x810C115: GParted::Win_GParted::Add_Operation(...) (Win_GParted.cc:692)
    ==6845==    by 0x8110499: GParted::Win_GParted::activate_paste() (Win_GParted.cc:1649)
    ...
    ==6845== Conditional jump or move depends on uninitialised value(s)
    ==6845==    at 0x80C77A8: GParted::GParted_Core::snap_to_alignment(...) (GParted_Core.cc:568)
    ==6845==    by 0x810C115: GParted::Win_GParted::Add_Operation(...) (Win_GParted.cc:692)
    ==6845==    by 0x8110499: GParted::Win_GParted::activate_paste() (Win_GParted.cc:1649)
    
    GParted_Core.cc:
       562  bool GParted_Core::snap_to_alignment( const Device & device, Partition & partition, Glib::ustring & error )
       563  {
       564          bool rc = true ;
       565
    >> 566          if ( partition .alignment == ALIGN_CYLINDER )
       567                  rc = snap_to_cylinder( device, partition, error ) ;
    >> 568          else if ( partition .alignment == ALIGN_MEBIBYTE )
       569                  rc = snap_to_mebibyte( device, partition, error ) ;
       570
    
    Closes Bug #672654 - Pasting into an existing partition may shrink
                         GParted's representation of it

2012-03-24  Fran Diéguez <fran.dieguez@mabishu.com>

    Updated Galician translations

2012-03-18  Curtis Gedak <gedakc@gmail.com>

    Fix typographical error in en_CA translation
    
    "partition tot he right" --> "partition to the right"

2012-02-14  Curtis Gedak <gedakc@gmail.com>

    Fix two typos in en_CA translation
    
    "Mounte" --> "Mount"
    "secotor" --> "sector"

2012-03-20  Mario Blättermann <mario.blaettermann@gmail.com>

    [l10n] Updated German translation

2012-03-19  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2012-03-19  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2012-03-19  Curtis Gedak <gedakc@gmail.com>

    Make all move warning strings translatable

2012-03-17  Curtis Gedak <gedakc@gmail.com>

    Ensure space for EBR when resizing Extended partition (#664050)
    
    When resizing an extended boot record we must ensure that at least 2
    sectors is reserved in front of the nearest logical partition for the
    Extended Boot Record.
    
    Please note that unless specifically told otherwise, the Linux kernel
    considers Extended Boot Records to be two sectors long, in order to
    "leave room for LILO".
    
    Closes Bug #664050 - Unable to resize extended partition

2012-03-16  Curtis Gedak <gedakc@gmail.com>

    Add requested partition details to log when resize/move fails

2012-03-17  Rudolfs Mazurs <rudolfs.mazurs@gmail.com>

    Updated Latvian translation.

2012-03-13  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Improve reiser4 file system uuid reading method
    
    Previously used "fsck.reiser4" to perform a file system check with a by
    product of outputting the uuid.  However this performs a lot of disk I/O
    and takes a while to complete.  Instead use the much faster and less
    resource intensive "debugfs.reiser4" tool to retrieve the uuid.

2012-03-15  Praveen Arimbrathodiyil <pravi.a@gmail.com>

    Malayalam translation updated by Anish

2012-03-05  Algimantas Margevičius <margevicius.algimantas@gmail.com>

    Updated Lithuanian translation

2012-03-03  Curtis Gedak <gedakc@gmail.com>

    Enable new fs resize library available with parted-3.1 (#668281)
    
    The parted-3.1 release brings back FAT16/FAT32 and HFS/HFS+ file
    system resize capabilities in a new libparted fs resize library.
    
    The following operations are again available when GParted is linked
    with parted-3.1:
    
       FAT16 - grow and shrink
       FAT32 - grow and shrink
       HFS   - shrink
       HFS+  - shrink
    
    Note that there is a difference in how move actions are handled for
    FAT16/FAT32 file systems based on parted version.
    
    When GParted is linked with parted >= 3.0:
    
       FAT16 - move performed internally by GParted
       FAT32 - move performed internally by GParted
    
    When GParted is linked with parted < 3.0:
    
       FAT16 - move performed by libparted
       FAT32 - move performed by libparted
    
    Thanks goes to Jim Meyering for restoring these file system resizing
    capabilities in Parted 3.1 with a new libparted fs resize library.
    
    Closes Bug #668281 - minimal file-system resize API? (FAT and HFS*
                         only)

2012-02-28  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2012-02-28  Daniel Nylander <po@danielnylander.se>

    Updated Swedish translation

2012-02-23  Curtis Gedak <gedakc@gmail.com>

    GParted - Add screen shot to ru translation
    
    Add GParted window screen shot to help manual.
    
    Note that the image has been resized to a maximum width of 510 pixels
    as recommended in the GNOME-STYLE use of screenshots:
    
    Image Width
    http://developer.gnome.org/gdp-style-guide/stable/screenshot-4.html.en

2012-02-23  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2012-02-22  Daniel Șerbănescu <cyber19rider@gmail.com>

    Updated Romanian Translation

2012-02-22  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2012-02-16  Gabriel Speckhahn <gabspeck@gmail.com>

    Updated Brazilian Portuguese translation

2012-02-21  Kjartan Maraas <kmaraas@gnome.org>

    Updated Norwegian bokmål translation

2012-02-21  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2012-02-21  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.12.0   ==========

2012-02-21  Praveen Arimbrathodiyil <pravi.a@gmail.com>

    gparted Malayalam translations by Anish A

2012-02-20  Joe Hansen <joedalton2@yahoo.dk>

    Updated Danish translation

2012-02-20  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Updated Serbian translation

2012-02-18  Curtis Gedak <gedakc@gmail.com>

    Restore write label capability for linux-swap
    
    The setting of the write label capability for linux-swap was lost
    when it was overwritten in the following commit:
    
    Add support for setting UUID (#667278)
    9e96159bb2e6a843ac9465b340ad5f32b0320937

2012-02-18  Rogier Goossens <goossens.rogier@gmail.com>

    New partition dialog: first filesystem in list is always included
    
    Even if invalid, the first filesystem in list is always included.
    
    This is an off-by-one error, which was triggered when the first member
    of FILESYSTEMS was no longer a regular filesystem, as a result of
    commit ce9feeda0e9a04da04cec0a1b01512ed68c2495c:
    'Make FileSystem objects in GParted_Core accessible and usable by others'

2012-02-18  Rogier Goossens <goossens.rogier@gmail.com>

    Fix for implicit assumption that 'FS_UNKNOWN' is last in FILESYSTEMS list
    
    This assumption was invalidated by commit
    ce9feeda0e9a04da04cec0a1b01512ed68c2495c:
    'Make FileSystem objects in GParted_Core accessible and usable by others'
    
    This patch removes the dependency on this implicit assumption.

2012-02-18  António Lima <amrlima@gmail.com>

    Updated Portuguese translation

2012-02-18  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Updated Serbian translation

2012-02-16  Yuri Myasoedov <omerta13@yandex.ru>

    Updated Russian translation

2012-02-16  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2012-02-15  Christian Kirbach <Christian.Kirbach@googlemail.com>

    Updated German translation

2012-02-15  Mario Blättermann <mario.blaettermann@gmail.com>

    [l10n] Updated German doc translation

2012-02-15  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2012-02-14  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2012-02-14  Curtis Gedak <gedakc@gmail.com>

    Fix regression when shrinking, moving and copying swap (#670017)
    
    Since linux-swap does not contain data and does not have a resize
    command, linux-swap is recreated instead of moved, copied, or resized.
    
    GParted 0.11.0 contained the following enhancement:
    Bug #663980 - Avoid redundant file system maximize actions
    
    An unfortunate side effect of this change was that the required
    maximize action to recreate linux-swap would not occur when the new
    size for the partition was less than or equal to the original size.
    
    The changes associated with this commit address this regression.
    
    Closes Bug #670017 - Corrupting swap partitions

2012-02-14  Baurzhan Muftakhidinov <baurthefirst@gmail.com>

    Updated Kazakh translation

2012-02-13  Bruno Brouard <annoa.b@gmail.com>

    Updated French doc translation

2012-02-13  Bruno Brouard <annoa.b@gmail.com>

    Updated French translation

2012-02-13  Fran Diéguez <fran.dieguez@mabishu.com>

    Updated Galician translations

2012-02-13  Gabor Kelemen <kelemeng@gnome.hu>

    Updated Hungarian translation

2012-02-12  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2012-02-12  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2012-02-12  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2012-02-12  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Warn when an LVM2 PV is a member of a damaged VG (#160878)
    
    Generate a warning for each LVM2 Physical Volume which is a member of a
    Volume Group which has other members missing.
    
    Bug #160787 - lvm support

2012-02-12  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Display VG export status with an LVM2 PVs busy status (#160787)
    
    Also update to use LVM terminology, such that a Physical Volume is
    referred to as a member of a Volume Group.  Status of an LVM2 PV is now
    displayed using one of the following messages:
        Not active (Not a member of any volume group)
        VGNAME not active
        VGNAME not active and exported
        VGNAME active
    
    Bug #160787 - lvm support

2012-02-11  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Prevent crash in the LVM2 PV information cache (#160787)
    
    GParted would crash if there were any embeded spaces in the output from
    the command used to query LVM2 PVs.  There aren't normally any embeded
    spaces, but they can occur in certain degrated situations.  For example
    if one of the PVs in a VG spanning two PVs is lost the PV is displayed
    as "unknown device" rather than its actual device name:
    
        # lvm pvs --nosuffix --units b --separator , -o pv_name,pv_free,vg_name,lv_name,lv_attr
          Couldn't find device with uuid DMEi8r-9Vvy-w0Ok-CSSn-oLmY-YrY3-1PBznz.
          PV,PFree,VG,LV,Attr
          /dev/sda11,2143289344,GParted-VG1,,
          unknown device,1619001344,GParted-VG1,lvol0,-wi---
          unknown device,1619001344,GParted-VG1,,
    
    This was loaded into the cache as:
    
        ["/dev/sda11,2143289344,GParted-VG1,,",
         "unknown",
         "device,1619001344,GParted-VG1,lvol0,-wi---",
         "unknown",
         "device,1619001344,GParted-VG1,,"]
    
    The crash would happen when trying to access the VG name or LV flags on
    a line without enough comma separated fields.
    
    Improve parsing of the output from "lvm pvs" so that lines are not split
    on embeded spaces.  Don't crash on lines without without enough comma
    separated fields.
    
    Bug #160787 - lvm support

2012-02-09  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Display any errors from querying LVM2 PVs to the user (#160787)
    
    Previously any errors which occurred when running LVM commands used to
    load the LVM2_PV_Info cache were simply ignored and the cache wasn't
    loaded.  This lead to missing information about LVM2 PVs, but the user
    had no indication as to why.
    
    Now when any errors occur the command ran and all output is captured.
    This is displayed to the user, along with a suitable warning message, in
    the Partition Information dialog.
    
    Bug #160787 - lvm support

2012-02-09  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fix detection of LVM2 PV busy status when exported VGs exist (#160787)
    
    If a Volume Group is exported the "lvm lvs" command returns non-zero
    exit status causing its output to not be loaded into the LVM2_PV_Info
    cache and detection of busy Physical Volumes completely fail.
    
        # lvm lvs -o lv_name,vg_name,lv_attr
          Volume group GParted_VG4 is exported
          LV    VG          Attr
          lvol0 GParted-VG2 -wi---
          lvol0 GParted_VG3 -wi-a-
          lvol1 GParted_VG3 -wi-a-
        # echo $?
        5
    
    Switch to using "lvm pvs" to query all cached information using one
    command, which doesn't return non-zero when exported VGs exist.
    
        # lvm pvs --nosuffix --units b -o pv_name,pv_free,vg_name,lv_name,lv_attr
          PV         PFree      VG          LV    Attr
          /dev/sda10 2147483648
          /dev/sda11 2143289344 GParted-VG1
          /dev/sda12 1619001344 GParted-VG2 lvol0 -wi---
          /dev/sda12 1619001344 GParted-VG2
          /dev/sda13  830472192 GParted_VG3 lvol0 -wi-a-
          /dev/sda13  830472192 GParted_VG3 lvol1 -wi-a-
          /dev/sda13  830472192 GParted_VG3
          /dev/sda14 1619001344 GParted_VG4 lvol0 -wi---
          /dev/sda14 1619001344 GParted_VG4
        # echo $?
        0
    
    Bug #160787 - lvm support

2012-02-05  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Don't ignore any errors resizing btrfs on Linux >= 3.2 (#669389)
    
    Btrfs file system can be successfully resized to the same size without
    failing on Linux 3.2 or higher.
    
    Linux 3.2-rc4 includes commit:
        35bae54a255fbf3eab747b842d300d59f6e1abb4
        Btrfs: Don't error on resizing FS to same size
    
    Closes bug #669389

2012-02-05  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Create helper functions to check for minimum kernel version
    
    Create function Utils::kernel_version_at_least() to check that the
    current Linux kernel is a particular version or higher.
    
    Update nilfs2 to use this function to determine whether the kernel is
    new enough to support file system resizing.

2012-02-08  Rogier Goossens <goossens.rogier@gmail.com>

    Remove temporary file after reading UUID of fat16 and fat32 filesystems

2012-02-10  Rogier Goossens <goossens.rogier@gmail.com>

    Further improve help manual wording
    
    See Bug #667278 - Add support for setting UUID

2012-01-30  Curtis Gedak <gedakc@gmail.com>

    Restructure and word-smith UUID translatable text
    
    Restructure and word-smith translatable text associated with the
    enhancement to add ability for setting UUID in an effort to better
    align with the Gnome Documentation Style Guide.
    
    See Bug #667278 - Add support for setting UUID

2012-01-30  Rogier Goossens <goossens.rogier@gmail.com>

    Implement changing UUID for NTFS (#667278)
    
    Part 4 of 4 to provide new UUID support for NTFS.
    
    Closes Bug #667278 - Add support for setting UUID

2012-01-27  Rogier Goossens <goossens.rogier@gmail.com>

    Use custom text functions for mount/unmount and swapon/swapoff texts
    
    Part 3 of 4 to provide new UUID support for NTFS.
    
    See Bug #667278 - Add support for setting UUID

2012-01-27  Rogier Goossens <goossens.rogier@gmail.com>

    Add support for custom text strings depending on the filesystem
    
    Part 2 of 4 to provide new UUID support for NTFS.
    
    See Bug #667278 - Add support for setting UUID

2012-01-27  Rogier Goossens <goossens.rogier@gmail.com>

    Make FileSystem objects in GParted_Core accessible and usable by others
    
    Part 1 of 4 to provide new UUID support for NTFS.
    
    See Bug #667278 - Add support for setting UUID

2012-02-09  Mario Blättermann <mario.blaettermann@gmail.com>

    [l10n] Updated German doc translation

2012-02-09  Mario Blättermann <mario.blaettermann@gmail.com>

    [l10n] Updated German translation

2012-02-07  Rogier Goossens <goossens.rogier@gmail.com>

    Check LVM cache only for LVM physical volumes
    
    Determine the FS type before checking whether a FS is busy,
    and check LVM only for LVM PVs.
    
    Remove the LVM busy check for extended partitions, as they
    don't contain LVM PVs - or any other FS for that matter.
    (and even if they did, the rest of the code silently assumes
    they don't...)

2012-02-06  Rogier Goossens <goossens.rogier@gmail.com>

    README file: dmsetup is not required for lvm

2012-02-05  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2012-02-03  Curtis Gedak <gedakc@gmail.com>

    Place file system types in alphabetical order

2012-02-03  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2012-02-03  Curtis Gedak <gedakc@gmail.com>

    Update AUTHORS file
    
    Add recognition for the work done by Mike Fleetwood to add initial
    support for Logical Volume Management Physical Volumes (LVM PVs).

2012-02-03  Curtis Gedak <gedakc@gmail.com>

    Add comment to Utils::tokenize method

2012-02-02  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Switch to using lvs to identify active LVM LVs (#160787)
    
    Previously used "dmsetup info" to directly list device-mapper mapping
    names in the kernel to identify active Logical Volumes.  However GParted
    failed to recognise active LVs if the VGNAME contains any hyphens (-).
    This is because LVM encodes hyphens as double hyphens in the mapping
    name.
    
    To avoid having to duplicate the LVM hyphen encoding in GParted, switch
    to using "lvm lvs" to list LVs.
    
        # dmsetup info --columns --noheadings --separator , -o name
        GParted_VG1-lvol_00
        GParted--VG2-lvol--00
    
        # lvm lvs --noheadings --separator , -o lv_name,vg_name,lv_attr
          lvol_00,GParted_VG1,-wi-a-
          lvol-00,GParted-VG2,-wi-a-
          lvol-01,GParted-VG3,-wi---
                                 .^.
    (-) not active, (a) or any other character considered active.  Reference
    lvs(8).
    
    Bug #160787 - lvm support

2012-01-29  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Show LVM2 PVs as supported, read-only (#160787)
    
    Add LVM2 PV into the File System Support dialog list and remove the
    warning message reporting LVM as not being supported.
    
    Bug #160787 - lvm support

2012-01-05  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Display busy status of LVM2 PVs (#160787)
    
    A Volume Group is active when any of its Logical Volume mappings are
    loaded (and enabled) in the Kernel's device-mapper driver.  Therefore
    all the Physical Volumes in the VG (must be considered) active too.
    This is exactly equivalent to a mounted file system, as the kernel is
    actively using the partition.  Mark active LVM2 PVs as busy in GParted.
    
    Don't use statvfs() for determining sector usage of busy LVM2 PVs as it
    will fail with "statvfs(VGNAME): No such file or directory".  Instead
    always use the LVM2 PV specific method.
    
    Display the status of the LVM2 PV in the Information dialog using one of
    the following relevant messages:
        Not active (Not part of any volume group)
        VGNAME not active
        VGNAME active
    (The code uses the VGNAME stored in the partition's first mount point,
    as displayed in the "Mount Point" column, rather than going back to the
    primary source of the information in the LVM2_PV_Info class).
    
    Temporarily prevent GParted from offering to unmount LVM2 PVs until
    activating and deactivating Volume Groups is implemented later.
    
    Bug #160787 - lvm support

2011-12-16  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Display LVM2 VGNAME as the PV's mount point (#160787)
    
    As the Mount Point column is being borrowed to display the PV's VGNAME,
    also suppress generation of the "Mount on" submenu for LVM2 PVs.
    
    Bug #160787 - lvm support

2011-12-11  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Lazy initialize the cache from querying LVM2 PVs (#160787)
    
    Previously when GParted was started LVM2_PV_Info cache was loaded twice,
    executing LVM2 PV querying commands twice.  Firstly when
    lvm2_pv::get_filesystem_support() was checking if LVM2 PV support was
    available, and secondly when forced by a refresh in
    GParted_Core::set_devices().
    
    Implement lazy initialization.  Only load the cache when forced by the
    above mentioned refresh or having to return a value when the cache is
    not yet loaded.  Do not initialize the cache when just checking if LVM2
    PV support is available.
    
    Bug #160787 - lvm support

2012-01-28  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Cache results from querying all LVM2 PVs (#160787)
    
    Cache results from querying all LVM2 PVs in one go to minimise the
    number of times lvm commands are executed.  Take inspiration from
    caching performed by FS_Info and Proc_Partitions_Info.
    
    Bug #160787 - lvm support

2011-11-28  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Allow unused space in a partition to equal its size
    
    Newly created LVM2 PVs, before being added to a Volume Group, report
    free space equal to the partition size.  Allow free space to equal
    partition size.
    
        # parted /dev/sda10 unit B print
        Error: /dev/sda10: unrecognised disk label
        Model: Unknown (unknown)
        Disk /dev/sda10: 2147483648B
        Sector size (logical/physical): 512B/512B
        Partition Table: unknown
        # lvm pvcreate /dev/sda10
          Writing physical volume data to disk "/dev/sda10"
          Physical volume "/dev/sda10" successfully created
        # lvm pvs --units b -o pv_free /dev/sda10
          PFree
          2147483648B

2011-11-28  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Report space usage of LVM2 PVs (#160787)
    
    Add minimal support for just reporting the space usage of LVM2 PVs.
    Accept libparted / blkid detection of LVM2 PVs first, falling back on
    GParted's specific detection code otherwise.  Maintain LVM not supported
    warning message.
    
    Bug #160787 - lvm support

2012-01-28  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Rename FS_LVM2 -> FS_LVM2_PV (#160787)
    
    This is the first step of adding support for just LVM2 Phyiscal Volumes,
    a subset of full LVM2 support.
    
    Make it clear that it is only LVM2 PVs being treated like a file system.
    
    Bug #160787 - lvm support

2012-01-29  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2012-01-28  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2012-01-27  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2012-01-26  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2012-01-25  Curtis Gedak <gedakc@gmail.com>

    Update copyright year

2012-01-25  Curtis Gedak <gedakc@gmail.com>

    Increase FAT32 minimum size to 33 MiB (#668491)
    
    Closes Bug #668491 - Formatting small FAT32 partitions (32MB)
                         violates FAT32 specifications

2012-01-25  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2012-01-24  Curtis Gedak <gedakc@gmail.com>

    Avoid warning display when moving start of extended partition
    
    Moving the start sector of an extended partition should not adversely
    affect booting an operating system because an extended partition is
    only a container for logical partitions.

2012-01-24  Kjartan Maraas <kmaraas@gnome.org>

    Updated Norwegian bokmål translation

2012-01-23  Rogier Goossens <goossens.rogier@gmail.com>

    Fix detection of multiple SW RAID (md) devices (#668486)
    
    Closes Bug #668486 - GParted fails to detect multiple md (SWRaid)
                         devices

2012-01-23  Curtis Gedak <gedakc@gmail.com>

    Enhance documentation for UUIDs and copying partitions (#608308)
    
    Closes Bug #608308 - fix documentation - Copying and Pasting a
                                             Partition

2012-01-22  Curtis Gedak <gedakc@gmail.com>

    Update AUTHORS file
    
    Add recognition for the work done by Rogier Goossens to add support
    for changing file system UUIDs.

2012-01-22  Rogier Goossens <goossens.rogier@gmail.com>

    Add support for setting UUID (#667278)
    
    Add the ability to set a new random UUID on file systems that provide
    the appropriate tools to perform this action.
    
    Update the help manual to include this new functionality.  Also add
    reference links to "setting a partition label" and "changing a
    partition UUID" in the "copying and pasting a partition" section.
    
    This patch does not include setting the UUID on an NTFS file system.
    
    Bug #667278 - Add support for setting UUID
    
    Bug #608308 - fix documentation - Copying and Pasting a Partition

2012-01-20  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2012-01-19  Praveen Illa <mail2ipn@gmail.com>

    Added Telugu Translation

2012-01-19  Praveen Illa <mail2ipn@gmail.com>

    Updated Telugu Translation

2012-01-16  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2012-01-13  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2012-01-12  Curtis Gedak <gedakc@gmail.com>

    Fix mismatched field precision type compiler warning
    
    Inserted cast to int so that third parameter matches expected
    parameter precision type.
    
    Original warning:
    
    FileSystem.cc: In member function ‘Glib::ustring
    GParted::FileSystem::mk_temp_dir(const Glib::ustring&,
    GParted::OperationDetail&)’:
    FileSystem.cc:81:69: warning: field precision should have type ‘int’,
    but argument 3 has type ‘long unsigned int’

2011-09-26  Curtis Gedak <gedakc@gmail.com>

    Fix en_CA parameter translation error
    
    The missing percent sign would cause the parameter substitution to be
    incorrect.

2012-01-09  Curtis Gedak <gedakc@gmail.com>

    Reduce graphic processing requirement for pulse bar
    
    Increase sleep time to decrease pulse bar update frequency.
    
    Debian Bug 499193 - gparted: 100% cpu usage
    
    Debian Bug 519764 - gparted: Lots of animation makes use over SSH
                        X-tunnel slow

2012-01-11  Curtis Gedak <gedakc@gmail.com>

    Add files for translation to POTFILES.in
    
    The file src/FileSystem.cc now contains translatable text.  Also
    added src/nilfs2.cc to handle any future translatable text.

2011-12-28  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Update xfs resize and copy to use new helper functions
    
    Also update xfs file system support detection to allow growing even when
    the xfs kernel module is not already loaded.

2011-12-28  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Update btrfs resize to use new helper functions
    
    Also update btrfs file system support detection to require kernel
    support before allowing resizing.

2011-12-28  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Update jfs resize to use new helper functions
    
    Also update jfs file system support detection to allow growing even when
    the jfs kernel module is not already loaded.

2011-12-27  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add resize support to nilfs2 (#642842)
    
    Resizing requires nilfs-utils 2.1 or higher and Linux 3.0 or higher.
    
    Closes Bug #642842 - nilfs is not detected

2011-12-27  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add helper functions for mounted file system resizing operations
    
    There is a lot of commonality and code repetition for resizing of file
    systems which can only be resized while mounted.  Resizing of btrfs, jfs
    and xfs all follow the pattern: mkdir, mount, resize, umount and rmdir.
    Copying an xfs file system also uses a similar pattern, but for the
    source and destination xfs file systems simultaneously.
    
    Add three helper functions to the FileSystem class which implement
    common tasks, allowing mounted file system resizing to be implemented
    more simply.
    
    Also add a function to the Utils class which checks whether the kernel
    supports a file system.  It handles the case of non-loaded modules,
    which currently leads to reporting the growing of jfs and xfs as
    unsupported.

2012-01-11  Mario Blättermann <mariobl@gnome.org>

    [l10n] Updated German translation

2012-01-11  Jiro Matsuzawa <jmatsuzawa@src.gnome.org>

    Updated Japanese translation

2012-01-11  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2012-01-09  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2012-01-08  Curtis Gedak <gedakc@gmail.com>

    Update AUTHORS file
    
    Add recognition for work done by Phillip Susi to display pop-up
    dialog on libparted exceptions

2012-01-04  Phillip Susi <psusi@cfl.rr.com>

    Display pop up dialog on libparted exceptions
    
    We used to just log libparted exceptions without handling them.  This patch
    changes the exception handler to display a modal dialog box and return the
    chosen action to libparted.

2012-01-06  Vincent Untz <vuntz@gnome.org>

    build: Correctly link to gthread
    
    https://bugzilla.gnome.org/show_bug.cgi?id=667412

2012-01-06  Curtis Gedak <gedakc@gmail.com>

    Fix long scan problem when BIOS floppy setting incorrect
    
    The call to "blkid -c /dev/null" on Precise Pangolin Alpha 1 takes
    exceedingly long.  This occurs when the BIOS is incorrectly set to
    indicate a floppy drive is present when none is physically installed.
    Use cached blkid results instead.
    
    Ubuntu launchpad 910379 - Gparted does not start and continues to
                              scan devices
    https://bugs.launchpad.net/ubuntu/+source/gparted/+bug/910379

2011-12-18  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fix uninitialised read in OperationDetail::set_status()
    
    Setting the status and controlling the timing of operation details
    initialised with OperationDetail(desc, status, font) uses a conditional
    branch depending on the uninitialised variable this->status.
    
    valgrind:
    ==28957== Conditional jump or move depends on uninitialised value(s)
    ==28957==    at 0x80E4287:
    GParted::OperationDetail::set_status(GParted::OperationDetailStatus)
    (OperationDetail.cc:77)
    
    OperationalDetail.cc:
       75  void OperationDetail::set_status( OperationDetailStatus status )
       76  {
    >> 77          if ( this ->status != STATUS_ERROR )
       78          {
       79                  switch ( status )
       80                  {

2012-01-02  Joe Hansen <joedalton2@yahoo.dk>

    Updated Danish translation

2011-12-16  Curtis Gedak <gedakc@gmail.com>

    Update AUTHORS file
    
    Add recognition for the work done by Mike Fleetwood to add support for
    the nilfs2 file system.

2011-12-08  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add nilfs2 support (#642842)
    
    Requires libparted 2.4 or higher, or blkid from utils-linux 2.20 or
    higher for nilfs2 file system detection.
    
    Requires nilfs-utils for nilfs2 file system support.
    
    Closes Bug #642842 - nilfs is not detected

2011-12-13  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2011-12-13  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.11.0   ==========

2011-12-13  Joe Hansen <joedalton2@yahoo.dk>

    Updated Danish translation

2011-12-12  Chao-Hsiung Liao <j_h_liau@yahoo.com.tw>

    Updated Traditional Chinese translation(Hong Kong and Taiwan)

2011-12-11  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Updated Serbian translation

2011-12-07  Daniel Korostil <ted.korostiled@gmail.com>

    Uploaded Ukranian

2011-12-07  Daniel Korostil <ted.korostiled@gmail.com>

    Uploaded Ukranian

2011-11-19  Andrey Germanov <andrey@it-port.ru>

    Added Russian translation for help

2011-11-13  Curtis Gedak <gedakc@gmail.com>

    Avoid redundant file system maximize actions (#663980)
    
    When GParted performed operations or combinations of operations,
    such as:
      a)  copy to same or smaller size destination partition
      b)  move to same or smaller size due to alignment change
      c)  resize to smaller size
    a redundant maximize file system operation would occur.
    
    Normally these redundant maximize operations to grow the file
    system to take up all the space in the partition were not harmful.
    
    However in situations where libparted failed to inform the kernel
    of partition changes, then the extra maximize operation would
    grow the file system to be the original partition size.  In cases
    where the original partition was larger than the new partition
    size, this caused problems because the file system would be
    larger than the partition on reboot.
    
    This enhancement avoids redundant file system maximize actions on
    copy, move, and resize, and should help reduce problems described
    in the following links:
    
    WARNING! Problem Resizing File Systems with GParted
    http://gparted-forum.surf4.info/viewtopic.php?id=13777
    
    Bug #601574 - ERROR: Current NTFS volume size is bigger than the
                  device size!
    
    Bug #604298 - Problems resizing file systems with
                  gparted-live-0.5.0-3
    
    Closes Bug #663980 - Avoid redundant file system maximize actions
                         on copy, move, and resize

2011-11-13  Curtis Gedak <gedakc@gmail.com>

    Update AUTHORS file
    
    Add missed recognition of linux-swap labelling for Mike Fleetwood,
    and fix indentation.

2011-11-13  Curtis Gedak <gedakc@gmail.com>

    Update AUTHORS file
    
    Add recognition for the work done by Stephen Kirkby to reverse umount
    order in xfs::copy.

2011-11-13  Curtis Gedak <gedakc@gmail.com>

    Update AUTHORS file
    
    Add recognition for the work done by Mike Fleetwood to improve btrfs
    labelling and new btrfs multi-tool command use.

2011-11-11  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Use newer btrfs multi-tool control command first
    
    Btrfsctl and btrfs-show were depreciated in October 2011 and have been
    superseeded by the newer btrfs multi-tool control command.  Use btrfs as
    first choice, falling back to btrfsctl and btrfs-show when not found.

2011-11-01  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add labelling of btrfs file systems
    
    Use "btrfs filesystem label" command to set the label of unmounted
    btrfs file systems.

2011-11-13  Stephen Kirkby <mail@stephenkirkby.co.uk>

    Reverse umounting order in xfs::copy
    
    See bug #663806 - Cannot copy XFS filesystem to new smaller
                      partition anymore

2011-11-12  Curtis Gedak <gedakc@gmail.com>

    Add to README packages required for fedora 16 build
    
    Also add configure flag to disable scrollkeeper for desktops that do
    not support scrollkeeper.

2011-11-11  Curtis Gedak <gedakc@gmail.com>

    Enable copy to smaller XFS partition (#663806)
    
    Closes Bug #663806 - Cannot copy XFS filesystem to new smaller
                         partition anymore

2011-11-10  Curtis Gedak <gedakc@gmail.com>

    Add xfsdump package requirement to copy xfs file systems

2011-11-07  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Fix btrfs volume label reading
    
    There are still 2 issues with reading btrfs labels when falling back
    on using btrfs-show command, rather than primary method of using the
    blkid command:
    
    1)  Label is set no "none" when btrfs-show is reporting there is no
        label, although it is impossible to distinguish from the case of the
        label actually being set to "none".
    
    2)  The label has 2 trailing spaces appended as the regular expression
        matches "Label: (btrfslabel  )uuid:" rather than
        "Label: (btrfslabel)  uuid:" in the btrfs-show output.
    
    Assume a label "none" means there is no label and fix the regular
    expression.

2011-11-02  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2011-11-01  Curtis Gedak <gedakc@gmail.com>

    Improve code comments for reading volume labels

2011-11-01  Curtis Gedak <gedakc@gmail.com>

    Enhance regexp_label method to handle unicode characters
    
    Prompted by Bug #662537 - Ext4 unicode labels not shown correctly

2011-11-01  Curtis Gedak <gedakc@gmail.com>

    Display ntfs unicode volume labels properly
    
    Prompted by Bug #662537 - Ext4 unicode labels not shown correctly

2011-11-01  Curtis Gedak <gedakc@gmail.com>

    Display ext2/3/4 unicode volume labels properly (#662537)
    
    Note that this enhancement changes GParted to first try the native
    tools to determine the volume label for all file systems.  If the
    volume label is not found then the fall back method is to use blkid.
    
    There is a small degradation in device refresh times as a result of
    this change.
    
    Closes Bug #662537 - Ext4 unicode labels not shown correctly

2011-11-01  Curtis Gedak <gedakc@gmail.com>

    Repair broken volume label regular expression pattern
    
    Also adjust indentation.

2011-11-01  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2011-11-01  Curtis Gedak <gedakc@gmail.com>

    Fix release date - s/b Nov. 1, 2011

2011-11-01  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.10.0   ==========

2011-10-31  Bruce Cowan <bruce@bcowan.me.uk>

    Updated British English translation

2011-10-31  Yuri Myasoedov <omerta13@yandex.ru>

    Updated Russian translation

2011-10-31  Djavan Fagundes <djavanf@gnome.org>

    Updated Brazilian Portuguese translation

2011-10-30  Alexander Shopov <ash@kambanaria.org>

    Updated Bulgarian translation

2011-10-28  Milo Casagrande <milo@ubuntu.com>

    [l10n] Updated Italian translation

2011-10-26  Antonio Fernandes C. Neto <fernandesn@gnome.org>

    Updated Brazilian Portuguese translation

2011-10-25  Curtis Gedak <gedakc@gmail.com>

    Handle additional return codes from btrfsctl resizing
    
    Sometimes btrfsctl returns 256 on successful resize, not just 0.

2011-10-25  Aurimas Černius <aurisc4@gmail.com>

    Updated Lithuanian translation

2011-10-25  Daniel Nylander <po@danielnylander.se>

    Updated Swedish translation

2011-10-24  Gabor Kelemen <kelemeng@gnome.hu>

    Updated Hungarian translation

2011-10-24  Mario Blättermann <mariobl@gnome.org>

    [l10n] Updated German translation

2011-10-24  Muhammet Kara <muhammet.k@gmail.com>

    Updated Turkish translation

2011-10-24  Claude Paroz <claude@2xlibre.net>

    Updated French translation

2011-10-24  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2011-10-24  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2011-10-23  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2011-10-22  Curtis Gedak <gedakc@gmail.com>

    Add missing exfat file system to set_proper_filesystem method
    
    This should have been part of commit
    7cbc125a2e9d26999c18f7a1539d96ed61a81f5c

2011-10-22  Curtis Gedak <gedakc@gmail.com>

    Add missing file systems to POTFILES.in
    
    Specifically btrfs, ext4, and ufs.

2011-10-22  Curtis Gedak <gedakc@gmail.com>

    Add detection of exfat file systems (#639760)
    
    Note that util-linux v2.18 or higher is required to detect exfat file
    systems.
    
    Part of Bug #639760 - exfat / fat64 support

2011-10-22  Curtis Gedak <gedakc@gmail.com>

    Cleanup btrfs code
    
    Move btrfs higher up the file system list.
    Remove btrfs skip references as btrfs is now supported.

2011-10-18  Curtis Gedak <gedakc@gmail.com>

    Add ability to resize btrfs file systems (#661715)
    
    Closes Bug #661715 - use btrfs-tools ability to resize btrfs
                         partitions

2011-10-18  Curtis Gedak <gedakc@gmail.com>

    Fix innocuous bug
    
    Fix bug introduced in GParted 0.9.0 in commit
    4a8fef98225c513cad9d38f32303c67d1ceed4b8 to address ISO C++ ambiguity
    compiler warning.
    
    Due to the nature of the surrounding code, this bug was not evident
    in the log file output.
    
    Thanks to Magnus Fromreide for finding this bug.

2011-10-13  Jérôme Dumesnil <jerome.dumesnil@gmail.com>

    Improve Merge_Operations method parameters and checks

2011-10-09  Algimantas Margevičius <gymka@mail.ru>

    Updated Lithuanian translation

2011-10-05  Curtis Gedak <gedakc@gmail.com>

    Update AUTHORS file
    
    Add recognition for the work done by Jérôme Dumesnil to merge
    operations as per bug #438573.

2011-10-05  Jérôme Dumesnil <jerome.dumesnil@gmail.com>

    Merge overlapping operations (#438573)
    
    When a new operation is added to operations list, check if a merge
    is possible depending on the operation type:
    
        OPERATION_RESIZE_MOVE:  2 consecutive "resize" operations on the
                                same  partition
    OPERATION_LABEL_PARTITION:  2 "label change" operations (need not be
                                consecutive) on the same partition
              OPERATION_CHECK:  2 "check" operations (need not be
                                consecutive) on the same partition
             OPERATION_FORMAT:  2 consecutive "format" operations on the
                                same partition
    
    Closes Bug #438573 - Cancel out overlapping actions
    
    Also fix a bug when copying partition using the Partition::Set(...)
    method.  This method did not initialize "sectors_used" and
    "sectors_unused" members.

2011-10-03  Rudolfs Mazurs <rudolfs.mazurs@gmail.com>

    Updated Latvian translation.

2011-09-26  Curtis Gedak <gedakc@gmail.com>

    Remove README.compose because String::compose is not used in GParted
    
    String::ucompose is used (note the added "u").

2011-09-26  Curtis Gedak <gedakc@gmail.com>

    Update String::ucompose library to version 1.0.5

2011-09-25  Fran Dieguez <fran@openhost.es>

    Updated Galician translations

2011-09-20  Daniel Nylander <po@danielnylander.se>

    Updated Swedish translation

2011-09-19  Curtis Gedak <gedakc@gmail.com>

    Fix typo in person's name

2011-09-19  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2011-09-19  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.9.1   ==========

2011-09-19  Kenneth Nielsen <k.nielsen81@gmail.com>

    Updated Danish translation

2011-09-19  Rudolfs Mazurs <rudolfs.mazurs@gmail.com>

    Updated Latvian translation.

2011-09-19  Muhammet Kara <muhammet.k@gmail.com>

    Updated Turkish translation

2011-09-19  Kenneth Nielsen <k.nielsen81@gmail.com>

    Updated Danish translation

2011-09-19  Yuri Myasoedov <omerta13@yandex.ru>

    Updated Russian translation

2011-09-19  Gabor Kelemen <kelemeng@gnome.hu>

    Updated Hungarian translation

2011-09-17  Abdalrahim G. Fakhouri <abdilra7eem@yahoo.com>

    Updated Arabic translation

2011-09-16  Daniel Korostil <ted.korostiled@gmail.com>

    Uploaded Ukranian

2011-09-16  António Lima <amrlima@gmail.com>

    Updated Portuguese translation

2011-09-15  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2011-09-13  Curtis Gedak <gedakc@gmail.com>

    Fix NTFS resize operation fails (#655215)
    
    Due to a change in error handling behaviour in ntfsresize version
    2.011.4.12AR.4 (libntfs-3g) GParted would fail to properly resize ntfs
    file systems if the file system was marked for consistency check.
    
    The current maintainer of ntfsprogs provided the following advice:
    
         "Well, though I am reverting back to the old behavior, you should
         add -ff instead of relying on an unspecified behavior when
         ntfsresize gets an error when trying to read the reply. I suppose
         you do not connect the stdin of ntfsresize, hence the error. With
         -ff no question is asked (I stress : even with the old
         ntfsresize)."
    
    Hence I have added a second "--force" option to the ntfsresize command
    for resizing NTFS file systems.
    
    Closes Bug #655215 - NTFS partition resize fails

2011-09-08  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2011-09-07  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2011-09-06  Tiffany Antopolski <tiffany@antopolski.com>

    Updated Canadian English translation.

2011-09-01  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2011-09-01  Alexandre Franke <alexandre.franke@gmail.com>

    Update French translation

2011-09-01  Mario Blättermann <mariobl@gnome.org>

    [l10n] Updated German translation

2011-08-31  Milo Casagrande <milo@ubuntu.com>

    [l10n] Updated Italian translation

2011-08-30  Tiffany Antopolski <tiffany@antopolski.com>

    Dialog_Rescue_Data.cc: fixed type, director --> directory
    
    This fixes bug# 657744

2011-08-31  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Updated Serbian translation

2011-08-30  Tiffany Antopolski <tiffany@antopolski.com>

    en_CA.po: corrected incorrect unit translations.
    
    This patch fixes bug# 610421

2011-08-29  Fran Dieguez <fran@openhost.es>

    Updated galician translations

2011-08-21  Milo Casagrande <milo@ubuntu.com>

    [l10n] Updated Italian translation

2011-07-31  Bruno Brouard <annoa.b@gmail.com>

    Updated French translation

2011-07-30  Mario Blättermann <mariobl@gnome.org>

    [l10n] Updated German translation

2011-07-25  André Gondim <andregondim@ubuntu.com>

    Updated Brazilian Portuguese translation

2011-07-21  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2011-07-20  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2011-07-20  Pavol Klačanský <pavol@klacansky.com>

    Updated Slovak translation

2011-07-19  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2011-07-19  Daniel Nylander <po@danielnylander.se>

    Updated Swedish translation

2011-07-16  Curtis Gedak <gedakc@gmail.com>

    Fix ISO C++ ambiguity compiler warning
    
    Enhance code to pass compiler warning.  Prior to this change the
    compiler would complain with the following message:
    
    error: ISO C++ says that these are ambiguous, even though the worst
    conversion for the first is better than the worst conversion for the
    second: /usr/include/c++/4.5/bits/postypes.h:192:7: note: candidate 1:
    std::fpos<_StateT> std::fpos<_StateT>::operator-(std::streamoff) const
    [with _StateT = __mbstate_t, std::fpos<_StateT> =
    std::fpos<__mbstate_t>, std::streamoff = long int] Utils.cc:443:27:
    note: candidate 2: operator-(std::streamoff, long long int) <built-in>

2011-07-16  Curtis Gedak <gedakc@gmail.com>

    Fix ignoring return value compiler warnings
    
    Add code to handle situation where realpath might return a NULL value.
    Prior to this change the compiler would complain with the following
    message:
    
    error: ignoring return value of ‘char* realpath(const char*, char*)’,
    declared with attribute warn_unused_result

2011-07-16  Curtis Gedak <gedakc@gmail.com>

    Fix expression always true compiler warning
    
    Removed expression that is always true.  Prior to this change the
    compiler would complain with the following message:
    
    error: comparison of unsigned expression >= 0 is always true

2011-07-16  Curtis Gedak <gedakc@gmail.com>

    Fix unused parameter compiler warning
    
    Removed unused parameter.  Prior to this change the compiler would
    complain with the following message:
    
    error: unused parameter ‘cylinder_size’

2011-07-16  Curtis Gedak <gedakc@gmail.com>

    Fix ignoring return value compiler warning
    
    Add code to handle situation where mkdtemp(char*) function returns
    with a NULL value.  Prior to this code the compiler would complain
    with the following message:
    
    error: ignoring return value of ‘char* mkdtemp(char*)’, declared with
    attribute warn_unused_result

2011-07-14  Curtis Gedak <gedakc@gmail.com>

    Update AUTHORS file and minor variable rename
    
    Add recognition for the work done by Markus Elfring.
    Also minor variable rename and added comment for patch to bug #634090.

2011-06-26  Markus Elfring <elfring@users.sourceforge.net>

    Bug #634090: Change some attributes to local variables
    
    Some classes contained private attributes which were used only by a single
    member function. Such items were moved to the corresponding function implementations
    to stress their limited usage scope.
    
    A few unused variables were also deleted.
    
    Signed-off-by: Markus Elfring <elfring@users.sourceforge.net>

2011-07-18  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2011-07-18  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.9.0   ==========

2011-07-18  Daniel Korostil <ted.korostiled@gmail.com>

    Uploaded Ukranian

2011-07-16  Aurimas Černius <aurisc4@gmail.com>

    Updated Lithuanian translation.

2011-07-15  Yaron Shahrabani <sh.yaron@gmail.com>

    Updated Hebrew translation.

2011-07-15  Milo Casagrande <milo@ubuntu.com>

    [l10n] Updated Italian translation

2011-07-14  Claude Paroz <claude@2xlibre.net>

    Updated French translation

2011-07-14  Ask H. Larsen <asklarsen@gmail.com>

    Updated Danish translation

2011-07-08  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Updated Serbian translation

2011-07-06  Muhammet Kara <muhammet.k@gmail.com>

    Updated Turkish translation

2011-07-06  Şenol Korkmaz <mail@senolkorkmaz.info>

    Updated Turkish translation

2011-06-13  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2011-06-12  Arash Mousavi <amousavi@src.gnome.org>

    Updated Persian Translation

2011-06-09  Curtis Gedak <gedakc@gmail.com>

    Enable compile and link with libparted 3.0 (#651559)
    
    The release of (lib)parted 3.0 includes a change to the Application
    Programing Interface - API.  Most importantly, libparted 3.0 removes
    many file system specific function calls, and hence the capabilities
    provided by these functions.  In order for GParted to compile and link
    with libparted 3.0, this libparted functionality is lost.
    
    Specifically, the functionality that is lost when GParted is compiled
    and linked with libparted 3.0 is as follows:
    
      - Loss of ability to grow and shrink FAT16 and FAT32 file systems
      - Loss of ability to shrink HFS and HFS+ file systems
      - Loss of ability to determine used and unused sectors in HFS and
          HFS+ file systems
      - Loss of ability to erase file system signatures on partition
          create and format
    
    It is hoped that other free software projects will include some or all
    of the above lost functionality, which can then be added back to
    GParted.
    
    This commit includes a change in how FAT16 and FAT32 file systems are
    moved.  Specifically the move is now performed internally by GParted
    when linked with libparted 3.0.  The move functionality is provided by
    libparted for prior libparted versions (e.g. less than 3.0).
    
    This is the final enhancement in a series of commits that enable
    GParted to compile with libparted version 3.0.
    
    Closes Bug #651559 - Doesn't compile against parted 3.0

2011-06-08  Curtis Gedak <gedakc@gmail.com>

    Add configure check for libparted version 3.0.0 or higher
    
    This enhancement is in preparation for addressing the following bug
    report:
    Bug #651559 - Doesn't compile against parted 3.0

2011-06-07  Curtis Gedak <gedakc@gmail.com>

    Minor format changes to final configuration summary

2011-06-04  Daniel Nylander <po@danielnylander.se>

    Updated Swedish translation

2011-06-03  Gil Forcada <gforcada@gnome.org>

    [l10n]Updated Catalan translation

2011-05-31  Curtis Gedak <gedakc@gmail.com>

    Add .csettings to .gitignore

2011-05-31  Curtis Gedak <gedakc@gmail.com>

    Fix size off by one sector with unrecognized disk label (#649444)
    
    On disks with an unrecognized disk label, the end sector value
    was saved as one sector larger than actual.  This caused the
    Partition Information dialog to report the end sector value and
    the total number of sectors on the disk as one larger than the
    actual value.
    
    Closes Bug #649444 - Partition information reports wrong sector
                         count

2011-05-29  Gabor Kelemen <kelemeng@gnome.hu>

    Updated Hungarian translation

2011-05-27  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2011-05-27  Yuri Myasoedov <omerta13@yandex.ru>

    Updated Russian translation

2011-05-26  Mario Blättermann <mariobl@gnome.org>

    [l10n] Updated German translation

2011-05-26  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2011-05-25  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2011-05-24  Curtis Gedak <gedakc@gmail.com>

    Improve English grammar: amount -> number (#650237)
    
    Closes Bug #650237 - Grammar error: amount -> number

2011-05-22  Gabor Kelemen <kelemeng@gnome.hu>

    Typo: "on on" -> on

2011-05-23  Curtis Gedak <gedakc@gmail.com>

    Add missed NEWS entry from 0.8.1 release

2011-05-23  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2011-05-23  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.8.1   ==========

2011-05-23  Luana Campos Ferreira <luana@syst.com.br>

    Updated Brazilian Portuguese translation

2011-05-23  krishnababu k <kkrothap@redhat.ocm>

    Added Telugu Translations done by praveen Illa

2011-05-23  krishnababu k <kkrothap@redhat.ocm>

    Added Telugu locale te in LINGUAS

2011-05-23  Daniel Korostil <ted.korostiled@gmail.com>

    Uploaded Ukranian

2011-05-22  Yuri Myasoedov <omerta13@yandex.ru>

    Updated Russian translation

2011-05-22  Gabor Kelemen <kelemeng@gnome.hu>

    Updated Hungarian translation

2011-05-21  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2011-05-20  Arash Mousavi <amousavi@src.gnome.org>

    Updated Persian Translation

2011-05-20  Arash Mousavi <amousavi@src.gnome.org>

    Added Persian translation

2011-05-18  Alexander Shopov <ash@kambanaria.org>

    Updated Bulgarian translation

2011-05-04  Kristjan SCHMIDT <kristjan.schmidt@googlemail.com>

    Add Esperanto translation

2011-04-22  Vincent Blut <vincent.debian@free.fr>

    Fixed typos in French translation

2011-04-02  Rudolfs Mazurs <rudolfs.mazurs@gmail.com>

    Updated Latvian translation.

2011-03-27  Curtis Gedak <gedakc@gmail.com>

    Add note to AUTHORS file for Seth's contributions

2010-12-17  Seth Heeren <sgheeren@hotmail.com>

    Simplified cleanup_cursor() implementation
    
    I hit this performance bug when I cloneda 40G NTFS partition. The actual
    copy was done in under 11 minutes. After that I was shocked to find that
    gparted would spend over 12 minutes in cleanup_cursor, pegging a CPU
    core. (On a quad core desktop...)
    
    Simply replacing the ustring with std::string would reduce the time to
    about 1.5 minutes. Still bad. Also, I didn't want to lose UTF8
    awareness.
    
    So I rewrote the algorithm in 'streaming mode'. This has the (potential)
    drawback that locale conversions are done, but performs well and
    - IMHO - is a lot more readable.
    
    On a minor note: this implementation correctly handles backspaces at the
    start of a line.

2011-03-25  Milo Casagrande <milo@ubuntu.com>

    [l10n] Updated Italian translation

2011-03-19  Curtis Gedak <gedakc@gmail.com>

    Remove one level of quoting when spawning commands
    
    Change spawn_command_line_sync to spawn_sync to reduce the level of
    quoting required when passing commands to the function.  Since
    spawn_command_line_sync uses the parent's environment, the replacement
    call also uses the parent's environment.
    
    This change permits unmounting of file systems mounted with an
    apostrophe in the mount point name.
    
    Ubuntu launchpad bug 151796 - Can't unmount partition with apostrophe
                                  in label
    https://bugs.launchpad.net/ubuntu/+source/gparted/+bug/151796

2011-03-18  Lucian Adrian Grijincu <lucian.grijincu@gmail.com>

    Updated Romanian translation

2011-03-18  Lucian Adrian Grijincu <lucian.grijincu@gmail.com>

    Updated Romanian translation

2011-02-27  Claude Paroz <claude@2xlibre.net>

    Updated French translation

2011-02-27  Curtis Gedak <gedakc@gmail.com>

    Ensure graphical error message displayed when run by non-root user
    
    Ubuntu launchpad bug 696937 - Running gparted as non-root user
                                  displays no graphical error message
    https://bugs.launchpad.net/ubuntu/+source/gparted/+bug/696937

2011-02-26  Curtis Gedak <gedakc@gmail.com>

    Add openSUSE command to install dependencies to README

2011-02-26  Ask H. Larsen <asklarsen@gmail.com>

    Updated Danish translation

2011-02-26  Ask H. Larsen <asklarsen@gmail.com>

    Updated Danish translation

2011-02-22  Curtis Gedak <gedakc@gmail.com>

    Remove all usage of kpartx to avoid partition entry duplicates
    
    Usage of the kpartx package to create partition names has been
    completely removed.  Hence kpartx is no longer even an optionally used
    package by gparted.
    
    This change is related to the following bug report:
    
    Ubuntu launchpad bug 719129 - [Natty] Gparted duplicates dmraid
                                  partition devices
    https://bugs.launchpad.net/ubuntu/+source/gparted/+bug/719129

2011-02-22  Curtis Gedak <gedakc@gmail.com>

    Add flag --enable-libparted-dmraid to use native libparted dmraid
    
    The new configure option --enable-libparted-dmraid enables the native
    use of /dev/mapper dmraid support in the libparted library.
    
    If this option is not specified, or is disabled, then gparted code
    will be used to support dmraid.  The gparted code uses the old dmraid
    partition naming scheme of always appending the partition number to
    the device name.  The letter 'p' is not inserted between the device
    name and the partition number.  The gparted code is particularly
    useful when used with older versions of libparted that do not support
    /dev/mapper dmraid.
    
    Ubuntu launchpad bug 719129 - [Natty] Gparted duplicates dmraid
                                  partition devices
    https://bugs.launchpad.net/ubuntu/+source/gparted/+bug/719129

2011-02-19  Hannie Dumoleyn <hannie@ubuntu-nl.org>

    [l10n] Updated Dutch translation

2011-02-19  Curtis Gedak <gedakc@gmail.com>

    Add comment for documentation maximum image width recommendation

2011-02-18  Hannie Dumoleyn <hannie@ubuntu-nl.org>

    [l10n] Updated Dutch translation

2011-02-17  Khaled Hosny <khaledhosny@eglug.org>

    Updated Arabic translation

2011-02-15  Curtis Gedak <gedakc@gmail.com>

    Update NEWS with correct date for 0.8.0 release

2011-02-15  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2011-02-15  Daniel Șerbănescu <cyber19rider@gmail.com>

    Updated Romanian translation

2011-02-15  Daniel Șerbănescu <cyber19rider@gmail.com>

    Updated Romanian translation

2011-02-15  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.8.0   ==========

2011-02-14  Claude Paroz <claude@2xlibre.net>

    Updated French translation
    
    Contributed by Claude Paroz and Bruno Brouard

2011-02-13  António Lima <amrlima@gmail.com>

    Updated Portuguese translation

2011-02-09  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2011-02-08  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Added screenshots for Serbian documentation

2011-02-04  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Updated Serbian translation

2011-02-08  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2011-02-07  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2011-02-06  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2011-02-05  Yaron Shahrabani <sh.yaron@gmail.com>

    Updated Hebrew translation.

2011-02-05  Chao-Hsiung Liao <j_h_liau@yahoo.com.tw>

    Updated Traditional Chinese translation(Hong Kong and Taiwan)

2011-02-05  Mario Blättermann <mariobl@gnome.org>

    [l10n] Updated German translation

2011-02-05  Mario Blättermann <mariobl@gnome.org>

    [l10n] Updated German doc translation

2011-02-04  Milo Casagrande <milo@ubuntu.com>

    [l10n] Updated Italian translation

2011-02-04  Andika Triwidada <andika@gmail.com>

    Updated Indonesian translation

2011-02-03  Daniel Nylander <po@danielnylander.se>

    Updated Swedish translation

2011-02-03  Fran Diéguez <fran.dieguez@mabishu.com>

    Updated Galician translations

2011-02-03  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Added Serbian help translation

2011-02-03  Мирослав Николић <miroslavnikolic@rocketmail.com>

    Added Serbian translation

2011-02-03  Baurzhan Muftakhidinov <baurthefirst@gmail.com>

    Updated Kazakh translation

2011-01-30  Mario Blättermann <mariobl@gnome.org>

    [l10n] Updated German translation

2011-01-30  Paulo E Ojeda <pauloeojeda@hotmail.com>

    Updated Spanish translation

2011-01-30  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2011-01-29  Curtis Gedak <gedakc@gmail.com>

    Update README and AUTHORS for attempt data rescue

2011-01-29  Curtis Gedak <gedakc@gmail.com>

    Add missing copyright year to help manual

2011-01-29  Curtis Gedak <gedakc@gmail.com>

    Add attempt data rescue section to help manual (#171215)
    
    Add documentation for new feature to attempt data rescue for lost
    partitions.
    
    Closes Bug #171215 - Support lost partition recovery

2011-01-28  Joan Lledó <joanlluislledo@gmail.com>

    Added support to lost data recovery using gpart

2011-01-27  Ask H. Larsen <asklarsen@gmail.com>

    Updated Danish translation

2011-01-26  Bruno Brouard <annoa.b@gmail.com>

    Updated French translation

2011-01-26  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2011-01-23  Yaron Shahrabani <sh.yaron@gmail.com>

    Updated Hebrew translation.

2011-01-21  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2011-01-20  Khaled Hosny <khaledhosny@eglug.org>

    Updated Arabic translation

2011-01-19  Curtis Gedak <gedakc@gmail.com>

    Prevent visual disk display area from disappearing
    
    Added a display refresh to the event queue to address this
    problem.
    
    Previously, the display area of the visual disk seemed to
    disappear when enough operations had been added to the queue so
    that a scrollbar was required (about 4 operations).
    
    If the three lines in HBoxOperations::load_operations method for
    "//make scrollwindow focus on the last operation in the list"
    were commented out then this also prevented the problem from
    occurring.
    
    Interestingly, if I changed the "set_cursor" method to
    a "scroll_to_row" method, then this problem does not occur for an
    additional 2 operations (about 6 operations total).
    
    Ubuntu launchpad bug 583746 - Partition graph disappears after a
                                  swap partition has been deleted
    https://bugs.launchpad.net/ubuntu/+source/gparted/+bug/583746

2011-01-19  Daniel Mustieles <daniel.mustieles@gmail.com>

    Updated Spanish translation

2011-01-17  Curtis Gedak <gedakc@gmail.com>

    Increase robustness of help manual launch
    
    Add direct invocation of yelp if normal open help manual methods
    fail.

2011-01-16  Marek Černocký <marek@manet.cz>

    Updated Czech translation

2011-01-16  Curtis Gedak <gedakc@gmail.com>

    Add possible cause for failure to read file system

2011-01-16  Curtis Gedak <gedakc@gmail.com>

    Add another reason to list when unable to detect file system

2011-01-16  Curtis Gedak <gedakc@gmail.com>

    Update copyright year

2010-11-17  Curtis Gedak <gedakc@gmail.com>

    Change documentation to URL gparted.org and update copyright year

2011-01-15  Curtis Gedak <gedakc@gmail.com>

    Fix minor cylinder alignment rounding error (size < 1 cylinder)
    
    Previously when creating a new partition on a device with 512
    byte sectors with 7 MiB chosen and cylinder alignment, the
    snap_to_cylinder logic would round up to 2 cylinders (~15.69
    MiB), instead of the correct 1 cylinder (~7.84 MiB).

2011-01-15  Curtis Gedak <gedakc@gmail.com>

    Fix paste destination partition smaller than source (#639393)
    
    Re-work logic for copying a cylinder aligned partition to a new
    MiB aligned partition.  Previously this was partially fixed in
    bug #626946 - Destination partition smaller than source partition
    
    Closes Bug #639393 - Redux: Destination partition smaller than
                         source partition

2011-01-04  Yuri Myasoedov <omerta13@yandex.ru>

    Updated Russian translation

2010-12-29  Daniel Nylander <po@danielnylander.se>

    Updated Swedish translation

2010-12-20  Mattias Põldaru <mahfiaz gmail com>

    [l10n] Updated Estonian translation

2010-12-11  Curtis Gedak <gedakc@gmail.com>

    Minor update to Romanian translation to pass xml validation

2010-12-13  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2010-12-13  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.7.1   ==========

2010-12-12  Curtis Gedak <gedakc@gmail.com>

    Remove extra blank line from NEWS

2010-12-12  Curtis Gedak <gedakc@gmail.com>

    Update URL in README

2010-12-11  Yaron Shahrabani <sh.yaron@gmail.com>

    Updated Hebrew translation

2010-09-06  Yaron Shahrabani <sh.yaron@gmail.com>

    Updated Hebrew translation.

2010-12-09  Curtis Gedak <gedakc@gmail.com>

    Enhance to work with mount points defined by uuid or label

2010-12-09  Curtis Gedak <gedakc@gmail.com>

    Add methods to FS_Info class to get path by uuid and by label

2010-12-09  Curtis Gedak <gedakc@gmail.com>

    Handle characters like spaces in mount points (#629592)
    
    Use mntent C library to read mount point files such as
    /etc/fstab, /etc/mtab, and /proc/mounts.
    
    Closes bug #629592 - Unable to find Mount Point if it contains a
                         Space Character

2010-12-08  Curtis Gedak <gedakc@gmail.com>

    Move dmraid device logic outside of for loop
    
    Since this logic did not depend on the for loop variable, it does
    not make sense to have this within the for loop.

2010-12-07  Curtis Gedak <gedakc@gmail.com>

    Refactor device parsing logic into Proc_Partitions_Info class
    
    The reason for refactoring is to simplify the large GParted_Core
    class, to help minimize disk reads, and to group the logic for
    processing the file /proc/partitions into a single logical class.

2010-12-07  Curtis Gedak <gedakc@gmail.com>

    Refactor alternate_paths logic into new Proc_Partitions_Info class
    
    This reason for refactoring is to simplify the large GParted_Core
    class, to help minimize disk reads, and to group the logic for
    processing the file /proc/partitions into a single logical class.

2010-12-03  Lucian Adrian Grijincu <lucian.grijincu@gmail.com>

    Updated Romanian translation

2010-11-11  Curtis Gedak <gedakc@gmail.com>

    Fix incorrect dmraid partition path name (#634553)
    
    Enhance code so that all calls to the ped_partition_get_path
    function in the libparted library go through one
    GParted_Core::get_partition_path method.
    
    This one method makes the appropriate adjustments to the dmraid
    partition path name as required.
    
    Closes bug #634553 - ntfsresize fails on RAID array

2010-11-08  Adrian Guniš <andygun696@gmail.com>

    Updated Czech translation

2010-11-01  Curtis Gedak <gedakc@gmail.com>

    Updated Spanish translation, fixes bug #633492

2010-10-31  Mario Blättermann <mariobl@gnome.org>

    [l10n] Updated German doc translation, Bug #633587

2010-10-30  Carles Ferrando <carles.ferrando@gmail.com>

    Updated Catalan (Valencian) translation

2010-10-30  Inaki Larranaga Murgoitio <dooteo@zundan.com>

    Updated Basque language

2010-10-30  Kjartan Maraas <kmaraas@gnome.org>

    Updated Norwegian bokmål translation.

2010-10-29  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2010-10-29  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.7.0   ==========

2010-10-29  Curtis Gedak <gedakc@gmail.com>

    Add btrfs-tools package to list in README

2010-10-29  Ask H. Larsen <asklarsen@gmail.com>

    Updated Danish translation

2010-10-27  António Lima <amrlima@gmail.com>

    Updated Portuguese translation

2010-10-27  Alexander Shopov <ash@kambanaria.org>

    Updated Bulgarian translation

2010-10-26  Claude Paroz <claude@2xlibre.net>

    Updated French translation

2010-10-25  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2010-10-25  Curtis Gedak <gedakc@gmail.com>

    Ensure 1 MiB reserved when moving partition to start of disk
    
    The 1 MiB is required for the partition table stored at the
    beginning of the disk device.

2010-10-25  Andika Triwidada <andika@gmail.com>

    Updated Indonesian translation

2010-10-25  Antonio Fernandes C. Neto <fernandes@pelivre.org>

    Updated Brazilian Portuguese translation

2010-10-25  Chao-Hsiung Liao <j_h_liau@yahoo.com.tw>

    Updated Traditional Chinese translation(Hong Kong and Taiwan)

2010-10-25  Baurzhan Muftakhidinov <baurthefirst@gmail.com>

    Updated Kazakh translation

2010-10-25  Fran Diéguez <fran.dieguez@mabishu.com>

    Updated Galician translations

2010-10-24  Aurimas Černius <aurisc4@gmail.com>

    Updated Lithuanian translation

2010-10-24  Curtis Gedak <gedakc@gmail.com>

    Fix crash moving more than one logical partition right (#628863)
    
    This problem would occur when using align to MiB for the
    destination partitions.
    
    Closes bug #628863 - gparted crashes applying move to right of
                         more than one logical partition

2010-10-24  Andika Triwidada <andika@gmail.com>

    Updated Indonesian translation

2010-10-23  Christian Kirbach <Christian.Kirbach@googlemail.com>

    Updated German translation

2010-10-23  A S Alam <aalam@users.sf.net>

    updating translation for Punjabi

2010-10-22  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2010-10-22  Gabor Kelemen <kelemeng@gnome.hu>

    Updated Hungarian translation

2010-10-22  Matej Urbančič <mateju@svn.gnome.org>

    Added sl for Slovenian translation

2010-10-22  Matej Urbančič <mateju@svn.gnome.org>

    Added Slovenian translation

2010-10-20  Curtis Gedak <gedakc@gmail.com>

    Change URL for "Saving Details" to a shorter path
    
    This new URL is actually an html redirect to the actual page
    location.  This permits us the flexibility to move the actual
    page wherever is needed on the web site without the need to
    change the URL location in the code.

2010-10-20  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-10-19  Curtis Gedak <gedakc@gmail.com>

    Skip move action because linux-swap contains no data (#589555)
    
    Closes bug #589555 - Moving a swap partition needlessly copies
                         all "data" on it

2010-10-19  Curtis Gedak <gedakc@gmail.com>

    Add virtual move method to FileSystem class
    
    This is preparation work for the following bug report:
    Bug #589555 - Moving a swap partition needlessly copies
                  all "data" on it

2010-10-19  Curtis Gedak <gedakc@gmail.com>

    Skip copy action because linux-swap does not contain data
    
    This change is related to the following bug report:
    Bug #589555 - Moving a swap partition needlessly copies
                  all "data" on it

2010-10-18  Curtis Gedak <gedakc@gmail.com>

    Fix partitions moved or copied using MiB alignment are 1 MiB larger
    
    Correct problem introduced in version 0.6.3 whereby move or copy
    operations using MiB alignment resulted in the destination
    partition being 1 MiB larger.
    
    Closes bug #632478

2010-10-18  Curtis Gedak <gedakc@gmail.com>

    Make btrfs support a normal part of gparted
    
    Remove need to configure with the --enable-btrfs option in order
    to include btrfs support in gparted.

2010-10-17  Mattias Põldaru <mahfiaz gmail com>

    [l10n] Updated Estonian translation

2010-10-16  Kjartan Maraas <kmaraas@gnome.org>

    Updated Norwegian bokmål translation

2010-10-15  Curtis Gedak <gedakc@gmail.com>

    Add more translator comments requested in bug #631684

2010-10-15  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2010-10-14  Mario Blättermann <mariobl@gnome.org>

    [i18n] Updated German translation

2010-10-14  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-10-13  Curtis Gedak <gedakc@gmail.com>

    Rearrange text for warning when moving a partition

2010-10-13  Curtis Gedak <gedakc@gmail.com>

    Update to support plural forms for string for translators
    
    Closes bug #631684 - Needed Translator Comments

2010-10-13  Aron Xu <aronxu@gnome.org>

    Update Simplified Chinese translations, some strings are synced from ubuntu-l10n-zh-cn team by Yunqiang Su.
    
    Signed-off-by: Aron Xu <aronxu@gnome.org>

2010-10-13  Maxim V. Dziumanenko <dziumanenko@gmail.com>

    Updated Ukrainian translation

2010-10-12  Curtis Gedak <gedakc@gmail.com>

    Add translator comments requested in bug #631684

2010-10-12  Curtis Gedak <gedakc@gmail.com>

    Update URLs to new official web site gparted.org

2010-06-24  Markus Elfring <elfring@users.sourceforge.net>

    Bug #539092: Deletion of unnecessary null pointer checks
    
    A few null pointer checks were deleted because they were not needed any more.
    
    Signed-off-by: Markus Elfring <elfring@users.sourceforge.net>

2010-10-05  Curtis Gedak <gedakc@gmail.com>

    Update AUTHORS file

2010-10-03  Seth Heeren <sgheeren@hotmail.com>

    erase_filesystem_signatures writes uninitialized data
    
    tagged FIXME

2010-10-03  Seth Heeren <sgheeren@hotmail.com>

    leaked FS structures for unsupported partition types
    
    FILESYSTEMS vector copies anyway

2010-10-03  Seth Heeren <sgheeren@hotmail.com>

    leaked regular expression (regfree not called)

2010-10-03  Seth Heeren <sgheeren@hotmail.com>

    Unitialized value in OperationDetail::OperationDetail

2010-10-03  Seth Heeren <sgheeren@hotmail.com>

    ped_partition_get_path result not freed

2010-10-03  Seth Heeren <sgheeren@hotmail.com>

    leaked FS structures for new partition dialog
    
    FILESYSTEMS vector copies anyway

2010-10-03  Seth Heeren <sgheeren@hotmail.com>

    leaked Gtk::HBox

2010-10-05  Seth Heeren <sgheeren@hotmail.com>

    remove misuse of ustring in get_filesystem

2010-10-05  Luca Bruno <lucab@debian.org>

    Use ext2 as default when creating new filesystems
    
    Default to ext2 for filesystem creation, instead of the
    alphabetically preceding btrfs. Do not use get_label(),
    as it is not available in older gtkmm.

2010-10-03  Luca Bruno <lucab@debian.org>

    Provide set_used_sectors() for Btrfs
    
    Add set_used_sectors() method to Btrfs handler, to show usage statistics
    on unmounted volumes.

2010-01-04  Luca Bruno <lucab@debian.org>

    List Btrfs capabilities in filesystems table
    
    When enabled, show Btrfs capabilities in features table, without skipping
    it like other multi-volume systems.

2010-01-02  Luca Bruno <lucab@debian.org>

    Use Btrfs handlers, if enabled at configure time
    
    GParted already has basic support only to recognize Btrfs volumes; if
    configured, use our newer methods to handle them.
    Also, put in place interface controls for all supported generic actions.

2010-01-02  Luca Bruno <lucab@debian.org>

    Initial Btrfs-handling modules
    
    This adds initial handlers for Btrfs; only .create, .check and
    .read_label are done for now, via external btrfs-tools.
    Other methods are still only stubs.

2010-01-02  Luca Bruno <lucab@debian.org>

    Add --enable-btrfs to ./configure for experimental Btrfs support
    
    This will take care of setting BTRFS_SUPPORT in config.h, included
    all around the sources to conditionally enable Btrfs capability.

2010-10-01  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2010-10-01  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.6.4   ==========

2010-09-30  Curtis Gedak <gedakc@gmail.com>

    Fix partitions created using MiB alignment are 1 MiB larger (#631026)
    
    Closes bug #631026 - Partitions created using MiB alignment are
                         1 MiB larger than specified

2010-09-23  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2010-09-23  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.6.3   ==========

2010-09-23  Dirgita <dirgitadevina@yahoo.co.id>

    Initial Indonesian translation
    Added id to LINGUAS

2010-09-23  Baurzhan Muftakhidinov <baurthefirst@gmail.com>

    Updated Kazakh translation, missed few strings

2010-09-23  Baurzhan Muftakhidinov <baurthefirst@gmail.com>

    Updated Kazakh translation

2010-09-21  Curtis Gedak <gedakc@gmail.com>

    Use direct assignment for string in class initialization
    
    Change string initialization to use direct assignment instead of
    a class method in the GParted_Core class initialization.
    
    Thanks go to Jan Claeys for pointing out this potential problem
    and providing the following link:
    https://bugzilla.gnome.org/show_bug.cgi?id=627724#c7
    
    This link contains a comment by Matthias Clasen that says:
    
        "In a class init function, don't do anything that causes
        other threads to initialize classed types."

2010-09-21  António Lima <amrlima@gmail.com>

    Updated Portuguese translation

2010-09-19  Ask H. Larsen <asklarsen@gmail.com>

    Updated Danish translation

2010-09-19  Mattias Põldaru <mahfiaz gmail com>

    [l10n] Updated Estonian translation

2010-09-18  Adrian Guniš <andygun696@gmail.com>

    Updated Czech translation

2010-09-16  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2010-09-16  Mario Blättermann <mariobl@gnome.org>

    [i18n] Updated German translation

2010-09-14  Gabor Kelemen <kelemeng@gnome.hu>

    Updated Hungarian translation

2010-09-13  Milo Casagrande <milo@ubuntu.com>

    [l10n] Updated Italian translation

2010-09-13  Carlos José Pereira <carlao2005@gmail.com>

    Updated Brazilian Portuguese translation

2010-06-24  Markus Elfring <elfring@users.sourceforge.net>

    Bug #622598: Complete quoting for macro parameters
    
    Some square brackets were added to be more explicit where macro expansion
    will not be required.
    http://autogen.sourceforge.net/acquoting.html
    http://www.gnu.org/software/autoconf/manual/m4/Quoting-Arguments.html
    
    Signed-off-by: Markus Elfring <elfring@users.sourceforge.net>

2010-09-09  Curtis Gedak <gedakc@gmail.com>

    Fix size reduced by 1 MiB when created after cylinder aligned partition
    
    Prior to this enhancement creating a new partition aligned to MiB
    after a partition aligned to cylinder would result in the creation of
    a partition that was 1 MiB smaller in size than requested.  In the
    case of a 1 MiB new partition, a warning message would be displayed
    indicating that "A partition cannot have a length of 0 sectors".
    
    This problem is avoided by applying similar logic as was used to
    address the following bug:
    Bug #626946 - Destination partition smaller than source partition

2010-09-09  Curtis Gedak <gedakc@gmail.com>

    Fix paste destination partition smaller than source (#626946)
    
    Prior to this enhancement when copying and pasting a partition
    after a cylinder aligned partition, the destination partition
    would become smaller than the source partition if align to MiB
    was selected.
    
    Closes bug #626946 - Destination partition smaller than source
                         partition.

2010-09-08  Curtis Gedak <gedakc@gmail.com>

    Ensure default partition alignment is mebibyte

2010-09-08  Bruno Brouard <annoa.b@gmail.com>

    Updated French translation

2010-09-07  Curtis Gedak <gedakc@gmail.com>

    Fix numerical mismatch when graphically moving logical partition (#628554)

2010-09-06  Yaron Shahrabani <sh.yaron@gmail.com>

    Updated Hebrew translation.

2010-09-05  Daniel Nylander <po@danielnylander.se>

    Updated Swedish translation

2010-09-04  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-09-03  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2010-09-01  Curtis Gedak <gedakc@gmail.com>

    Warn partition move queued that might break boot process (#627199)

2010-08-29  Takayuki KUSANO <AE5T-KSN@asahi-net.or.jp>

    Updated Japanese translation.

2010-08-25  Curtis Gedak <gedakc@gmail.com>

    Enable to work with new dmraid and parted without dmraid support
    
    Newer versions (dmraid-1.0.0-rc16?) of dmraid default to always
    creating partition names by inserting the letter 'p' between the
    device name and the partition number.  Since this is not
    consistent with older versions of dmraid, add extra logic to
    ensure that newer versions of dmraid do not insert this extra
    letter 'p'.
    
    Rename method get_udev_name to get_udev_dm_name and enhance to
    retrieve the property DM_NAME.
    
    Handle situation where parted, and hence libparted, has been
    configured with --disable-device-mapper.  In this situation on
    some distros the device name could be /dev/dm-0.  This results in
    invalid partition names such as /dev/dm-0p1.  Add logic to decode
    the actual /dev/mapper name.

2010-08-25  Curtis Gedak <gedakc@gmail.com>

    Minor cosmetic formatting change

2010-08-17  Curtis Gedak <gedakc@gmail.com>

    Remove dependency on kpartx for fake RAID support
    
    With this patch the commands required to support motherboard BIOS
    RAID, also known as fake RAID, are dmraid and dmsetup.
    
    If the kpartx command is available, it will be used to maintain
    device entries that follow the naming convention used by kpartx.
    
    Closes Ubuntu launchpad bug 554582 - GParted does not list dmraid
    devices
    https://bugs.launchpad.net/ubuntu/+source/gparted/+bug/554582

2010-08-17  Curtis Gedak <gedakc@gmail.com>

    Ensure partition path name is compatible with dmraid (#622217)
    
    This patch along with a few preceding patches address the
    following bug reports:
    
    Closes bug #622217 - gparted live 0.6.0-1 incompatibility with
    AMD RAID (SB750 southbridge)
    
    Closes Ubuntu launchpad bug 600729 - Gparted not usable on
    fakeraid arrays
    https://bugs.launchpad.net/ubuntu/+source/gparted/+bug/600729

2010-08-17  Curtis Gedak <gedakc@gmail.com>

    Create new method make_path_dmraid_compatible
    
    This method will be used to ensure that the partition path
    matches the name that would be created by the dmraid command.

2010-08-15  Curtis Gedak <gedakc@gmail.com>

    Replace function ped_partition_get_path with method get_partition_path

2010-08-15  Curtis Gedak <gedakc@gmail.com>

    Create new method get_partition_path
    
    This method will be used as an entry point to the libparted
    function ped_partition_get_path

2010-08-15  Curtis Gedak <gedakc@gmail.com>

    Simplify logic in set_device_partitions method
    
    Also clean up some white space

2010-08-16  Daniel Nylander <po@danielnylander.se>

    Updated Swedish translation

2010-08-14  Christian Kirbach <Christian.Kirbach@googlemail.com>

    Updated German translation

2010-08-12  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2010-08-11  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-08-11  Yaron Shahrabani <sh.yaron@gmail.com>

    Updated Hebrew translation.

2010-08-10  Curtis Gedak <gedakc@gmail.com>

    Update README with udisks command usage note

2010-08-10  Curtis Gedak <gedakc@gmail.com>

    Prevent partition table creation if partitions are active
    
    Prevent creating new partition tables on devices that have
    mounted file systems, or enabled swap space.
    
    Closes Ubuntu launchpad bug #503125 - gparted allows user to
    overwrite active mounted partition
    https://bugs.launchpad.net/ubuntu/+source/gparted/+bug/503125

2010-08-10  Curtis Gedak <gedakc@gmail.com>

    Add new method active_partitions_on_device_count

2010-08-10  Curtis Gedak <gedakc@gmail.com>

    Move method to match header file
    
    Also update copyright year

2010-08-10  Milo Casagrande <milo@ubuntu.com>

    [l10n] Updated Italian translation

2010-08-09  Curtis Gedak <gedakc@gmail.com>

    Prevent swapon and mount if partition in operation queue (#611431)

2010-08-09  Curtis Gedak <gedakc@gmail.com>

    Add new method partition_in_operation_queue_count

2010-08-04  Mike Fleetwood <mike.fleetwood@googlemail.com>

    Add labelling of linux-swap
    
    When found, use external swaplabel command to label linux-swap
    partitions.  (Available from util-linux-ng 2.18 released 30 Jun 2010).

2010-08-06  Daniel Nylander <po@danielnylander.se>

    Updated Swedish translation

2010-08-01  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2010-08-01  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.6.2   ==========

2010-07-31  Aron Xu <aronxu@gnome.org>

    Change 你 to 您.

2010-07-31  Aron Xu <aronxu@gnome.org>

    Update Simplified Chinese translation.

2010-07-22  Curtis Gedak <gedakc@gmail.com>

    Ensure original partition boundaries kept on rollback of failed move

2010-07-22  Curtis Gedak <gedakc@gmail.com>

    Fix problem with logical partition move overwriting EBR (#623630)
    
    Prevent overwriting meta data (Extended Boot Rectors) for logical
    partitions by temporarily increasing the size of the logical
    partition to encompass all of the space involved in the move
    operation.  The libparted library will move the EBR as needed to
    permit this to happen.  After the move the logical partition is
    set to the proper size.
    
    This fixes bug #623630 - Move logical partition to right yields
    invalid partition table on /dev/sda - wrong signature 0

2010-07-19  Curtis Gedak <gedakc@gmail.com>

    Re-enable MiB partition alignment option

2010-07-21  Curtis Gedak <gedakc@gmail.com>

    Re-word comment for gparted invocation using udisks and hal-lock

2010-07-21  Curtis Gedak <gedakc@gmail.com>

    If available use both udisks and hal-lock to prevent auto-mounting

2010-07-18  Dimitris Tsiolis <dimits7@gmail.com>

    Updated Greek translation for gparted

2010-07-12  Baurzhan Muftakhidinov <baurthefirst@gmail.com>

    Updated Kazakh translation for gparted

2010-07-11  Petr Kovar <pknbe@volny.cz>

    Update Czech help translation by Marek Cernocky

2010-07-10  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-07-08  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2010-07-08  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.6.1   ==========

2010-07-08  Curtis Gedak <gedakc@gmail.com>

    Disable MiB alignment temporarily until bug #623630 can be fixed

2010-07-08  Adrian Guniš <andygun@seznam.cz>

    Update Czech translation

2010-07-06  Curtis Gedak <gedakc@gmail.com>

    Fix crash moving partitions when size is a multiple of 16 MiB (#623697)

2010-07-06  Yaron Shahrabani <sh.yaron@gmail.com>

    Updated Hebrew translation.

2010-06-20  Fran Diéguez <fran.dieguez@mabishu.com>

    Update Galician translations

2010-06-18  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2010-06-18  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.6.0   ==========

2010-06-16  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2010-06-16  Chao-Hsiung Liao <j_h_liau@yahoo.com.tw>

    Updated Traditional Chinese translation(Hong Kong and Taiwan)

2010-06-15  Djavan Fagundes <djavan@comum.org>

    Updated Brazilian Portuguese translation

2010-06-14  Milo Casagrande <milo@ubuntu.com>

    [l10n] Updated Italian translation

2010-06-14  Ask H. Larsen <asklarsen@gmail.com>

    Updated Danish translation

2010-06-14  António Lima <amrlima@gmail.com>

    Updated Portuguese translation

2010-06-11  Claude Paroz <claude@2xlibre.net>

    [help] Updated French translation

2010-06-11  Mario Blättermann <mariobl@gnome.org>

    Updated German doc translation

2010-06-11  Claude Paroz <claude@2xlibre.net>

    Updated French translation
    
    Contributed by Bruno Brouard and Claude Paroz

2010-06-08  Gabor Kelemen <kelemeng@gnome.hu>

    Updated Hungarian translation

2010-06-03  Curtis Gedak <gedakc@gmail.com>

    Fix error in GParted Manual DTD

2010-06-03  Curtis Gedak <gedakc@gmail.com>

    Add sector size support message to configure script

2010-06-01  Curtis Gedak <gedakc@gmail.com>

    Handle devkit-disks being renamed to udisks on Dec. 1, 2009.
    
    Reference link for devkit-disks being renamed to udisks:
    http://www.freedesktop.org/wiki/Software/DeviceKit-disks

2010-06-01  Curtis Gedak <gedakc@gmail.com>

    Update GParted manual with the option to align to MiB
    
    This change is part of adding the option to align to MiB (#617409).

2010-05-30  Curtis Gedak <gedakc@gmail.com>

    Add udevinfo and udevadm as optional commands used with dmraid support

2010-05-31  Petr Kovar <pknbe@volny.cz>

    Update Czech translation by Adrian Gunis

2010-05-29  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2010-05-28  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-05-28  Mario Blättermann <mariobl@gnome.org>

    Updated German translation

2010-05-27  Curtis Gedak <gedakc@gmail.com>

    Enable support for devices with sector sizes > 512 bytes (#607165)
    
    GParted requires libparted version 2.2 or higher to support devices
    with sector sizes > 512 bytes.
    
    This commit marks the end of a series of enhancements required to
    provide support for sector sizes > 512 bytes.

2010-05-27  Curtis Gedak <gedakc@gmail.com>

    Fix off by 1 sector math when looking for unallocated space

2010-05-27  Curtis Gedak <gedakc@gmail.com>

    Only show exactly 1 MiB unallocated space if not MBR or EBR
    
    Do not show unallocated space of exactly 1 MiB in size if:
    
      a) The space is at the front of the drive.
    
         This space is reserved for the partition table and the
         Master Boot Record.
    
    or
    
      b) The space immediately precedes a logical partition.
    
         This space is reserved for the Extended Boot Record.

2010-05-26  Curtis Gedak <gedakc@gmail.com>

    Change behavior to better align with GNOME HIG on drop-down lists
    
    Quote from GNOME Human Interface Guidelines 2.2.1 on Drop-down lists:
    
         "Selecting an item from a drop-down list should not affect the
         values of any other controls. It may sensitize, insensitize, hide
         or show other controls, however."

2010-05-26  Curtis Gedak <gedakc@gmail.com>

    Improve cylinder alignment for partitions less than a disk cylinder

2010-05-25  Curtis Gedak <gedakc@gmail.com>

    Limit graphic movement according to required boot record space
    
    Also respect minimum size for extended partition in graphical
    representation.
    
    This change is part of adding the option to align to MiB (#617409).

2010-05-25  Curtis Gedak <gedakc@gmail.com>

    Fix short by 1 MiB on spinbutton before with resize/move

2010-05-21  Curtis Gedak <gedakc@gmail.com>

    Add gnome-doc-utils to apt-get install example

2010-05-20  Curtis Gedak <gedakc@gmail.com>

    Disable resizing when the total area is less than two mebibytes

2010-05-20  Curtis Gedak <gedakc@gmail.com>

    Ensure space available for GPT backup partition table on paste

2010-05-25  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-05-24  Mario Blättermann <mariobl@gnome.org>

    Updated German translation

2010-05-24  Fran Diéguez <fran.dieguez@mabishu.com>

    Updated Galician translations

2010-05-21  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2010-05-20  Curtis Gedak <gedakc@gmail.com>

    Add partition alignment option to align to MiB (#617409)
    
    Make align to MiB the default setting instead of align to cylinder.
    
    Migrate logic for alignment to cylinder into its own method
    snap_to_cylinder, and place common logic in snap_to_alignment.
    
    Add alignment checks for situations where space is needed for Master
    Boot Record or Extended Boot Record.
    
    Adjust ranges on spin buttons according to required boot record space.
    
    Copy fix for off by one sector (#596552) from
    Dialog_Partition_New::Get_New_Partition to
    Dialog_Base_Partition::Get_New_Partition
    
    Enhance resize / move logic for checking locations of nearby logical
    partitions to not depend on the partition ordering.
    
    Note: This commit does not include limiting graphic movement according
    to required boot record space.

2010-05-09  Curtis Gedak <gedakc@gmail.com>

    Change partition alignment check box to a drop down menu
    
    Also add signal handler to alignment menu to update file system
    minimum size.
    This enhancement is to prepare for adding a third alignment
    option to align to MiB.

2010-05-04  Curtis Gedak <gedakc@gmail.com>

    Remove incorrect comment

2010-05-04  Curtis Gedak <gedakc@gmail.com>

    Ensure sector size is set when getting a new partition
    
    This change is in preparation for supporting sectors sizes > 512 bytes.

2010-05-04  Curtis Gedak <gedakc@gmail.com>

    Fix used and unused sector math when pasting a copied partition
    
    This change is in preparation for supporting sectors sizes > 512 bytes.

2010-05-04  Curtis Gedak <gedakc@gmail.com>

    Fix minimum size calculation when pasting a copied partition
    
    This change is in preparation for supporting sectors sizes > 512 bytes.

2010-04-28  Curtis Gedak <gedakc@gmail.com>

    Enhance detection for ext3, fat16, fat32, linux-swap, and hfsplus
    
    This change is in preparation for supporting sectors sizes > 512 bytes.

2010-04-28  Curtis Gedak <gedakc@gmail.com>

    Enhance file system space unused math to use actual sector size

2010-04-28  Curtis Gedak <gedakc@gmail.com>

    Enhance file system detection to use FS_Info method - blkid
    
    This enhancement was added because the current libparted library,
    version 2.2, does not appear to detect file systems for sector
    sizes other than 512 bytes.

2010-04-28  Curtis Gedak <gedakc@gmail.com>

    Rename get_length method to get_sector_length
    
    This rename is to try to reduce future confusion between
    partition length in sectors versus partition length in bytes.

2010-04-27  Curtis Gedak <gedakc@gmail.com>

    Replace sector math with get_byte_length method where appropriate
    
    This change is in preparation for supporting sectors sizes > 512 bytes.

2010-04-27  Curtis Gedak <gedakc@gmail.com>

    Enhance set_valid_operations method to handle different sector sizes

2010-04-27  Curtis Gedak <gedakc@gmail.com>

    Create get_byte_length method

2010-04-26  Curtis Gedak <gedakc@gmail.com>

    Remove 512 byte based units and rename _FACTOR to BYTE
    
    With the removal of the 512 byte constants, such as MEBIBYTE, it
    was possible to rename the _FACTOR constants back to BYTE
    constants.  The _FACTOR constants, such as MEBI_FACTOR, were a
    temporary measure to help in the transition to support devices
    with sector sizes > 512 bytes.

2010-04-26  Curtis Gedak <gedakc@gmail.com>

    Replace constant MEBIBYTE with appropriate MEBI_FACTOR math
    
    This change is in preparation for supporting sectors sizes > 512 bytes.

2010-04-26  Curtis Gedak <gedakc@gmail.com>

    Remove default sector size
    
    The DEFAULT_SECTOR_SIZE was a temporary measure to help in the
    transition to support devices with sector sizes > 512 bytes.  It
    is no longer needed.

2010-04-26  Curtis Gedak <gedakc@gmail.com>

    Replace default sector size with appropriate sector size
    
    This change is in preparation for supporting sectors sizes > 512 bytes.

2010-04-26  Curtis Gedak <gedakc@gmail.com>

    Enhance copy_filesystem method to work with sector sizes
    
    This change is in preparation for supporting sectors sizes > 512 bytes.

2010-04-25  Curtis Gedak <gedakc@gmail.com>

    Clean up progress bar current status after copy/move action
    
    Also ensure that final progress bar current status is set to
    completed value when the copy blocks method completes.

2010-04-23  Curtis Gedak <gedakc@gmail.com>

    Add logic for copy and paste between devices with different sector sizes
    
    This change is in preparation for supporting sectors sizes > 512 bytes.

2010-04-19  Curtis Gedak <gedakc@gmail.com>

    Set sector size and add to operation and dialog methods
    
    This change is in preparation for supporting sectors sizes > 512 bytes.

2010-04-19  Curtis Gedak <gedakc@gmail.com>

    Add device sector size to partition object
    
    The device sector size is needed in all calculations that convert
    between sectors and bytes.  The device sector_size is included in
    the partition object because this object is used to contain
    operation information in addition to actual partitions and
    unallocated space.  A second option was considered to pass the
    device object to many methods, but this was considered a much
    larger task that might not provide significant gains in
    maintainability.

2010-04-19  Gintautas Miliauskas <gintautas@miliauskas.lt>

    Updated Lithuanian translation by Aurimas Černius.

2010-04-17  André Gondim <andregondim@ubuntu.com>

    Updated Brazilian Portuguese translation, reviewed by Vladimir Melo <vmelo@gnome.org>.

2010-04-17  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-04-11  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2010-04-10  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-04-08  Khaled Hosny <khaledhosny@eglug.org>

    Updated Arabic translation

2010-04-07  Mario Blättermann <mariobl@gnome.org>

    Updated German translation

2010-04-07  Curtis Gedak <gedakc@gmail.com>

    Enhance copy methods for sector sizes > 512 bytes

2010-04-04  Maxim V. Dziumanenko <dziumanenko@gmail.com>

    Updated Ukrainian translation

2010-03-31  Dimitris Tsiolis <dimits7@gmail.com>

    Updated Greek translation for gparted

2010-03-30  Cheng-Chia Tseng <pswo10680@gmail.com>

    Updated Traditional Chinese translation(Hong Kong and Taiwan)

2010-03-27  Gintautas Miliauskas <gintautas@miliauskas.lt>

    Updated Lithuanian translation.

2010-03-25  Curtis Gedak <gedakc@gmail.com>

    Enhance Makefile generated ChangeLog entries
    
    Convert git log entries, which are prepended to the ChangeLog, to
    look more like traditional ChangeLog entries.

2010-03-24  Curtis Gedak <gedakc@gmail.com>

    Enable copy to work on computers with only 128 MiB RAM (#613430)

2010-03-23  Curtis Gedak <gedakc@gmail.com>

    Enhance format_size() for sector sizes > 512 bytes

2010-03-23  Curtis Gedak <gedakc@gmail.com>

    Remove GParted:: prefix from in front of UNIT constants

2010-03-23  Curtis Gedak <gedakc@gmail.com>

    Enhance sector_to_unit() for sector sizes > 512 bytes

2010-03-16  Curtis Gedak <gedakc@gmail.com>

    Convert file system maximum from sector to byte value

2010-03-16  Curtis Gedak <gedakc@gmail.com>

    Convert file system minimum from sector to byte value

2010-03-16  Curtis Gedak <gedakc@gmail.com>

    Add constants to aid in transition to support sector sizes > 512 bytes

2010-03-23  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-03-18  Inaki Larranaga Murgoitio <dooteo@zundan.com>

    Updated Basque language

2010-03-18  Timo Jyrinki <timo.jyrinki@iki.fi>

    Updated Finnish translation by Jiri Grönroos. Via Launchpad.

2010-03-14  Curtis Gedak <gedakc@gmail.com>

    Fix mkswap error "UUID parsing failed" when resizing with no UUID
    
    See following debian bug report:
    http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=573836

2010-03-05  Curtis Gedak <gedakc@gmail.com>

    Enhance erase_filesytem_signatures() for sector sizes > 512 bytes

2010-03-05  Curtis Gedak <gedakc@gmail.com>

    Enhance file system detection for sector sizes > 512 bytes

2010-03-04  Curtis Gedak <gedakc@gmail.com>

    Set device length to value from libparted
    
    Previously this value was calculated to end on a cylinder
    boundary.  On today's larger hard drives, which simply emulate
    Cylinders/Heads/Sectors, some disk space might remain after the
    last cylinder.  This space would always be less than a full
    cylinder in size.  Now this space will be visible to the user.

2010-03-14  Adi Roiban <adi@roiban.ro>

    Update Romanian translation

2010-03-13  Kjartan Maraas <kmaraas@gnome.org>

    Updated Norwegian bokmål translation

2010-03-10  Milo Casagrande <milo@ubuntu.com>

    Updated Italian translation

2010-03-10  Petr Uzel <petr.uzel@suse.cz>

    Avoid compiler warning
    
    Report of this problem can be found in the mailing list archive:
    http://sourceforge.net/mailarchive/forum.php?thread_name=4B967C26.2090608%40gmail.com&forum_name=gparted-devel

2010-03-08  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2010-03-08  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.5.2   ==========

2010-03-08  Petr Kovar <pknbe@volny.cz>

    Update Czech translation by Adrian Gunis

2010-03-08  Peteris Krisjanis <pecisk@gmail.com>

    Updated Latvian translation.

2010-03-07  Peteris Krisjanis <pecisk@gmail.com>

    Updated Latvian translation.

2010-03-07  Peteris Krisjanis <pecisk@gmail.com>

    Updated Latvian translation.

2010-03-05  Fran Diéguez <frandieguez@ubuntu.com>

    Updated Galician translation

2010-03-05  António Lima <amrlima@gmail.com>

    Updated Portuguese translation

2010-03-03  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-03-03  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-03-03  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2010-03-02  Djavan Fagundes <djavan@comum.org>

    Updated Brazilian Portuguese translation

2010-03-03  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-03-02  Alexander Shopov <ash@contact.bg>

    Updated Bulgarian translation

2010-03-02  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-03-01  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-03-01  Claude Paroz <claude@2xlibre.net>

    Updated French translation

2010-03-01  Daniel Nylander <po@danielnylander.se>

    Updated Swedish translation

2010-03-01  Gabor Kelemen <kelemeng@gnome.hu>

    Updated Hungarian translation

2010-03-01  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-03-01  Curtis Gedak <gedakc@gmail.com>

    Fix bug when copying huge NTFS partition never finishes (#575324)
    
    Improved logic in cleanup_cursor method to minimize the number of
    string erase operations performed.
    
    Previously when the NTFS copy finished, GParted would take an
    exceptionally long time to clean up the output.  This was due to
    the huge number of small string erase operations performed on a
    extremely large string.

2010-03-01  Curtis Gedak <gedakc@gmail.com>

    Add check if partition table re-read work around code is needed
    
    A patch to alleviate the "failure to inform kernel of partition
    changes problem" (bug #604298) has been included in parted-2.2.
    Hence when parted-2.2 or higher is used, the work around code in
    GParted is not required.

2010-03-01  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-02-27  Curtis Gedak <gedakc@gmail.com>

    Improve logic for libparted minimum version check

2010-02-26  Curtis Gedak <gedakc@gmail.com>

    Remove comment about wrong identifier for HFS/HFS+ (#568867)
    
    With parted-2.2 the partition identifier for HFS and HFS+ is set to 0xAF.
    With previous versions of parted this was incorrectly set to 0x83.

2010-02-25  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-02-25  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-02-25  Mario Blättermann <mariobl@gnome.org>

    Updated German translation

2010-02-24  Curtis Gedak <gedakc@gmail.com>

    Disable extended option for non-MSDOS and non-DVH disk types (#583906)
    
    According to parted documentation, only "msdos" and "dvh" disk
    types (or partition table types) support extended partitions.
    All other disk types support primary partitions only.

2010-02-23  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-02-23  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2010-02-22  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-02-22  Curtis Gedak <gedakc@gmail.com>

    Make partition "New" label available for translation (#610540)

2010-02-22  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2010-02-21  Mario Blättermann <mariobl@gnome.org>

    Updated German translation

2010-02-21  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-02-20  Curtis Gedak <gedakc@gmail.com>

    Add sector size to device display pane
    
    Also add sector_size to Device class.  This is the start of an
    enhancement to add support for devices with sector sizes other
    than 512 bytes (#607165).

2010-02-20  Bruce Cowan <bcowan@fastmail.co.uk>

    Update British English translation
    
    Fixes #610547

2010-02-20  Curtis Gedak <gedakc@gmail.com>

    Indicate required software packages if unable to read file system (#576908)

2010-02-20  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-02-20  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-02-20  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-02-20  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-02-20  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-02-04  Henrique P. Machado <hpmachado@gnome.org>

    Updated Brazilian Portuguese Translation

2010-02-02  Marek Černocký <marek@manet.cz>

    Update Czech translation

2010-01-27  Curtis Gedak <gedakc@gmail.com>

    Increase required gtkmm-2.4 version 2.16.0 for gtk_show_uri (#608065)
    
    Building GParted with gtkmm-2.4 version 2.14.0 would fail with:
         error: ‘gtk_show_uri’ was not declared in this scope.
    This problem does not occur with version 2.16.0.

2010-01-25  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2010-01-25  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.5.1   ==========

2010-01-25  Inaki Larranaga Murgoitio <dooteo@zundan.com>

    Updated Basque language

2010-01-24  Ask H. Larsen <asklarsen@gmail.com>

    Updated Danish translation

2010-01-21  Gabor Kelemen <kelemeng@gnome.hu>

    Updated Hungarian translation

2010-01-20  Djavan Fagundes <djavan@comum.org>

    Updated Brazilian Portuguese translation.

2010-01-19  Milo Casagrande <milo@ubuntu.com>

    Updated Italian translation

2010-01-18  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2010-01-18  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2010-01-18  Bruce Cowan <bcowan@fastmail.co.uk>

    Updated British English translation

2010-01-17  Petr Kovar <pknbe@volny.cz>

    Add Czech help translation by Marek Cernocky

2010-01-17  Claude Paroz <claude@2xlibre.net>

    Updated French translation

2010-01-17  Alexander Shopov <ash@contact.bg>

    Updated Bulgarian translation

2010-01-04  Khaled Hosny <khaledhosny@eglug.org>

    Updated Arabic translation

2010-01-17  Mario Blättermann <mariobl@gnome.org>

    Updated German translation

2010-01-17  Daniel Nylander <po@danielnylander.se>

    Updated Swedish translation

2010-01-17  Daniel Nylander <po@danielnylander.se>

    Updated Swedish translation

2010-01-16  Curtis Gedak <gedakc@gmail.com>

    Avoid crashes by ignoring devices with sector size > 512 bytes (#595309)
    
    This is not an ideal solution because devices with sector sizes
    greater than 512 bytes are silently ignored from a graphical interface
    perspective.  Only if the user starts gparted from the command line
    will the "ignoring device" message be seen.
    
    In my opinion this short term solution of ignoring these devices is
    still better than a gparted crash which might also result in data
    loss.
    
    A bug report requesting support for devices with sector sizes > 512
    bytes has been created.
    https://bugzilla.gnome.org/show_bug.cgi?id=607165
    
    Thanks go to Jan Claeys for the initial small patch.

2010-01-15  Curtis Gedak <gedakc@gmail.com>

    Work around: retry ped_disk_commit_to_os() after sleep(1) (#604298)
    
    Bug #604298 involves a problem that can occur when GParted uses
    libparted to manipulate a partition table, but the
    ped_disk_commit_to_os() function fails to inform the Linux kernel of
    these changes to the partition table.  This problem is intermittent in
    nature and is difficult to reliably reproduce.
    
    This change is an attempt at a work around.  If the first call to
    ped_disk_commit_to_os() fails, then we sleep for 1 second to allow the
    system to settle before invoking the function call again.  My testing
    has shown that this greatly improves the chances of successfully
    informing the kernel of partition changes.
    
    Thanks go to François Dupoux and Steven Shiau for their suggestions
    and help to resolve this problem.

2010-01-15  Mario Blättermann <mariobl@gnome.org>

    Updated German translation

2010-01-14  Curtis Gedak <gedakc@gmail.com>

    Update copyright years in fat16.cc and fat32.cc

2010-01-14  Curtis Gedak <gedakc@gmail.com>

    Fix problem reading some FAT32 partitions (#605175)
    
    This problem was introduced with GParted 0.4.7 when the "-a"
    option was removed from the dosfsck command.  The dosfsck command
    is used to read the number of used sectors.  Instead we will now
    use the "-n" option which does not write any changes to the file
    system, and allows non-interactive operation.

2010-01-12  Petr Kovar <pknbe@volny.cz>

    Updated Czech translation by Adrian Gunis and Marek Cernocky

2010-01-11  Daniel Nylander <po@danielnylander.se>

    Updated Swedish translation

2010-01-08  Curtis Gedak <gedakc@gmail.com>

    Ensure commit_to_os() return code is passed up through commit() method
    
    This problem was discovered while investigating bug #604298

2010-01-08  Anton Méixome <meixome@certima.net>

    Updated Galician Translation

2010-01-05  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2010-01-02  Curtis Gedak <gedakc@gmail.com>

    Update copyright year

2010-01-02  Curtis Gedak <gedakc@gmail.com>

    Clean up code for old bug #157871
    
    Remove commented code and boolean use-C-lang parameter for
    Utils::num_to_str() method because this bug was fixed in
    gcc-4.0.3.  The GNU gcc compiler versions 4 and up are now
    commonly in use.  Also due to previous partial commenting and
    removal of the code, the code was non-functional
    
    Thanks goes to Jan Claeys for pointing out this clean up
    opportunity.

2009-12-29  Jan Janssen <medhefgo@web.de>

    Fixed Bug #595141 in German translation

2009-12-19  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2009-12-19  Antonio Fernandes C. Neto <fernandes@pelivre.org>

    Updated Brazilian Portuguese translation

2009-12-19  Lucian Adrian Grijincu <lucian.grijincu@gmail.com>

    Update Romanian translation

2009-12-13  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2009-12-09  Curtis Gedak <gedakc@gmail.com>

    Clear libparted kernel re-read messages when scanning devices
    
    When calling commit_to_os() with newer Linux kernels,
    parted-1.9.0, and at least one partition mounted on the device,
    the following error message is displayed:
    
        The kernel was unable to re-read the partition table on
        /dev/sda (Device or resource busy).  This means Linux won't
        know anything about the modifications you made until you
        reboot.  You should reboot your computer before doing
        anything with /dev/sda.
    
    If this message is not cleared then it will remain in the
    libparted_message array and could potentially be displayed along
    with an error message for a subsequent scanned disk device.

2009-12-06  Curtis Gedak <gedakc@gmail.com>

    Change field labels to sentence capitalization
    
    Change is to align with GNOME Human Interface Guidelines 2.2.
    http://library.gnome.org/devel/hig-book/stable/design-text-labels.html.en

2009-12-06  Curtis Gedak <gedakc@gmail.com>

    Change wording from disk label type to more common partition table

2009-12-06  Curtis Gedak <gedakc@gmail.com>

    Update optional list of commands used

2009-12-06  Curtis Gedak <gedakc@gmail.com>

    Update list of optional commands used by gparted

2009-12-05  Adi Roiban <adi@roiban.ro>

    Update Romanian translation

2009-12-03  Curtis Gedak <gedakc@gmail.com>

    Capture libparted messages when invalid partition table found #337244
    
    When libparted reports a problem with the partition table, capture
    this message and attach it to the "unallocated" partition that spans
    the entire disk.
    
    Examples of these types of problems encountered are:
         /dev/sda: unrecognised disk label
         Can't have overlapping partitions.

2009-12-02  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2009-12-02  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.5.0   ==========

2009-12-01  Ask H. Larsen <asklarsen@gmail.com>

    Updated Danish translation

2009-11-29  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2009-11-28  António Lima <amrlima@gmail.com>

    Updated Portuguese translation

2009-11-27  Curtis Gedak <gedakc@gmail.com>

    Remove extra line feed from NEWS file

2009-11-27  Djavan Fagundes <dnoway@gmail.com>

    Updated Brazilian Portuguese translation

2009-11-26  Matej Urbančič <mateju@svn.gnome.org>

    Updated Slovenian translation

2009-11-25  Gabor Kelemen <kelemeng@gnome.hu>

    Updated Hungarian translation

2009-11-25  Milo Casagrande <milo@ubuntu.com>

    Updated Italian translation

2009-11-25  Daniel Nylander <po@danielnylander.se>

    Updated Swedish translation

2009-11-25  Claude Paroz <claude@2xlibre.net>

    Updated French translation

2009-11-25  Curtis Gedak <gedakc@gmail.com>

    Re-enable ability to paste into an existing partition (#582101)
    
    The ability to paste into an existing partition was disabled in
    v0.4.0.  This ability has been re-enabled along with a warning
    dialog that indicates the data in the existing partition will be
    lost if the copy and paste operation is applied.

2009-11-25  Djavan Fagundes <dnoway@gmail.com>

    Updated Brazilian Portuguese translation.

2009-11-23  Curtis Gedak <gedakc@gmail.com>

    Add mdadm requirement to README for Linux software RAID

2009-11-15  Krasimir Chonov <mk2616@abv.bg>

    Updated Bulgarian translation

2009-11-13  Adrian Guniš <andygun@seznam.cz>

    Update Czech translation.

2009-11-05  Curtis Gedak <gedakc@gmail.com>

    Cleanup file copyright entries
    
    Restore copyright entries by original author to those of his last
    known repository commit titled "released gparted-0.3.4 on
    LarryT's request." on Feb 25, 2007.
    
    Add my own copyright entries for files in which I changed source
    code.  Files in which I only made spelling changes do not have my
    copyright entry added.

2009-11-05  Daniel Nylander <po@danielnylander.se>

    Updated Swedish translation

2009-11-04  Curtis Gedak <gedakc@gmail.com>

    Update AUTHORS file for Linux software RAID functionality

2009-11-03  Curtis Gedak <gedakc@gmail.com>

    Remove MAINTAINERS file since no longer needed with git

2009-11-03  Curtis Gedak <gedakc@gmail.com>

    Add some entries to gparted.doap file

2009-11-03  Curtis Gedak <gedakc@gmail.com>

    Added auto detection of Linux software RAID devices
    
    Auto detection of Linux software RAID devices was lost in GParted
    0.3.8.  This was because device scanning by the libparted device
    call ped_device_probe_all() was replaced with custom code within
    GParted to scan /proc/partitions for devices.
    
    The reason the libparted call was replaced was due to a long
    scanning problem with ped_device_probe_all(), a non-existent
    physical floppy device, and a BIOS setting indicating a floppy
    drive existed.  See bug #351753:
    https://bugzilla.gnome.org/show_bug.cgi?id=351753

2009-11-03  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2009-11-03  Curtis Gedak <gedakc@gmail.com>

    Rename NO_DOC to HAVE_DISABLE_DOC for consistency sake

2009-11-03  Curtis Gedak <gedakc@gmail.com>

    Replace gnome-open with gtk_show_uri (#600046)
    
    This change was performed to align with a GNOME goal:
    http://live.gnome.org/GnomeGoals/RemoveGnomeOpenGnomeHelp
    
    For backwards compatibility, the gnome-open command is used
    when gtkmm < 2.14.0.

2009-11-02  Curtis Gedak <gedakc@gmail.com>

    Correct desktop files for name and generic name entries (#600048)
    
    This change was performed to align with a GNOME goal:
    http://live.gnome.org/GnomeGoals/CorrectDesktopFiles

2009-11-02  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2009-11-02  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.4.8   ==========

2009-11-02  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2009-11-01  Milo Casagrande <milo@ubuntu.com>

    Removed obsoletes from Italian translation

2009-11-01  Milo Casagrande <milo@ubuntu.com>

    Updated Italian translation

2009-10-31  Djavan Fagundes <dnoway@gmail.com>

    Updated Brazilian Portuguese translation

2009-10-31  António Lima <amrlima@gmail.com>

    Updated Portuguese translation

2009-10-29  Bruce Cowan <bcowan@fastmail.co.uk>

    Updated British English translation
    
    Changed back to original units, I don't think this sort of thing should
    be changed in en_GB.

2009-10-28  Daniel Nylander <po@danielnylander.se>

    Updated Swedish translation

2009-10-26  Khaled Hosny <khaledhosny@eglug.org>

    Updated Arabic translation

2009-10-26  Claude Paroz <claude@2xlibre.net>

    Updated French translation
    
    Contributed by Julien Hardelin and Claude Paroz

2009-10-26  Curtis Gedak <gedakc@gmail.com>

    Change em dashes to period with new sentence
    
    With the em dashes in the translatable strings, a 'make distcheck'
    would fail.  Hence these have been change to be a period followed by a
    new sentence.

2009-10-26  Curtis Gedak <gedakc@gmail.com>

    Remove unable to re-read partition table warning (#599078)
    
    When used with parted-2.0, GParted would display a warning
    message indicating "kernel unable to re-read partition table" on
    every device scan for each device with at least one partition
    mounted.  Device scans occur when GParted starts up, immediately
    after a series of actions are applied, and upon manually invoked
    device refreshes.  This, I believe, is excessive notification to
    the user and would be annoying.

2009-10-25  Curtis Gedak <gedakc@gmail.com>

    Ensure no pending operations before creating partition table (#583896)
    
    This fixes a situation where GParted would crash if a user queued
    up some operations, created a new partition table, and then
    applied the operations.

2009-10-24  Curtis Gedak <gedakc@gmail.com>

    Update copyright year for Win_GParted class

2009-10-24  Curtis Gedak <gedakc@gmail.com>

    Improve feedback when creating or pasting partition (#579266)
    
    Improve the feedback to the user when creating or pasting a
    partition on a device with no partition table found.
    
    Prior to this enhancement if a user tried to create or paste a
    partition onto a device with no partition table found, GParted
    would present the user with a Create Partition Table dialog.
    
    When creating a new partition this could cause confusion for
    users who were trying to format the disk.  The user could
    mistakenly believe the choice of an MS-DOS file system was being
    presented.
    
    Similarly on a paste operation it could be confusing to be
    presented with a dialog to create a partition table without any
    explanation of why a partition table was suddenly required in the
    midst of the paste operation.
    
    Neither the new partition creation, nor the partition paste
    actions were performed after the Create Partition Table dialog
    was displayed.

2009-10-22  Curtis Gedak <gedakc@gmail.com>

    Add padding to progress dialog window

2009-10-18  Curtis Gedak <gedakc@gmail.com>

    Change field labels to sentence capitalization (#583885)
    
    This change done to align with the GNOME Human Interface Guidelines.
    http://library.gnome.org/devel/hig-book/stable/design-text-labels.html.en

2009-10-18  Curtis Gedak <gedakc@gmail.com>

    Remove repeated titles in progress dialog (#589558)

2009-10-17  Curtis Gedak <gedakc@gmail.com>

    Add help dialog when configured with --disable-doc

2009-10-17  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2009-10-16  Curtis Gedak <gedakc@gmail.com>

    Use both devkit-disks and hal-lock if available
    
    During the transition period from HAL to devicekit-disks some
    distributions might require both methods to prevent device
    auto-mounting.  See Ubuntu launchpad bug link:
    https://bugs.launchpad.net/ubuntu/+source/gparted/+bug/428133

2009-10-16  Mario Blättermann <mariobl@gnome.org>

    Updated German translation

2009-10-15  Sveinn í Felli <sveinki@nett.is>

    Added IS translation

2009-10-15  Curtis Gedak <gedakc@gmail.com>

    Add support for devicekit-disks device automount prevention

2009-10-14  Curtis Gedak <gedakc@gmail.com>

    Further improve dmraid device and name recognition

2009-10-14  Curtis Gedak <gedakc@gmail.com>

    Update URL for bug reporting link

2009-10-13  Curtis Gedak <gedakc@gmail.com>

    Rework logic to resolve real path for symbolic link devices (#582687)

2009-10-13  Curtis Gedak <gedakc@gmail.com>

    Add adjective to indicate size of patch and fix spacing

2009-10-07  Bruce Cowan <bcowan@fastmail.co.uk>

    Minor string fixes (#597686)

2009-10-10  André Gondim <andregondim@ubuntu.com>

    Updated Brazilian Portuguese translation and corrected a incorrect translation

2009-10-09  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2009-10-09  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.4.7   ==========

2009-10-07  Bruce Cowan <bcowan@fastmail.co.uk>

    Updated British English translation

2009-10-06  Curtis Gedak <gedakc@gmail.com>

    Enhance configure to work with libparted two digit version number

2009-09-30  Curtis Gedak <gedakc@gmail.com>

    Ensure dmraid devices created for devices passed on command line

2009-09-30  Curtis Gedak <gedakc@gmail.com>

    Improve logic for retrieval of device udev name

2009-09-30  Curtis Gedak <gedakc@gmail.com>

    Improve logic to recognize dmraid devices

2009-09-30  Curtis Gedak <gedakc@gmail.com>

    Simplify logic to ensure dmraid_devices cleared before populating

2009-09-28  Seth Hunter <hunter@ll.mit.edu>

    Fix problem with create new partition size off by one sector (#596552)
    
    With "Round to cylinders" deactivated, creating a new partition would
    create a partition that was one sector too large.
    
    Closes GParted bug #596552

2009-09-09  Piotr Drąg <piotrdrag@gmail.com>

    Updated Polish translation

2009-09-04  Inaki Larranaga Murgoitio <dooteo@zundan.com>

    Updated Basque language

2009-08-20  Adrian Guniš <andygun696@gmail.com>

    Update Czech translation

2009-08-11  Curtis Gedak <gedakc@gmail.com>

    Made set_used_sectors method less meddlesome for FAT16/32
    
    Removed the "-a" flag from the dosfsck command that is used to
    determine the number of used sectors in FAT16 and FAT32 file systems.
    
    Related to GParted bug #569921

2009-08-09  Curtis Gedak <gedakc@gmail.com>

    Resolve real path for symbolic link devices in mount files (#582687)
    
    In order to find a match between the device paths in mount files and
    partitions as found by libparted, the mount device must be a real path
    and not a symbolic link.
    
    Closes GParted bug #582687

2009-08-05  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2009-08-05  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.4.6   ==========

2009-08-03  Denis Arnaud <darnaud@src.gnome.org>

    Updated breton translation, added br in LINGUAS file

2009-08-02  António Lima <amrlima@gmail.com>

    Updated Portuguese translation

2009-08-02  Ask Hjorth Larsen <asklarsen@gmail.com>

    Updated Danish Translation by Ask Hjorth Larsen

2009-08-02  Chao-Hsiung Liao <j_h_liau@yahoo.com.tw>

    Updated Traditional Chinese translation(Hong Kong and Taiwan)

2009-08-01  Djavan Fagundes <dnoway@gmail.com>

    Updated Brazilian Portuguese translation.

2009-08-01  Mattias Põldaru <mahfiaz gmail com>

    Updating Estonian translation

2009-08-01  Milo Casagrande <milo@ubuntu.com>

    Updated Italian translation:
     * Updated translation of the documentation
     * Updated translation of the application

2009-07-31  Curtis Gedak <gedakc@gmail.com>

    Place translator comment in proper location (#590415)

2009-07-31  Claude Paroz <claude@2xlibre.net>

    Updated French manual translation

2009-07-31  Claude Paroz <claude@2xlibre.net>

    Updated French translation

2009-07-31  Mattias Põldaru <mahfiaz gmail com>

    Updating Estonian translation

2009-07-31  Gabor Kelemen <kelemeng@gnome.hu>

    Hungarian translation updated

2009-07-30  Žygimantas Beručka <zygis@gnome.org>

    Updated Lithuanian translation

2009-07-29  Daniel Nylander <po@danielnylander.se>

    Updated Swedish translation

2009-07-28  Curtis Gedak <gedakc@gmail.com>

    Enhance to use new linux-swap "filesystem" types added in parted-1.9.0
    
    Excerpt from parted-1.9.0 release notes follows:
      In libparted, the linux-swap "filesystem" types are now called
      "linux-swap(v0)" and "linux-swap(v1)" rather than "linux-swap(old)"
      and "linux-swap(new)" as in parted 1.8, or "linux-swap" as in older
      versions; "old" and "new" generally make poor names, and v1 is the
      only format supported by current Linux kernels. Aliases for all
      previous names are available.

2009-07-23  Curtis Gedak <gedakc@gmail.com>

    Enhance file parsing to handle tabs properly (#582687)
    
    Previously the read_mountpoints_from_file() method only expected
    a space between arguments in files such as /etc/fstab.  Valid
    delimiters are now space and tab.
    
    Related to GParted bug #582687

2009-07-08  Curtis Gedak <gedakc@gmail.com>

    Cleanup white space in read_mountpoints_from_file method

2009-07-21  Khaled Hosny <khaledhosny@eglug.org>

    Updated Arabic translation

2009-07-14  Mario Blättermann <mariobl@gnome.org>

    Updated German doc translation

2009-07-12  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2009-07-08  Jorge González <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2009-07-06  Curtis Gedak <gedakc@gmail.com>

    Remove extra blank line accidentally added in last commit

2009-07-06  Curtis Gedak <gedakc@gmail.com>

    Change button create to apply for partition table creation (#576374)
    
    To further minimize the chance of accidentally creating a new partition
    table, the following steps have been taken:
    
    1)  Rename non-standard Create button to stock Apply button.
    2)  Remove extra warning about erasing entire disk device.
    3)  Update GParted Manual accordingly.
    
    Closes GParted bug #576374

2009-07-06  David Planella <david.planella@gmail.com>

    Updated Catalan translation

2009-07-04  Curtis Gedak <gedakc@gmail.com>

    Make .gitignore gparted* mask more specific (#587065)

2009-06-26  Priit Laes <plaes@plaes.org>

    Added Estonian translation.

2009-06-26  Claude Paroz <claude@2xlibre.net>

    Add French manual translation
    
    Contributed by Julien Hardelin and Claude Paroz.

2009-06-22  Mario Blättermann <mariobl@gnome.org>

    Updated German translation

2009-06-13  Daniel Nylander <po@danielnylander.se>

    Updated sv translation (Daniel Nylander)

2009-06-12  A S Alam <aalam@users.sf.net>

    updating translation for Punjabi (Gurmukhi) pa.po

2009-05-24  Jorge Gonzalez <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2009-05-18  Jorge Gonzalez <jorgegonz@svn.gnome.org>

    Updated Spanish translation

2009-05-16  Curtis Gedak <gedakc@gmail.com>

    Improve error messages and translator comments
    
    Provide translator sample text, and add more detail to error messages
    when updating the ntfs boot sector.

2009-05-16  Curtis Gedak <gedakc@gmail.com>

    Remove requirement for xxd and dd for NTFS move or paste action
    
    Perform direct update of Number of Hidden Sectors in NTFS boot record.
    This change removes the need for /usr/bin/xxd and /bin/dd.
    Related to GParted bug #574389

2009-05-15  Gabor Kelemen <kelemeng@gnome.hu>

    Hungarian translation updated

2009-05-14  Curtis Gedak <gedakc@gmail.com>

    Require xxd and dd for NTFS move or paste action
    
    Related to GParted bug #574389

2009-05-14  Curtis Gedak <gedakc@gmail.com>

    Remove absolute paths from /usr/bin/xxd and /bin/dd

2009-05-08  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2009-05-08  Curtis Gedak <gedakc@gmail.com>

    ==========   gparted-0.4.5   ==========

2009-05-04  Christian Kirbach <Christian.Kirbach@googlemail.com>

    [master] Updated German translation.

2009-05-02  Curtis Gedak <gedakc@gmail.com>

    Ensure /dev file system device entries created before adding device

2009-05-02  Curtis Gedak <gedakc@gmail.com>

    Refactor some logic into separate settle_device method

2009-05-02  Curtis Gedak <gedakc@gmail.com>

    Improve file system detection with fall back to vol_id

2009-05-02  David Planella <david.planella@gmail.com>

    Updated Catalan translation by David Planella

2009-04-29  Curtis Gedak <gedakc@gmail.com>

    Remove get_dmraid_prefix method used to specify a single device
    
    It appears that different dmraid versions handle specifying a
    single dmraid device differently.
    
    dmraid-1.0.0.rc14 uses a partial name only,
      such as "isw" or "isw_cjbdddajhi".
    dmriad-1.0.0.rc15 uses a full name only,
      such as "isw_cjbdddajhi_Vol0".
    
    To maintain compatibility with the broadest range of dmraid versions,
    the ability to specify a single dmraid device is being removed.

2009-04-29  Curtis Gedak <gedakc@gmail.com>

    Ensure kpartx is executed even if dmraid fails

2009-04-28  Curtis Gedak <gedakc@gmail.com>

    Remove temporary debugging information accidentally committed

2009-04-28  Curtis Gedak <gedakc@gmail.com>

    Enhance get_dmraid_name to also check udev information if needed

2009-04-28  Curtis Gedak <gedakc@gmail.com>

    Refactor some logic into separate get_udev_name method

2009-04-27  Curtis Gedak <gedakc@gmail.com>

    Minor style change to place braces on a separate line

2009-04-26  Curtis Gedak <gedakc@gmail.com>

    Improve dmraid device detection with checking udev if needed
    
    Some distros appear to display /dev/dm-# device names with
    libparted.  Since this fails a pattern match with the dmraid
    device name, check with udev to see if a pattern match is
    possible with the name returned from udevinfo or udevadm info.
    
    For example:
         /dev/mapper/isw_cjbdddajhi_Vol0 is the device name
         /dev/dm-0 is a symbolic link pointing to the above device name

2009-04-26  Curtis Gedak <gedakc@gmail.com>

    Update copyright year for FS_Info class

2009-04-24  Curtis Gedak <gedakc@gmail.com>

    Enhance UUID detection to fallback to vol_id if available
    
    Normally, the blkid command will detect the UUID for a file system.
    In cases where blkid fails to detect the UUID and the vol_id command
    is available, then try using the vol_id command.

2009-04-24  Curtis Gedak <gedakc@gmail.com>

    Improve initialization logic for FS_Info class
    
    Ensure that fs_info_cache is populated in any first instantiation in
    a program, even for an instantiation such as:
        FS_Info A(false);

2009-04-24  Curtis Gedak <gedakc@gmail.com>

    Enhance to try udevadm if udevsettle is not found
    
    Newer systems might not have udevsettle.  It has been replaced by
    "udevadm settle".
    Thanks to Lorenzo Cogotti aka Micia for this knowledge, and for a
    proposed solution.

2009-04-23  Curtis Gedak <gedakc@gmail.com>

    Fix typo in gparted short description

2009-04-22  Curtis Gedak <gedakc@gmail.com>

    Append -git to version for continuing development

2009-04-22  Curtis Gedak <gedakc@gmail.com>

    Minor cosmetic fix to reorder Reiser4 detection code
    
    Now the Reiser4 detection code better matches the detection code for
    other file systems.

2009-04-22  Curtis Gedak <gedakc@gmail.com>

    Improve crypt-luks detection (#578300)
    
    Move crypt-luks detection prior to libparted file system detection.
    If libparted file system detection is performed first, then encrypted
    file systems such as ext3 will be incorrectly detected by libparted as
    plain 'ext3' when in fact these file systems are encrypted.

2009-04-22  Curtis Gedak <gedakc@gmail.com>

    Add entries used by eclipse projects

2009-04-21  Baurzhan Muftakhidinov <baurthefirst@gmail.com>

    Added Kazakh translation

2009-04-20  Curtis Gedak <gedakc@gmail.com>

    Minor update to one line intro for gparted

2009-04-20  Curtis Gedak <gedakc@gmail.com>

    Add gparted.doap to provide short description for git web interface

2009-04-20  Mario Blättermann <mariobl@gnome.org>

    Updated German translation

2009-04-19  Curtis Gedak <gedakc@gmail.com>

    Update HACKING notes with git specific comments

2009-04-19  Curtis Gedak <gedakc@gmail.com>

    Add note that ChangeLogs are no longer used
    
    Enhance Makefile.am to add 'git log' entries to the ChangeLog
    after the release of gparted-0.4.4.  This is performed by a dist-hook
    target only on release.  E.g., make dist

2009-04-18  Curtis Gedak <gedakc@gmail.com>

    Create list of file patterns for git to ignore

2009-04-18  Curtis Gedak <gedakc@gmail.com>

    Ensure that m4 directory exists

2009-04-12  Jorge Gonzalez Gonzalez <jorgegonz@src.gnome.org>

    Updated Spanish translation
    
    svn path=/trunk/; revision=1123

2009-04-17  Curtis Gedak  <gedakc@gmail.com>

        * *: This ChangeLog is no longer used.

	     ChangeLog entries after 2009-04-17 are auto-generated when
	     releasing.
	
	     On April 17, 2009, the source code repository was converted
	     from svn to git.  ChangeLogs are seldom used with git.
	
	     For a detailed list of changes in the entire project,
	     use 'git log' from the top level source directory.

2009-04-02  Curtis Gedak  <gedakc@gmail.com>

	* configure.in: gparted-0.4.4
	  ===================================================

2009-03-27  Curtis Gedak  <gedakc@gmail.com>

	* src/DMRaid.cc: Updated translation and code comments.
	  - Closes GParted bug #576956

2009-03-26  Curtis Gedak  <gedakc@gmail.com>

	* README: Updated requirements for dmraid support.

2009-03-23  Curtis Gedak  <gedakc@gmail.com>

	* src/linux_swap.cc: Maintained label and uuid when resizing swap.
	  - Closes GParted bug #575585

	* src/DMRaid.cc: Fixed error when resizing an extended partition.

2009-03-16  Curtis Gedak  <gedakc@gmail.com>

	* include/DMRaid.h: Enhanced dmraid partition deletion.
	  - Handle partition names with or without a 'p' between the
	    device name and the partition number.

	* include/GParted_Core.h,
	  src/GParted_Core.cc: Improved swap and dmraid mountpoint detection.

2009-03-14  Curtis Gedak  <gedakc@gmail.com>

	* src/GParted_Core.cc: Added initial support for dmraid devices.
	  - Closes GParted bug #317262

	* include/DMRaid.h,
	  include/Makefile.am,
	  src/DMRaid.cc,
	  src/Makefile.am: Added new class for dmraid support.

	* README: Added note about requirements for dmraid support.
	  - added note that xxd command also needed for NTFS support.

2009-03-13  Curtis Gedak  <gedakc@gmail.com>

	* include/Utils.h,
	  src/Utils.cc: Removed file_exists() method.
	  - Glib::file_test() already exists and is available for use.

2009-03-12  Curtis Gedak  <gedakc@gmail.com>

	* include/Utils.h,
	  src/Utils.cc: Added tokenize() and file_exists() methods.

2009-02-27  Curtis Gedak  <gedakc@gmail.com>

	* src/GParted_Core.cc: Enabled type checking (const instead of #define)

2009-02-25  Curtis Gedak  <gedakc@gmail.com>

	* src/GParted_Core.cc: Added recognition of /dev/mmcblk* SD/MMC devices.
	  - Closes GParted bug #564985

2009-02-23  Curtis Gedak  <gedakc@gmail.com>

	* include/Utils.h,
	  src/Dialog_Partition_New.cc,
	  src/DialogFeatures.cc,
	  src/GParted_Core.cc,
	  src/Utils.cc,
	  src/Win_GParted.cc: Added detection of btrfs file system.
	  - Thanks to Luca Bruno for the original btrfs patch that I adapted.
	  - Related to GParted bug #571170

2009-02-20  Curtis Gedak  <gedakc@gmail.com>

	* src/Win_GParted.cc: Fixed compiler warning regarding parentheses.

2009-02-18  Curtis Gedak  <gedakc@gmail.com>

	* include/Utils.h,
	  src/Dialog_Partition_New.cc,
	  src/DialogFeatures.cc,
	  src/GParted_Core.cc,
	  src/Utils.cc,
	  src/Win_GParted.cc: Added detection of LUKS encrypted partitions.
	  - Closes GParted bug #490740

2009-02-16  Curtis Gedak  <gedakc@gmail.com>

	* src/Dialog_Base_Partition.cc,
	  src/GParted_Core.cc: Enhanced move/resize functionality.
	  - Only move start sector if dialog space before value is changed.
	  - Closes GParted bug #571151

	* include/Partition.h,
	  src/Partition.cc: Added strict_start indicator.

2009-02-13  Curtis Gedak  <gedakc@gmail.com>

	* configure.in: Append -svn to version for continuing development

2009-02-12  Curtis Gedak  <gedakc@gmail.com>

	* configure.in: gparted-0.4.3
	  ===================================================

2009-02-11  Curtis Gedak  <gedakc@gmail.com>

	* gparted.in: Fixed typo of "freedeskdesktop" in hal-lock name.
	  - Thanks to Alain Kalker for discovering this mistake.
	  - Thanks to Jonas Pedersen for reporting this mistake upstream.
	  - Closes GParted bug #571347

2009-02-09  Curtis Gedak  <gedakc@gmail.com>

	* src/Win_GParted.cc: Fixed crash on startup with Russian language.
	  - Thanks to Dmitriy Motitskiy for small patch.
	  - Closes GParted bug #570855

	* README: Added note blkid is used for ext4 detection.

2009-02-06  Curtis Gedak  <gedakc@gmail.com>

	* configure.in: Append -svn to version for continuing development

2009-02-05  Curtis Gedak  <gedakc@gmail.com>

	* configure.in: gparted-0.4.2
	  ===================================================

2009-01-28  Curtis Gedak  <gedakc@gmail.com>

	* src/GParted_Core.cc: Fixed partition type for linux-swap(new).
	  - Related to GParted bug #419515

2009-01-24  Curtis Gedak  <gedakc@gmail.com>

	* gparted.desktop.in.in: Added additional Filesystem category.
	  - Closes GParted bug #568937

	* src/Dialog_Partition_Copy.cc,
	  src/Win_GParted.cc: Enhanced copy/paste checks when MBR/EBR involved.
	  - Related to GParted bug #567402

2009-01-20  Curtis Gedak  <gedakc@gmail.com>

	* doc/gparted.8: Updated manual page.

2009-01-19  Curtis Gedak  <gedakc@gmail.com>

	* src/Win_GParted.cc: Reworded message when applying operations.
	  - Closes GParted bug #564952

2009-01-13  Curtis Gedak  <gedakc@gmail.com>

	* src/Win_GParted.cc: Removed space between menu entry and periods.

2009-01-07  Curtis Gedak  <gedakc@gmail.com>

	* src/ntfs.cc: Removed redundant command flag options.

2009-01-06  Curtis Gedak  <gedakc@gmail.com>

	* src/GParted_Core.cc: Actually commit this file, and
	                       remove src/Partition.o.

	* src/Win_GParted.cc: Redo update copyright year range, again.
	  - Updated copyright year in Help -> About.

	* src/GParted_Core.cc: Added two FS types to recognition as linux-swap.
	  - The GIT version of libparted returns types of linux-swap(new)
	    and linux-swap(old), previously only linux-swap was returned.
	  - Closes GParted bug #419515

	* src/Win_GParted.cc: Redo update copyright year range.
	  - In a recent upgrade to eclipse 3.4.0, I did not realize that
	    the default save option was to remove trailing whitespace, and
	    ensure newline at end of file.  This resulted in way too many
	    differences showing up in the file.

2009-01-03  Curtis Gedak  <gedakc@gmail.com>

	* src/Win_GParted.cc: Update copyright year range.

2009-01-02  Curtis Gedak  <gedakc@gmail.com>

	* configure.in: Improved text for libparted not found error message.
	  - Closes GParted bug #565682

2008-12-31  Curtis Gedak  <gedakc@gmail.com>

	* src/Utils.cc: Added e2fsprogs version required for ext4 support.

2008-12-21  Curtis Gedak  <gedakc@gmail.com>

	* src/Utils.cc: Fixed application crash.
	  - GParted would crash when saving details if locale was not set.

2008-12-20  Curtis Gedak  <gedakc@gmail.com>

	* src/ext4.cc: Add flags to create journal and use extent option.

2008-12-18  Curtis Gedak  <gedakc@gmail.com>

	* include/Utils.h,
	  src/GParted_Core.cc,
	  src/Utils.cc: Added support for ext4 file systems.
	  - Closes GParted bug #503112

	* include/ext4.h,
	  include/Makefile.am,
	  src/ext4.cc,
	  src/Makefile.am: Created 2 files to support ext4 operations.
	  - Support for ext4 is planned for version 2.6.28 of the Linux kernel.
	  - e2fsprogs version 1.41.0 or higher is required.

	* include/FS_Info.h,
	  src/FS_Info.cc: Added get_fs_type() method

2008-12-08  Curtis Gedak  <gedakc@gmail.com>

	* include/FS_Info.h,
	  src/FS_Info.cc
	  src/GParted_Core.cc: Reduced FS_Info cache disk reads.

2008-12-07  Curtis Gedak  <gedakc@gmail.com>

	* include/Utils.h,
	  src/Dialog_Partition_New.cc,
	  src.DialogFeatures.cc,
	  src/GParted_Core.cc,
	  src/Utils.cc,
	  src/Win_GParted.cc: Added lvm2 physical volume detection.

2008-12-03  Curtis Gedak  <gedakc@gmail.com>

	* src/Dialog_Partition_Info.cc,
	  src/Win_GParted.cc: Made text by field labels selectable.
	  - Useful for copy/paste of UUID or volume label

	* include/Utils.h,
	  src/Utils.cc: Added text selectable parameter to mk_label()

2008-12-02  Curtis Gedak  <gedakc@gmail.com>

	* configure.in: Append -svn to version for continuing development

2008-11-29  Curtis Gedak  <gedakc@gmail.com>

	* configure.in: gparted-0.4.1
	  ===================================================

	* src/GParted.cc: Removed code to recognize /dev/mapper/* devices.
	  - Too many /dev/mapper/* devices listed (including LVM partitions)
	  - Roll back patch applied on 2008-10-15
	  - Reopens GParted bug #556114

	* include/FS_Info.h,
	  src/FS_Info.cc: Moved common code into new get_device_entry() method.

	* configure.in: Append -svn to version for continuing development

2008-11-28  Curtis Gedak  <gedakc@gmail.com>

	* configure.in: gparted-0.4.0
	  ===================================================

2008-11-20  Curtis Gedak  <gedakc@gmail.com>

	* gparted.desktop.in.in: Added %f to Exec line.
	  - Enables device passing with gnome-desktop-item-launch
	  - Closes GParted bug #561495

2008-11-19  Curtis Gedak  <gedakc@gmail.com>

	* src/Win_GParted.cc: Fixed dangerous copy and paste problem.
	  - Prevent a copied partition from being pasted into an existing
	    partition.

	* src/Win_GParted.cc: Added language length conditional Undo display.
	  - If translated language is relatively long, then
	      split the "Resize/Move" toolbar button text into two lines, and
	      do not display the "Undo" button.
	  - Permits all languages to see a full toolbar at default window size.
	  - Closes GParted bug #561068

2008-11-18  Curtis Gedak  <gedakc@gmail.com>

	* include/Partition.h,
	  include/Utils.h,
	  src/Dialog_Partition_Info.cc,
	  src/Dialog_Partition_New.cc,
	  src/Dialog_Partition_Resize_Move.cc,
	  src/ext2.cc,
	  src/ext3.cc,
	  src/fat16.cc,
	  src/fat32.cc,
	  src/GParted_Core.cc,
	  src/jfs.cc,
	  src/linux_swap.cc,
	  src/ntfs.cc,
	  src/OperationCheck.cc,
	  src/reiserfs.cc,
	  src/TreeView_Detail.cc,
	  src/Win_GParted.cc,
	  src/xfs.cc: Fixed incorrect spelling of filesystem and mountpoint.

	* src/DialogFeatures.cc: Added translator comment.
	  - Renamed button to improve clarity of meaning.
	  - Closes GParted bug #561350

2008-11-14  Curtis Gedak  <gedakc@gmail.com>

	* include/DialogFeatures.h,
	  src/DialogFeatures.cc: Improved dialog readability.
	  - Changed title Features to File System Support.
	  - Renamed button Refresh to Rescan Support.
	  - Created expander for legend and added narrative.
	  - Removed columns detect and read.
	  - Added column for Required Software.
	  - Closes GParted bugs #342682, and #353104

	* include/Utils.h, 
	  src/Utils.cc: Created method get_filesystem_software().

	* src/Win_GParted.cc: Moved menu entry
	- "Gparted->Show Features" moved to "View->File System Support".

2008-11-13  Curtis Gedak  <gedakc@gmail.com>

	* include/FS_Info.h,
	  src/FS_Info.cc,
	  src/GParted_Core.cc,
	  README: Improved read label performance with blkid cached results.
	  - When possible use blkid cached results to determine volume label.

2008-11-12  Curtis Gedak  <gedakc@gmail.com>

	* README: Updated directories and dependencies.

2008-11-11  Curtis Gedak  <gedakc@gmail.com>

	* src/Dialog_Partition_Info.cc,
	  src/GParted_Core.cc:  Added read and display UUID.

	* include/Partition.h,
	  src/Partition.h: Added UUID.

	* include/FS_Info.h,
	  include/Makefile.am,
	  src/FS_Info.cc,
	  src/Makefile.am:  Created class to read file system UUIDs.

2008-11-10  Curtis Gedak  <gedakc@gmail.com>

	* src/fat16.cc,
	  src/fat32.cc:  Enforced fat compliant label before writing.
	  - Trimmed trailing spaces from label upon reading.

	* include/Utils.h,
	  src/Utils.cc:  Created new method fat_compliant_label().
	  - Limit volume label to 11 characters.

2008-11-08  Curtis Gedak  <gedakc@gmail.com>

	* include/ext2.h,
	  include/ext3.h,
	  include/fat16.h,
	  include/fat32.h,
	  include/hfs.h,
	  include/hfsplus.h,
	  include/jfs.h,
	  include/linux_swap.h,
	  include/ntfs.h,
	  include/reiser4.h,
	  include/reiserfs.h,
	  include/xfs.h,
	  include/ufs.h: Renamed set_label and get_label methods.

	* src/ext2.cc,
	  src/ext3.cc,
	  src/fat16.cc,
	  src/fat32.cc,
	  src/hfs.cc,
	  src/hfsplus.cc,
	  src/jfs.cc,
	  src/linux_swap.cc,
	  src/ntfs.cc,
	  src/reiser4.cc,
	  src/reiserfs.cc,
	  src/ufs.cc,
	  src/xfs.cc: Renamed set_label and get_label methods.
	
	* include/FileSystem.h,
	  include/GParted_Core.h,
	  include/Utils.h: Renamed set_label and get_label methods.
	
	* src/DialogFeatures.cc
	  src/FileSystem.cc,
	  src/GParted_Core.cc: Renamed set_label and get_label methods.
	  - Renamed set_label to write_label, renamed get_label to read_label.
	  - Preference is to reserve set/get for object attribute handling.

2008-11-05  Curtis Gedak  <gedakc@gmail.com>

	* src/Dialog_Partition_Copy.cc: Fixed copy and paste partition problem.
	  - Resolved destination partition too small on copy and paste.
	  - Added exclusion for primary partitions at the start of the disk.
	  - Closes GParted bug #556058

2008-11-04  Curtis Gedak  <gedakc@gmail.com>

	* src/Dialog_Progress.cc,
	  src/GParted_Core.cc,
	  src/Win_GParted.cc: Fixed some spelling mistakes

	* src/Win_GParted.cc: Added label update for paste to existing partition

2008-10-31  Curtis Gedak  <gedakc@gmail.com>

	* src/reiser4.cc,
	  README: Changed get_label() to use vol_id instead of debugfs.reiser4

	* src/GParted_Core.cc: Changed thread status messages to be unique

2008-10-30  Curtis Gedak  <gedakc@gmail.com>

	* src/GParted_Core.cc: Added translator comments
	  - Removed ellipses from status messages in set_devices()

	* src/Win_GParted.cc: Added thread status message update to pulsebar

	* include/GParted_Core.h,
	  src/GParted_Core.cc: Added set and get thread status message methods
	  - Added thread status message updates in set_devices()

2008-10-28  Curtis Gedak  <gedakc@gmail.com>

	* src/GParted_Core.cc: Remove std:: prefix from llabs()
	  - Fixes problem where gparted failed to build in debian on arm,
	    armel, mips, and mipsel (debian bug#499722)
	  - Thanks to Thiemo Seufer for small patch

	* src/reiser4.cc: Removed warning reading mounted reiser4 volume label
	  - Closes GParted bug #380546

2008-10-24  Curtis Gedak  <gedakc@gmail.com>

	* src/Utils.cc: Increased robustness of get_lang() function
	  - Assists with GParted bug #556965

2008-10-17  Curtis Gedak  <gedakc@gmail.com>

	* src/Dialog_Progress.cc: Converted more words for translation

2008-10-16  Curtis Gedak  <gedakc@gmail.com>

	* src/Dialog_Progress.cc: Added call to get_lang() for lang tags

	* include/Utils.h,
	  src/Utils.cc: Created function get_lang()

	* src/main.cc: Update copyright years

2008-10-15  Curtis Gedak  <gedakc@gmail.com>

	* src/GParted_Core.cc: Enhanced to recognize /dev/mapper/* devices
	  - The move away from libparted device recognition broke
	    recognition of /dev/mapper/* devices.  Problem now fixed.
	  - Thanks to Colin Watson for the patch.
	  - Closes GParted bug #556114

2008-10-14  Curtis Gedak  <gedakc@gmail.com>

	* src/Dialog_Progress.cc: Enhanced detail log to pass as XHTML
	  - gparted_details.htm now passes as XHTML 1.0 Transitional
	    in the validator found at http://validator.w3.org/
	  - Thanks to Markus Elfring for the small patch.
	  - Closes GParted bug #525347

2008-10-08  Curtis Gedak  <gedakc@gmail.com>

	* autogen.sh,
	  HACKING: Changed text CVS to SVN.
	  - Thanks to Martin Capitanio

	* README: Added a dependency.
	  - Thanks to Martin Capitanio

2008-10-06  Curtis Gedak  <gedakc@gmail.com>

	* Makefile.am: Removed m4 from EXTRA_DIST
	  - 'make distcheck' fails if m4 directory is in EXTRA_DIST

2008-09-26  Curtis Gedak  <gedakc@gmail.com>

	* autogen.sh: Added check for gnome-doc-utils.make

2008-09-25  Curtis Gedak  <gedakc@gmail.com>

	* src/GParted_Core.cc,
	  src/linux_swap.cc,
	  src/OperationResizeMove.cc,
	  src/xfs.cc: Add translator comments and fix spelling mistake.

2008-09-24  Curtis Gedak  <gedakc@gmail.com>

	* src/Dialog_Progress.cc: Added proper HTML start and finish.
	  - gparted_details.htm now passes as HTML 4.0 Transitional
	    in the validator found at http://validator.w3.org/
	  - Closes GParted bug #525347

2008-09-22  Curtis Gedak  <gedakc@gmail.com>

	* configure.in,
	  src/Win_GParted.cc,
	  src/Makefile.am,
	  makefile.am: Enabled GParted to use themed app icon (Tango theme).
	  - Thanks to Sebastian Kraft for designing the icons.
	  - Thanks to Michael Monreal for the small patch to make use of themed
	    app icon from hicolor.
	  - Closes GParted bug #350894

	* data/Makefile.am,
	  data/icons/Makefile.am,
	  data/icons/hicolor_apps_16x16_gparted.png,  
 	  data/icons/hicolor_apps_22x22_gparted.png,
	  data/icons/hicolor_apps_24x24_gparted.png,
	  data/icons/hicolor_apps_32x32_gparted.png,
	  data/icons/hicolor_apps_48x48_gparted.png,
	  data/icons/hicolor_apps_scalable_gparted.svg,
	  data/icons/svg/gparted.svg: Created files.
	  - Icons by Sebastian Kraft
	  - Small patch by Michael Monreal.

	* data,
	  data/icons,
	  data/icons/svg:  Created directories.
	  - Small patch by Michael Monreal.

	* pixmaps,
	  pixmaps/Makefile.am,
	  pixmaps/gparted.png: Removed directory and files.
	  - This directory and its contents are no longer required - see above notes.

2008-09-15  Curtis Gedak  <gedakc@gmail.com>

	* configure.in,
	  Makefile.am: Added --disable-doc flag to prevent building help docs

	* README: Added note about --disable-doc flag

2008-09-13  Curtis Gedak  <gedakc@gmail.com>

	* configure.in: Append -svn to version for continuing development

2008-09-12  Curtis Gedak  <gedakc@gmail.com>

	* configure.in: gparted-0.3.9
	  ===================================================

	* src/GParted_Core.cc: Added pattern recognition for HP RAID drives
	  - E.g., device = /dev/cciss/c0d0, partition = /dev/cciss/c0d0p1

2008-09-04  Curtis Gedak  <gedakc@gmail.com>

	* include/Utils.h,
	  src/Utils.cc: Fixed display problem with percent complete messages.
	  - Some commands use cursor repositioning to display progress.
	    This cursoring does not display well within the tracking of
	    gparted details.  A newly added function will cleanup the output.
	  - Closes GParted bug #532574

2008-09-01  Curtis Gedak  <gedakc@gmail.com>

	* COPYING-DOCS: Added new file containing GFDL 1.2 license
	  - Closes GParted bug #550047

2008-08-06  Curtis Gedak  <gedakc@gmail.com>

	* src/GParted_Core.cc: Enhanced optimal block size copy algorithm.
	  - Changed algorithm to try all block size possibilities instead of
	    stopping as soon as next larger block size took longer to copy than
	    the prior block size.  Due to anomalies in benchmark times, the
	    previous algorithm would favour smaller block sizes.
	  - Closes GParted bug #546423

	* README: Updated with new directories for GParted Manual

2008-08-05  Curtis Gedak  <gedakc@gmail.com>

	* src/Win_GParted.h: Created show_help_dialog function to display help

	* src/Win_GParted.cc: Created show_help_dialog function to display help
	  - Replaced help dialog box with call to show_help_dialog function.
	    Initial concept for the show_help_dialog function comes from the
	    file-roller project.  The advantage to this code is that it does
	    not create a dependency on libgnomeui.
	  - Changed menu Help->Help CTRL+H to help->Contents F1

	* src/Makefile.am: Added GPARTED_DATADIR define to INCLUDES

	* autogen.sh: Added USE_COMMON_DOC_BUILD
	
	* configure.in: Added help and m4 directories, and GNOME_DOC_INIT
	
	* Makefile.am: Added help and m4 directories, and gnome-doc-utils

	* help: Created directory for future GParted Manual

	* m4: Created directory as advised for gnome-doc-util
	  - *********************************
	    Prepare for future GParted Manual
	    *********************************
	  - See "Migrating to GNOME Documentation Build Utilities"
	  http://library.gnome.org/devel/gnome-doc-make/0.12/migrating.html.en

2008-07-27  Curtis Gedak  <gedakc@gmail.com>

	* gparted.in: Added additional check for hald daemon if hal-lock exists
	  - Closes GParted bug #543730

2008-07-26  Curtis Gedak  <gedakc@gmail.com>

	* configure.in: Removed full path from gksu
	  - gksu is only used in desktop file if it is found in path

2008-07-25  Curtis Gedak  <gedakc@gmail.com>

	* src/hfs.cc: Rewrote get_label to use vol_id for hfs file system
	  - Reason:  not all hfsutils packages include hfsck (e.g. Ubuntu 7.10)

	* src/hfsplus.cc: Enhanced support for hfsplus file system
	  - Added create, get_label, and check_repair functionality
	  - Additional feature support is provided by the hfsprogs package

2008-07-23  Curtis Gedak  <gedakc@gmail.com>

	* gparted.desktop.in.in,
	  Makefile.am,
	  configure.in: Added check for gksu for gparted menu invocation.
	  - Permits GNU/Linux distributions with gksu to prompt for root
	    password when invoked from the menu, while not hampering
	    distributions without gksu.
	  - Partially addresses bug 318557 for some GNU/Linux distributions

	* configure.in: Append -svn to version for continuing development

2008-07-10  Curtis Gedak  <gedakc@gmail.com>

	* configure.in: gparted-0.3.8
	  ===================================================

2008-06-18  Curtis Gedak  <gedakc@gmail.com>

	* src/OperationResizeMove.cc: Fixed incorrectly recognized move/resizes
	  - Re-wrote logic to determine proper partition move / resize operation
	  - Closes GParted bug #438570

2008-06-15  Curtis Gedak  <gedakc@gmail.com>

	* src/GParted_Core.cc: Enhanced snap-to-cylinder math
	  - Improved math for rounding starting sector to cylinder
	    boundaries for logical partitions, and the first primary
	    partition for MBR and GPT partition tables.
	  - Closes GParted bugs #432525, and #525137

	* include/Dialog_Base_Partition.h,
	  src/Dialog_Base_Partition.cc,
	  include/Dialog_Partition_New.h,
	  src/Dialog_Partition_New.cc: Migrated checkbutton.
	  - Moved "Round to cylinders" checkbutton from partition new
	    dialog to partition base dialog so that it may be used
	    by all inheritors (e.g., New, Copy, and Resize/Move).

2008-06-12  Curtis Gedak  <gedakc@gmail.com>

	* src/GParted_Core.cc: Changed 3 grammatical errors to dashes.
	  - Closes GParted bug #533637

2008-06-10  Curtis Gedak  <gedakc@gmail.com>

	* src/main.cc: Changed wording of root privilege required warning.
	  - Closes GParted bug #534072

	* src/Dialog_Progress.cc: Added proper PO file plural handling.
	  - fixed a few spelling errors.

	* src/Win_GParted.cc: Added proper PO file plural handling.
	  - Closes GParted bug #315291

2008-05-10  Curtis Gedak  <gedakc@gmail.com>

	* README: Removed absolute requirement for hal-lock.

	* gparted.in: Enhanced script to use hal-lock only if it exists
	  - This removes the absolute requirement for hal-lock and
	    enables systems without HAL to use GParted.

	* configure.in: Removed check for hal-lock program (added 2008-05-08)

2008-05-08  Curtis Gedak  <gedakc@gmail.com>

	* README: Added note about hal-lock and HAL requirement

	* configure.in: Added check for hal-lock program

	* src/GParted_Core.cc: Added parse devices from /proc/partitions
	  - If /proc/partitions doesn't exist then use ped_device_probe_all
	  - Closes GParted bugs #351753, and #453555

2008-05-06  Curtis Gedak  <gedakc@gmail.com>

	* gparted.in: Fixed problem with command line devices being ignored
	  - This problem was introduced in version 0.3.7

	* configure.in: Append -svn to version for continuing development

2008-04-29  Curtis Gedak  <gedakc@gmail.com>

	* configure.in: gparted-0.3.7
	  ===================================================

2008-04-26  Curtis Gedak  <gedakc@gmail.com>

	* gparted.desktop.in.in: Removed gksu from exec line
	  - gksu is not supported in all major GNU/Linux distributions
	    (Fedora for one).
	  - Closes GParted bug #529622
	  - Reopens GParted bug #381557

	* README: Enhanced INSTALL information
	  - Closes GParted bug #529625

2008-04-25  Curtis Gedak  <gedakc@gmail.com>

	* README: Updated to better align with GNU coding standards

2008-04-23  Curtis Gedak  <gedakc@gmail.com>

	* README: Updated installation notes and distribution notes

2008-04-21  Curtis Gedak  <gedakc@gmail.com>

	* src/Dialog_Base_Partition.cc,
	  src/Dialog_Partition_New.cc: Fixed 1 TB partition limit bug
	  - Fixed problem with spinbutton math that limited partition size
	    to a maximum just less than 1 TB.
	    New limit is just less than 1024 TB.
	  - Closes GParted bug #524948

	* Makefile.am: Enhanced for new calling script gparted
	  - Added gparted script installation in sbin
	  - Added installdir parsing for gparted and gparted.desktop

	* gparted.desktop.in: Renamed gparted.desktop.in
	                           to gparted.desktop.in.in
	  - This is to permit installdir parsing in gparted.desktop

	* gparted.in: Added new calling script gparted
	  - This is to permit using hal-lock to acquire device
	    locks to prevent automounting prior to executing gpartedbin.
	  - Closes GParted bug #324220
	  - Thanks to Deji Akingunola for the hal-lock invocation idea

	* src/GParted_Core.cc: Removed gparted-disable-automount.fdi handling
	  - Removed signal handler patch from 2008-01-28
	  - Removed initial work on disabling automount from 2006-08-09
	  - /usr/share/hal/fdi/policy/gparted-disable-automount.fdi is
	    no longer created.
	  - This is to permit preferred alternative of using hal-lock.

	* src/Makefile.am: Renamed gparted binary to gpartedbin
	  - This is to permit a calling script to be named gparted.

2008-04-20  Curtis Gedak  <gedakc@gmail.com>

	* src/Dialog_Disklabel.cc: Improved ability to translate text
	  - Closes GParted bug #529063

2008-04-18  Curtis Gedak  <gedakc@gmail.com>

	* src/Dialog_Disklabel.cc,
	  src/Win_GParted.cc: Changed device menu item and description
	  - Menu text changed from "set disklabel..."
	    to "Create Partition Table..."
	  - Significant change in the wording to increase awareness that
	    setting a disk label (creating a partition table) will
	    ERASE ALL DATA on the disk.
	  - Removed double confirmation of partition table creation
	  - Closes GParted bug #422070 

2008-04-14  Curtis Gedak  <gedakc@gmail.com>

	* Makefile.am,
	  configure.in,
	  doc/,
	  doc/Makefile.am,
	  doc/gparted.8: Added manual page documentation
	  - Command line response for GParted bug #329584

2008-04-09  Curtis Gedak  <gedakc@gmail.com>

	* gparted.desktop.in: Updated to align with standards
	  - Adjusted entries to align with desktop entry specification
	    - Closes GParted bug #518975
	  - Added gksu to Exec line in front of gparted
	    - Closes GParted bug #381557
	  - Updated to align with Human Interface Guidelines
	    - Closes GParted bug #440012

	* src/Makefile.am: Moved gparted install to sbin instead of bin
	  - Closes GParted bug #509495

	* MAINTAINERS: Added ldetrogoff

2008-04-08  Curtis Gedak  <gedakc@gmail.com>

	* src/Dialog_Partition_Label.cc: Increase dialog box size

	* src/linux_swap.cc: Enhanced to work with different versions of vol_id

2008-04-07  Marcel Telka  <marcel@telka.sk>

	* MAINTAINERS: New file (bug #524276).

2008-04-03  Curtis Gedak  <gedakc@gmail.com>

	* configure.in,
	  autogen.sh,
	  po/LINGUAS: Enhanced to use po/LINGUAS for LINGUAS
	  - Closes GParted bug #467459
	  - Thanks to Christian Persch for this patch

2008-04-01  Curtis Gedak  <gedakc@gmail.com>

	* Makefile.am: Removed distclean target enhancements from 2008-02-05
	  - use "make dist" to create a distribution archive file

2008-03-31  Curtis Gedak  <gedakc@gmail.com>

	* src/Utils.cc: Ensure hour portion of time is always displayed
	  - Closes GParted bug #438590

	* src/TreeView_Detail.cc: Removed text_color hard coding
	  - Removed hard coding of Partition and Filesystem text_color
	    which was based on if partition was TYPE_UNALLOCATED.
	  - Removed hard coding of Mount text_color which was based
	    on if partition was busy.  Lock symbol provides this indicator.
	  - Closes GParted bug #413810

	* src/reiser4.cc,
	  src/reiserfs.cc: Tighten get_label regular expression

2008-03-26  Curtis Gedak  <gedakc@gmail.com>

	* configure.in: gparted-0.3.6
	  ===================================================

2008-03-25  Curtis Gedak  <gedakc@gmail.com>

	* configure.in: Added 'sk' to ALL_LINGUAS.
	  Also added 'ko' and 'si' to ALL_LINGUAS.
	
2008-03-21  Curtis Gedak  <gedakc@gmail.com>

	* include/OperationLabelPartition.h,
	  src/OperationLabelPartition.cc: Updated to display label change
	  - Label change now shown prior to apply button being pressed

	* src/Win_GParted.cc:  Added partition duplication for use with UNDO

	* src/Dialog_Partition_Label.cc: Changed label ADD button to OK
	  - Added trim function to get_new_label()

2008-03-19  Curtis Gedak  <gedakc@gmail.com>

	* src/linux_swap.cc: Fill in get_label() functionality using vol_id

	* src/reiser4.cc: Enhanced get_label()
	  - Read partition label up to the first exclamation mark.
	    The exclamation mark is displayed by debugfs.reiser4 when
	    the label is the maximum length of 16 characters.

	* src/ext2.cc,
	  src/ext3.cc,
	  src/fat16.cc,
	  src/fat32.cc,
	  src/hfs.cc,
	  src/jfs.cc,
	  src/linux_swap.cc,
	  src/ntfs.cc,
	  src/reiser4.cc,
	  src/reiserfs.cc,
	  src/xfs.cc: Added partition labelling on filesystem creation

2008-03-18  Curtis Gedak  <gedakc@gmail.com>

	* include/Dialog_Partition_New.h,
	  src/Dialog_Partition_New.cc: Added partition label entry text box

	* src/jfs.cc,
	  src/ntfs.cc,
	  src/reiserfs.cc,
	  src/xfs.cc: Filled in set_label() functionality

2008-03-12  Curtis Gedak  <gedakc@gmail.com>

	* src/fat16.cc,
	  src/fat32.cc: Filled in set_label() functionality

	* src/Win_GParted.cc: trim partition label after input accepted

	* include/Utils.h,
	  src/Utils.cc: Added trim() function
	  - removes leading and trailing whitespace from a string

2008-03-06  Curtis Gedak  <gedakc@gmail.com>

	* include/DialogFeatures.h,
	  src/DialogFeatures.cc: Changed Read_Label to Label

2008-03-05  Curtis Gedak  <gedakc@gmail.com>

	* include/ext2.h,
	  include/ext3.h,
	  include/fat16.h,
	  include/fat32.h,
	  include/hfs.h,
	  include/hfsplus.h,
	  include/jfs.h,
	  include/linux_swap.h,
	  include/ntfs.h,
	  include/reiser4.h,
	  include/reiserfs.h,
	  include/ufs.h
	  include/xfs.h,
	  include/filesystem.h,
	  include/utils.h,
	  src/ext2.cc,
	  src/ext3.cc,
	  src/fat16.cc,
	  src/fat32.cc,
	  src/hfs.cc,
	  src/hfsplus.cc,
	  src/jfs.cc,
	  src/linux_swap.cc,
	  src/ntfs.cc,
	  src/reiser4.cc,
	  src/reiserfs.cc,
	  src/ufs.cc
	  src/xfs.cc: Added set_label() function stub
	  - Filled in set_label for ext2 and ext3
	
	* include/Makefile.am,
	  include/GParted_Core.h,
	  include/Operation.h,
	  include/OperationLabelPartition.h,
	  src/Makefile.am,
	  src/GParted_Core.cc,
	  src/OperationLabelPartition.cc: Created operation label partition

2008-03-04  Curtis Gedak  <gedakc@gmail.com>

	* include/Makefile.am,
	  include/Win_GParted.h,
	  include/Dialog_Partition_Label.h,
	  src/Makefile.am,
	  src/Win_GParted.cc,
	  src/Dialog_Partition_Label.cc: Created partition label menu and dialog

	* src/xfs.cc: Enhanced to read xfs labels while filesystem is mounted
	  - Thanks to Gerald Neil for the tip about adding the -r flag.

2008-02-19  Curtis Gedak  <gedakc@gmail.com>

	* src/Dialog_Progress.cc: Fixed two English spelling mistakes 

	* src/Dialog_Partition_Info.cc: Moved display of label closer to path

	* src/fat16.cc,
	  src/fat32.cc: Changed to use new MTools temporary file functions

	* include/Utils.h,
	  src/Utils.cc: Added create_mtoolsrc_file() and
	    delete_mtoolsrc_file() to handle MTools temporary file

2008-02-16  Curtis Gedak  <gedakc@gmail.com>

	* src/Dialog_Partition_Info.cc: Added display of partition label

2008-02-14  Curtis Gedak  <gedakc@gmail.com>

	* src/Win_GParted.cc: Added my name to list of authors

	* src/ext2.cc,
	  src/ext3.cc,
	  src/fat16.cc,
	  src/fat32.cc,
	  src/jfs.cc,
	  src/ntfs.cc,
	  src/reiser4.cc,
	  src/reiserfs.cc,
	  src/xfs.cc: Fixed bug in get_label()
	  - now returns full text of label for labels that include spaces.

	* include/Utils.h,
	  src/Utils.cc: Added regexp_label() to extract partition label text

2008-02-12  Curtis Gedak  <gedakc@gmail.com>

	* src/fat16.cc,
	  src/fat32.cc: Added get_label() support using mtools mlabel command

2008-02-07  Curtis Gedak  <gedakc@gmail.com>

	* src/GParted_Core.cc (GParted_Core::init_maps): Fix max path length
	  - GParted would crash if realpath() returned more than 255 chars
	  - Closes GParted bug #481768
	  - Thanks to Deji Akingunola for this suggestion.
	  (GParted_Core::read_mountpoints_from_file): Extend length of C strings
	  - Change C strings from 255 to 4096 (current PATH_MAX in limits.h)
	    to reduce chance of buffer overrun.
	  - PATH_MAX name not used because manpage appears to indicate
	    inconsistencies.

2008-02-05  Curtis Gedak  <gedakc@gmail.com>

	* Makefile.am: Enhanced distclean target
	  - Now removes autom4te.cache, .svn, and .cvsignore
	  - Thanks to Francois Dupoux for this suggestion.

2008-02-01  Curtis Gedak  <gedakc@gmail.com>

	* configure.in: gparted-0.3.5
	  ===================================================

2008-02-01  Curtis Gedak  <gedakc@gmail.com>

	* gparted.desktop.in: Rolled back HIG code changes to 0.3.3
	  - Reopens bugs #440012, and #381557
	  - Rolls back debian patch 01_fix-desktop.patch
	  - moved config.in: gparted-0.3.5 entry from 2008-01-30
	    to 2008-02-01 to improve readability of ChangeLog entries

2008-01-29  Curtis Gedak  <gedakc@gmail.com>

	* gparted.desktop.in: Updated to align with GNOME Human
	                      Interface Guidelines 2.0
	  - Closes bug #440012

2008-01-28  Curtis Gedak  <gedakc@gmail.com>

	* src/Win_GParted.cc: Applied debian patch 04_Win_GParted.cc.diff
	  - Fixed "crashes when rescanning devices after any operation",
	    closes: #446522. Patch by Denis Sirotkin <fechiny@gmail.com>

	* src/GParted_Core.cc: Applied debian patch
	                       03_fdi_robustification.patch
	  - Install a signal handler for cleaning up the automount disabling
	     FDI, so that it will be cleaned up on program crashes, too.
	  - Use storage.automount_enabled_hint instead of volume.ignore for the
	    automount disabling FDI. That way, the new drives will at least
	    appear in GNOME and the user can mount them manually.
	  - Patch by Martin Pitt <martin.pitt@ubuntu.com>
	  - LP: #134712
	  - Closes: 434268

	* include/Utils.h,
	  include/OperationDetail.h: Applied debian patch
	                             02_fix-build-failure-with-g++-4.3.patch
	  - Fix build failures with g++-4.3. LP: #138584

	* gparted.desktop.in: Applied debian patch 01_fix-desktop.patch
	  - don't specify the encoding that's deprecated, update the categories
	    and set the translation domain (LP: #145202)
	  - Changes name to `Partition Editor`
	  - Enables gksu to run gparted with

2007-10-14  Yannig Marchegay  <yannig@marchegay.org>

	* configure.in: Added 'oc' to ALL_LINGUAS.

2007-08-10  Inaki Larranaga Murgoitio  <dooteo@zundan.com>

	* configure.in: Added 'eu' to ALL_LINGUAS.

2007-02-25 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* configure.in: gparted-0.3.4
	  ===================================================

2007-01-07 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: added a check to see wether a device is 'real'
	  or not. (thanks to Fran�ois Dupoux for the patch)

2006-12-19  Theppitak Karoonboonyanan  <thep@linux.thai.net>

	* configure.in: Added 'th' (Thai) to ALL_LINGUAS.

2006-12-08 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Device.h,
	  include/Dialog_Base_Partition.h,
	  src/Dialog_Base_Partition.cc: replaced 'long' with 'Sector' to
	  prefent overflows with really large devices.

2006-12-06 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* configure.in: gparted-0.3.3
	  ===================================================

2006-12-05 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: fixed 'Could not detect file system.' error
	  with fat and hfs filesystem when performing a move to the left. 
	  (thanks to 'the Bogerds' for borrowing me an usbstick ;) )

2006-12-01 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* configure.in: gparted-0.3.2
	  ===================================================

2006-12-01 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Partition.cc: fixed issue with overloaded ==

2006-12-01 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Dialog_Progress.h,
	  include/GParted_Core.h,
	  src/Dialog_Progress.cc,
	  src/GParted_Core.cc,
	  src/Win_GParted.cc: added libparted version string to details
	  export.

2006-11-26 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* src/Win_GParted.cc: fixed bug with copying partition to a disk
	  without disklabel. Also added some FIXME's.
	
2006-11-26 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Makefile.am,
	  include/Operation.h,
	  include/Win_GParted.h,
	  src/GParted_Core.cc,
	  src/Makefile.am,
	  src/Win_GParted.cc,
	  include/OperationCheck.h (new),
	  src/OperationCheck.cc (new): added 'check' operation. The
	  functionality was already there, but it was not possible yet to
	  activate it from the gui.

2006-11-25  Chao-Hsiung Liao  <j_h_liau@yahoo.com.tw>
	
	* configure.in: Add "zh_HK" to ALL_LINGUAS.

2006-11-24 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: fixed rare bug with modifying logical
	  partitions. (#368199)

2006-11-23 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* configure.in: fixed issue with libparted detection (#330776)
	* src/GParted_Core.cc: add FIXME

2006-11-08  Matic Zgur  <mr.zgur@gmail.com>

	* configure.in: Added sl (Slovenian) to ALL_LINGUAS.

2006-11-01  Kjartan Maraas  <kmaraas@gnome.org>

	* configure.in: Added nb to ALL_LINGUAS.

2006-10-22 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Dialog_Progress.cc: gtk+-2.10 seems to return the last valid
	  iterator if get_iter is executed with an invalid treepath. This is
	  different from gtk+-2.8 and gave some problems in the
	  operationdetails. I added a check to make it work in both
	  situations.

2006-10-01 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: only add mountpoints and paths if they exist
	* src/reiser4.cc: don't show '<none>' if volumelabel is empty

2006-10-01 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core: Replaced std::abs with llabs (see #357691)
	* src/hfs.cc,
	  src/xfs.cc: added support for reading of volumelabel
	* src/reiserfs.cc: added Fixme

2006-09-26 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* configure.in: Fix libparted detection in case --as-needed flag is
	  passed (#357679)

2006-09-25 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/jfs.cc: added support for reading of volumelabel

2006-09-23 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* include/DialogFeatures.h,
	  src/DialogFeatures.cc: added 'Read Label' info

2006-09-23 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/reiser4.cc
	  src/reiserfs.cc: added support for reading of volumelabel

2006-09-23 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* src/ntfs.cc: added support for reading of volumelabel

2006-09-17 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* added popupmenu to operationslist and did some (higrelated) cleanups

2006-09-16 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/TreeView_Detail.h,
	  src/TreeView_Detail.cc: trivial cleanups

2006-09-16 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/DialogFeatures.cc: higgiefied the dialog a bit (#353104)

2006-09-16 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Win_GParted.h,
	  src/Win_GParted.cc: some small changes to make the GUI more
	  consistent (#353140)

2006-09-14 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* configure.in: changed libpartedcheck a bit. from now on we declare
	  the min. version as variable in one place. This finally closes #330776

2006-09-14 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/ext2.cc,
	  src/ext3.cc: fixed a couple of issues with reading of volumelabels
	  (#338528)
	
2006-09-13 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: finally fixed problem with 'disappearing'
	  devicenodes by using udevsettle (#352744)

2006-09-12 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* added support for reading volumelabels. Atm we only read ext2/3, but
	  the infrastructure for adding the other filesystems is in place.
	  It's simply a matter of finding the right commands and parsing the
	  output. (see #338528 for more info)

2006-09-11 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* configure.in: bumped to gparted-0.3.1
	  ===================================================

2006-09-11 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: show correct statusmessage when performing the
	  readonly test.

2006-09-11 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: reverted back to parted probing after i heard
	  patches to fix some issues with it are underway. (skipping of floppy
	  and cdrom)
	* src/reiser4.cc,
	  src/reiserfs.cc: added --quiet to the fschecks to prevent the
	  detailswindow from dying under the load. I should find a solution
	  for that anyway.

2006-09-10 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: display total sector info in copy_filesystem()

2006-09-10 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Dialog_Progress.cc: make sure progressfraction stays between 0.0
	  and 1.0
	* include/GParted_Core.h,
	  src/GParted_Core.cc: implemented rollback in case of failed move of
	  overlapping filesystems. Together with the readonly test moving
	  should be quite save now :)

2006-09-09 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/fat16.cc,
	  src/fat32.cc: return true if filesystem was succesfully modified by
	  dosfsck.

2006-09-09 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Dialog_Progress.h,
	  src/Dialog_Progress.cc: Show number of warnings after all operations
	  are completed. Also urge people to save their details in case of
	  error.

2006-09-09 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Frame_Resizer_Base.h,
	  src/Frame_Resizer_Base.cc,
	  src/Frame_Resizer_Extended.cc,
	  src/GParted_Core.cc: trivial 'breakfast cleanups' :) 

2006-09-08 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/ext2.cc,
	  src/ext3.cc,
	  src/fat16.cc,
	  src/fat32.cc,
	  src/jfs.cc,
	  src/ntfs.cc,
	  src/reiser4.cc,
	  src/reiserfs.cc,
	  src/xfs.cc: be a bit more verbose on error in set_used_sectors()

2006-09-08 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: declared char * buf global, so it can be
	  initialized in copy_blocks(). This is a lot more efficient than
	  initializing it on every copy_block()

2006-09-08 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: skip resize/move of partition/filesystem if
	  there are no changes.

2006-09-08  Pema Geyleg  <pgeyleg@gmail.com>

	* configure.in: Added dz to ALL_LINGUAS

2006-09-07 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* include/Partition.h,
	  src/Partition.cc: added test_overlap()
	* include/GParted_Core.h,
	  src/GParted_Core.cc: perform a readonly testrun before the actual
	  move if destination overlaps source.

2006-09-07 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: parse /proc/partitions to find devices instead
	  of using ped_device_probe_all()

2006-09-06 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* configure.in: finally added a decent check for libparted (see also
	  #330776)

2006-09-04 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* configure.in: bumped to gparted-0.3
	  ===================================================

2006-09-04 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: update ntfsbootsector after first sector has
	  changed. This is necessary to let windows boot correctly afterwards.
	* src/ntfs.cc: added FIXME

2006-09-03 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: simplified algorithm to get remaining time

2006-09-03 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: check if dest >= src before starting a copy

2006-09-03 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: fixed an issue with copying to unallocated
	  space. It works fine now, but this entire copy operation breaks
	  consistency a bit. I should take a look at that when i have some
	  more time.

2006-09-03 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: added progressfeedback to Delete()

2006-09-03 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: more fixes related to moving..

2006-09-01 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Win_GParted.cc: small menu changes

2006-08-31 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: fix errormessage

2006-08-31 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: tried to fix a couple of errors with moving to
	  the right with overlap (thanks Larry for hunting ;) )
	  Although everything seems to work well i'm still not sure if
	  everything is 100% ok.
	  I guess everything could use some more testing, which is exactly
	  what i plan to do this weekend :)

2006-08-28 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Win_GParted.cc: usability stuff + trivial fix (#353109, #353111)

2006-08-27 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* include/DialogFeatures.h,
	  src/DialogFeatures.cc: added legend (#353104)
	* src/fat32.cc: added FIXME

2006-08-27 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/ntfs.cc: replaced ntfscluster with ntfsresize (see #350789)

2006-08-27 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* happy 24th birthday Johannes! :^)
	* include/GParted_Core.h,
	  src/GParted_Core.cc: restructured resize_move() to be more robust.
	  This will hopefully tackle a couple of issues which came up during
	  the public testing.

2006-08-25 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: improvements to probe and copy stuff.

2006-08-24 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* src/GParted_Core.cc: use Glib::timer instead of std::time stuff for
	  the probing, this is more accurate since the resolution is much
	  higher (microseconds instead of seconds)

2006-08-24 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/OperationDetail.cc: catch markup exceptions
	* src/Utils.cc: cleanups 

2006-08-21 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Utils.h,
	  src/Utils.cc: added format_time()
	* include/OperationDetail.h,
	  src/OperationDetail.cc: keep track of elapsed time between
	  STATUS_EXECUTE and STATUS_[ERROR|SUCCES]
	* include/Dialog_Progress.h,
	  src/Dialog_Progress.cc: show elapsed time in the details per (sub)
	  process
	* src/GParted_Core.cc: use Utils::format_time() 

2006-08-21 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/FileSystem.cc: added nice -n 19, so that all extensive
	  filesystemoperations will be 'nice' :)
	* src/OperationDetail.cc,
	  src/Utils.cc: cleanups 

2006-08-20 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Dialog_Progress.cc: enabled set_do_overwrite_confirmation() for
	  the detailsfile. 
	* configure.in: raised gtkmm dependency from 2.6 to 2.8

2006-08-20 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Win_GParted.h,
	  src/Win_GParted.cc: replaced hardcoded menu and toolbar indices with
	  variables. This is far more flexible and reliable.

2006-08-20 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: fixed some issues with combi move+shrink on
	  fat* and hfs* filesystems. 
	  Also call wait_for_node() from commit() if 'node' was provided.

2006-08-20 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Dialog_Partition_Resize_Move.cc: due to some restrictions it was
	  no longer possible to shrink swap filesystems. fixed.

2006-08-20 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/linux_swap.cc: small fix with moving of linux-swap (which seems
	  pretty useless to me :^) )

2006-08-20 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* changed progressfeedbackhandling a bit. Because this affected
	  OperationDetail i had to make changes in almost every file.

2006-08-16 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: added 'time remaining' to progressfeedback.

2006-08-15 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: created set_progress_info() (i actually planned
	  on adding some time remaining stuff, but xfiles is waiting ;) )

2006-08-13 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: fixed small issue with lp_partition ->geom
	  stuff sometimes losing values when going out of scope.

2006-08-13 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: couple of cleanups in operationhandling and
	  initalizing of p_filesystem.

2006-08-09 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Makefile.am: small fix to pass 'make distcheck'

2006-08-09 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: did some work on disabling of automounting of
	  removable drives. The current method is not entirely to my liking
	  but it seems to work.

2006-08-08 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* src/Dialog_Partition_Resize_Move.cc: fixed small issue with
	  shrinking of a new (virtual) partition

2006-08-08 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* implemented some stuff to find a good blocksize to use for
	  copy/move. Actually i'm not really happy with it, because probing
	  seems suboptimal, but it's better than nothing. As soon as i have
	  some time i should do some research on the subject to find a better
	  solution.
	  
2006-08-01 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Win_GParted.h,
	  src/Win_GParted.cc: construct operations in the activate*()
	  functions instead of in Add_Operation(). This approach allows for
	  more customization of operations.

2006-08-01 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: made set_partition_type() a bit more verbose
	  and did some cleanups.

2006-08-01 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* include/Partition.h,
	  src/Partition.cc: added get_sector()
	* src/GParted_Core.cc: use new Partition::get_sector()

2006-08-01 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Dialog_Partition_Copy.cc,
	  src/GParted_Core.cc,
	  src/Win_GParted.cc: fixed some issues when manipulating a just
	  copied partition. (see also #349513)

2006-07-30 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* improved errorhandling a bit. At the initialscan we store
	  errors/warnings now in a list per partition and show the in the
	  partitioninfo dialog.
	  While executing an operation we collect all libparted exceptions in
	  a list and attach this list to the operationdetails when everything
	  is done.

2006-07-29 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* renamed some enums

2006-07-29 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: fixed a couple of small errors in the
	  copy algorithm (which is closely related to moving)

2006-07-29 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: fixed a couple of small errors in the
	  move algorithm

2006-07-29 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* fixed Pango markup problems in operationdetails
	* restructured OperationDetail
	* renamed some enums for improved readability of the source

2006-07-23 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/FileSystem.h,
	  include/GParted_Core.h,
	  src/FileSystem.cc,
	  src/GParted_Core.cc,
	  src/ext2.cc,
	  src/ext3.cc,
	  src/ntfs.cc,
	  src/reiserfs.cc: removed cylindersize buffering during resize from
	  the filesystems. It is not needed anymore now we calculate the new
	  position before calling this.
	  Also added some extra progressfeedback in the core

2006-07-23 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: more work on moving/resizing sequence

2006-07-23 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: fixed issue with resize/move of extended
	  partitions

2006-07-23 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* src/Win_GParted.cc: added FIXME:
	* include/GParted_Core.h,
	  src/GParted_Core.cc,
	  src/fat32.cc: decoupled libparted partition and filesystemresizing.
	  This resulted in a much more consistent core. This also affected
	  several other aspects of resizing/moving in a positive way.

2006-07-20 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: FIXME business
	* src/Win_GParted.cc: only snap to cylinder if operation is != DELETE
	  or FORMAT

2006-07-20 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc,
	  src/Win_GParted.cc: perform some checks before adding a new
	  operation to the list.
	* src/Partition.cc: made get_length() a bit safer

2006-07-19 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Dialog_Progress.cc: added FIXME
	* src/GParted_Core.cc: removed FIXME

2006-07-19 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Dialog_Progress.h,
	  include/Operation.h,
	  src/Dialog_Progress.cc,
	  src/GParted_Core.cc: show warning in progressfeedback if a certain
	  action is n/a. Of course we only allow these actions if the results
	  are non-lethal.

2006-07-19 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* enabled move support for all the filesystems. Also made some small
	  changes to the logic which determines if copy is allowed.

2006-07-19 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: added some progressfeedback 

2006-07-19 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/xfs.cc: fixed potential crasher in read algorithm (#347914)

2006-07-18 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: worked a bit on progressfeedback..
	* include/Partition.h: added FIXME
	
2006-07-17 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Win_GParted.cc,
	  include/GParted_Core.h,
	  src/GParted_Core.cc: implemented snap to cylinder algorithm.
	  Although the algorithm is very simple, it seems to work perfectly.
	  However, some additional testing is required.

2006-07-11 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* lots of fixes and improvements (mostly move-related)

2006-06-20 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: some more work on the order of operations when
	  performing a move (made use of maximize_filesystem() ).

2006-06-21  Raivis Dejus  <orvils@gmail.com>

	* configure.in: Added Latvian 'lv' entry.

2006-06-20 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: finalized the order of operations when
	  performing a move.

2006-06-18 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: use new copy_block() in copy_filesystem()

2006-06-18 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: renamed resize_partition to
	  resize_move_partition to better reflect its functionality.

2006-06-18 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: did more work on moving

2006-06-18 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc,
	  src/Win_GParted.cc: some more cleanups, should be finished now :)

2006-06-17 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* restructured the core a bit, over time it had become very messy.

2006-06-17 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* more cleanups in the core and the fs'es (these changelogs are
	  getting boring ;^) )

2006-06-17 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* cleanups in the core and the fs'es (resize)

2006-06-17 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* cleanups in the core and the fs'es (check/repair)

2006-06-17 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* src/GParted_Core.cc: use new create_filesystem() in format()

2006-06-17 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* cleanups in the core and the fs'es (create)

2006-06-04 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: removed 'EXPERIMENTAL' from move-message to
	  prevent incorrect translations.

2006-05-31 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc,
	  src/ext2.cc: added movesupport, atm in experimental state and needs
	  lots of cleaning. only enabled for ext2, but should work for all
	  filesystems.
	* src/DialogFeatures.cc: added alternating rowcolours (see #342682)

2006-05-27 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Dialog_Partition_Copy.h,
	  include/GParted_Core.h,
	  include/OperationCopy.h,
	  include/Win_GParted.h,
	  src/Dialog_Partition_Copy.cc,
	  src/GParted_Core.cc,
	  src/OperationCopy.cc,
	  src/Win_GParted.cc: made blocksize settable by the user.

2006-05-26 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: fixed typo (#343015)

2006-05-25 Arangel Angov <ufo@linux.net.mk>

	* Updated mk.po, Macedonian translation.

2006-05-24 Takeshi AIHANA <takeshi.aihana@gmail.com>

	* configure.in: Added 'ja' (Japanese) to ALL_LINGUAS.

2006-05-23 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* Use ped_device_read and ped_device_write instead of 'dd' to copy
	  filesystems.
	  Modified progressdetails to provide more detailed feedback about a
	  process.
	  Basicly these were all changes to the infrastructure to make the
	  incorporation of the 'move-code' a bit easier. 
	
	  ( sorry, not in the mood to list all affected files ;) 

2006-05-13 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* configure.in: bumped to gparted-0.2.5
	  ===================================================

2006-05-13 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Win_GParted.cc: updated copyrightinfo

2006-05-02 Pawan Chitrakar <pchitrakar@gmail.com>

	* ne.po: Added ne ALL_LINGUAS

2006-04-15 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Win_GParted.cc: hide dialogs after setting new disklabel

2006-04-15 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: creating a new partition on a BSD partitiontable
	  failed, causing a segfault when setting the partitiontype. fixed.

2006-04-05 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Dialog_Partition_Copy.cc: only allow growing of copy if there is
	  grow support for the filesystem.
	* src/reiser4.cc: added support for copying reiser4 filesystems

2006-04-05 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* src/GParted_Core.cc: modified warning
	* src/hfsplus.cc: added support for shrinking and copying hfs+
	  filesystems

2006-04-05 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Dialog_Partition_Resize_Move.cc,
	  src/GParted_Core.cc,
	  src/Win_GParted.cc,
	  src/hfs.cc: added support for shrinking hfs filesystems 

2006-04-05 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/DialogManageFlags.cc: disabled resizing of this dialog
	* include/DialogFeatures.h,
	  include/Makefile.am,
	  include/Win_GParted.h,
	  src/DialogFeatures.cc,
	  src/Makefile.am,
	  src/Win_GParted.cc: renamed 'Filesystems' to 'Features' in the
	  featuredialog to better reflect the actual functionality
	* include/Dialog_Filesystems.h,
	  src/Dialog_Filesystems.cc: removed

2006-04-04 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* configure.in: bumped to gparted-0.2.4
	  ===================================================

2006-04-04 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* src/GParted_Core.cc: remove non-existent devices from
	  disabled_automount_devices at every rescan.

2006-04-04 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* src/GParted_Core.cc: store libparted error in Partition::error if
	  reading the used/unused space failed.

2006-04-03 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* include/Dialog_Filesystems.h,
	  src/Dialog_Filesystems.cc: added column 'check'
	* include/GParted_Core.h,
	  src/GParted_Core.cc: use halproperty
	  'storage.automount_enabled_hint' instead of pmount to disable
	  automounting.
	  
2006-04-02 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: improved disabling of automounting. It's still
	  somewhat crude, but right now it's ok for some semi-public testing.
	  I'll do some cleanups tomorrow morning.
	* src/Dialog_Progress.cc: added FIXME

2006-04-02 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: an initial solution for the automount problem.
	  I still need to add something to prevent just created partitions from
	  getting mounted. (see #324220 for more info)

2006-04-02 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Dialog_Filesystems.h,
	  include/GParted_Core.h,
	  include/Makefile.am,
	  include/ufs.h,
	  src/GParted_Core.cc,
	  src/Makefile.am,
	  src/ufs.cc: added ufs filesystemclass

2006-04-02 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Win_GParted.h,
	  src/Win_GParted.cc: override Gtk::Window::on_show instead of
	  connecting to signal_show()
	* include/Dialog_Filesystems.h,
	  src/Dialog_Filesystems.cc: added columns 'detect' and 'read'

2006-04-02 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Utils.h,
	  src/Utils.cc: added convenience function
	* src/DialogManageFlags.cc,
	  src/Win_GParted.cc: cleanups

2006-04-02 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/DialogManageFlags.h,
	  src/DialogManageFlags.cc,
	  src/Win_GParted.cc: improved behaviour of flagmanagementdialog.
	  
2006-04-01 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/OperationResizeMove.cc: fixed another issue in
	  apply_to_visual(), this time with resizing/moveing the extended
	  partition.

2006-03-31 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: trivial cleanups
	* src/OperationResizeMove.cc: fixed a glitch in apply_to_visual()
	* src/ext2.cc,
	  src/ext3.cc: accept returnvalues 0, 1 and 2 instead of 0 and 1
	  
2006-03-31 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* include/GParted_Core.h,
	  src/GParted_Core.cc: let create_empty_partition() return a boolean
	  instead of an integer.

2006-03-31 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/DialogManageFlags.h,
	  include/GParted_Core.h,
	  include/Makefile.am,
	  include/Utils.h,
	  include/Win_GParted.h,
	  src/DialogManageFlags.cc,
	  src/GParted_Core.cc,
	  src/Makefile.am,
	  src/Win_GParted.cc: add 'flag management' (#330453)

2006-03-29 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Partition.h,
	  src/Partition.cc: added set_used() and operator!=
	* src/Dialog_Partition_Copy.cc,
	  src/GParted_Core.cc,
	  src/OperationCopy.cc,
	  src/Win_GParted.cc: it's now possible to copy from partition to
	  partition. (before this it was only possible to copy to unallocated
	  space)

2006-03-28 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: fixed another minor memleak (yeah i'm playing
	  with valgrind ;) )

2006-03-28 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: it appeared i had to free the result of
	  ped_partition_get_path in order to prevent a memleak.

2006-03-28 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/OperationCopy.cc: name a copied partition 'copy of <source>'.

2006-03-28 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* configure.in: bumped to gparted-0.2.3
	  ===================================================

2006-03-28 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: removed testdata
	
2006-03-28 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* trivial cleanups

2006-03-27 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/TreeView_Detail.h,
	  src/TreeView_Detail.cc: made icon behaviour more intelligent
	* src/GParted_Core.cc: small improvement in open_device_and_disk()

2006-03-26 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: made some small adjustments to devicechecks.

2006-03-26 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: sort devices alphabetically by default.

2006-03-25 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/DrawingAreaVisualDisk.cc: prevented a possible segfault at
	  startup. Thanks to LarryT for finding this.

2006-03-24 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* lots of cleanups in operationhandling. This resulted in cleaner/less
	  code and the fixing of some longstanding issues.

2006-03-20 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/DrawingAreaVisualDisk.h,
	  src/DrawingAreaVisualDisk.cc: fixed a few issues with
	  selecting/activating partitions.
	* include/Utils.h,
	  src/Utils.cc,
	  src/Dialog_Disklabel.cc,
	  src/Dialog_Partition_Info.cc (mk_label): improved support for
	  aligment.
	* src/Win_GParted.cc: fixed a small alignmentissue in the devices
	  submenu.

2006-03-19 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc,
	  src/Win_GParted.cc,
	  src/ext2.cc,
	  src/ext3.cc,
	  src/fat16.cc,
	  src/fat32.cc,
	  src/jfs.cc,
	  src/ntfs.cc,
	  src/reiserfs.cc: fixed issues with copying (see also #335004)
	* include/Operation.h,
	  src/Operation.cc: cleanups + added FIXME
	* include/Partition.h,
	  src/Partition.cc: added clear_mountpoints()
	* src/DrawingAreaVisualDisk.cc: added FIXME
	
2006-03-18 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/DrawingAreaVisualDisk.h,
	  src/DrawingAreaVisualDisk.cc: another change to highlighting of
	  selected partition.
	* include/Partition.h,
	  src/Win_GParted.cc: deal properly with just formatted partitions
	* src/Operation.cc: added FIXME

2006-03-17 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: moved comment to correct position
	* src/Win_GParted.cc: fixed issues with mountpoints containing
	  underscores and/or spaces.
	  
2006-03-16 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Win_GParted.cc: fixed visual feedback while mounting a partition

2006-03-16 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* include/Win_GParted.h,
	  src/Win_GParted.cc: added submenu with mountpoints to 'mount' in
	  partitionmenu. (see also #330327)

2006-03-16 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* compose/.cvsignore: added *.swp
	* compose/README: corrected url

2006-03-16 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/ext2.cc,
	  src/ext3.cc,
	  src/fat16.cc,
	  src/fat32.cc,
	  src/jfs.cc,
	  src/ntfs.cc,
	  src/reiser4.cc,
	  src/reiserfs.cc,
	  src/xfs.cc: changed statusmessage, fixed issue with exit_status and
	  tested/confirmed succesfull usage of Partition::get_path() in
	  Set_Used_Sectors() of all filesystems.
	  
2006-03-15 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Device.h,
	  src/Device.cc: overloaded == and !=
	* src/Win_GParted.cc: cleanups

2006-03-15 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Dialog_Partition_Info.cc,
	  src/DrawingAreaVisualDisk.cc: cleanups

2006-03-15 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Partition.h,
	  src/Dialog_Partition_Info.cc,
	  src/GParted_Core.cc,
	  src/Partition.cc,
	  src/TreeView_Detail.cc,
	  src/Win_GParted.cc: Made Partition::mountpoints private
	  
2006-03-14 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* changed the way devices and partitions store their devicepaths.
	  Instead of holding a 'realpath' and a symbolic path we store paths
	  in a list. This allows for improved detection of mountpoins, free
	  space, etc..

	  Also fixed a nasty bug which showed up when you copy a partition
	  from one device to another. (thanks to mario for the report)

2006-03-09 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Makefile.am,
	  src/Makefile.am: sorted filelistings.
	  
2006-03-09 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Win_GParted.cc: only allow 'swapon' on real partitions
	
2006-03-09 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Win_GParted.h,
	  src/Win_GParted.cc: added basic support for mounting unmounted
	  partitions on mountpoints found in /etc/fstab

2006-03-09 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* src/DrawingAreaVisualDisk.cc: changed MIN_SIZE from static 20 to
	  BORDER * 2 + 2 
	 
2006-03-09 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/DrawingAreaVisualDisk.h,
	  include/Makefile.am,
	  include/Win_GParted.h
	  src/DrawingAreaVisualDisk.cc,
	  src/Makefile.am
	  src/Win_GParted.cc: removed the frame from the visualdiskwidget and
	  changed some visual details. Also changed visual representation of
	  selected partition. The latter might be considered as a work in
	  progress.
	* include/FrameVisualDisk.h,
	  src/FrameVisualDisk.cc: Removed.
	  
2006-03-07 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* src/Dialog_Partition_Copy.cc,
	  src/Dialog_Partition_Resize_Move.cc: cleanups

2006-03-07 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* include/GParted_Core.h,
	  include/TreeView_Detail.h,
	  src/GParted_Core.cc,
	  src/TreeView_Detail.cc: show greyed-out mountpoint of unmounted
	  partitions in the treeview as an improved way to identify
	  partitions. (#333027)
	* src/Win_GParted.cc: cleanups
	
2006-03-06 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/TreeView_Detail.h,
	  src/TreeView_Detail.cc: support showing of warning icon even when a
	  partition is mounted.

2006-03-06 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Win_GParted.cc: made message about max. primary partitions a bit
	  more informative.

2006-03-05 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* include/GParted_Core.h,
	  src/GParted_Core.cc: extended scan for mountpoints (see #333370)
	  
2006-03-05 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Dialog_Partition_Info.cc,
	  src/GParted_Core.cc: fixed crasher with busy partition without
	  mountpoint (#332983)
	* src/Win_GParted.cc: added FIXME
	
2006-03-05  Artur Flinta  <aflinta@cvs.gnome.org>

	* configure.in: Added "pl" to ALL_LINGUAS

2006-03-02 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/FrameVisualDisk.h,
	  src/FrameVisualDisk.cc: improved the algorithm to deal with lost
	  pixels after seeing some problems with rather insane
	  partitiontables.
	* src/Dialog_Partition_Info.cc: minor cleanup
	* src/GParted_Core.cc: show error in partitioninfo if statvfs fails
	* src/TreeView_Detail.cc: added FIXME
	
2006-03-01 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Dialog_Base_Partition.cc,
	  src/FrameVisualDisk.cc: added FIXME
	* src/Win_GParted.cc: force processing of all pending Gtk::Main events
	  after Refresh_Visual. This fixes an issue with incorrect displayed
	  Visual Partition Display.
	
2006-03-01 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Frame_Resizer_Base.h,
	  include/Frame_Resizer_Extended.h,
	  src/Dialog_Base_Partition.cc,
	  src/Dialog_Partition_Copy.cc,
	  src/Dialog_Partition_New.cc,
	  src/Dialog_Partition_Resize_Move.cc,
	  src/Frame_Resizer_Base.cc,
	  src/Frame_Resizer_Extended.cc: did lots of work on the resizer, it's
	  behaviour should be more natural and satisfying now. (see also
	  #331591)
	* src/Win_GParted.cc: extended partition was resizable even when it's
	  busy. fixed.
	* src/ntfs.cc: made scan output more readable.
	* src/FrameVisualDisk.cc: added FIXME

2006-02-25 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* include/GParted_Core.h,
	  src/GParted_Core.cc: catch libparted exceptions and display them in
	  the operationdetails if an operation has failed.
	* src/Dialog_Progress.cc: small cosmetic change to the errordialog.

2006-02-25 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* improved errorhandling in Set_Used_Sectors() in the filesystemclasses
	
2006-02-25 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* in some places i still used MiB's instead of sectors to store sizes.
	  this has been fixed everywhere. Only the spinbuttons still use
	  MiB's. I have a few ideas on how to solve this, but i'll take it up
	  with #usability first.
	  	
2006-02-22 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* configure.in: bumped to gparted-0.2.2
	  ======================================================

2006-02-22 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/FrameVisualDisk.cc: prevent crasher when visual_disks is empty.
	* include/Win_GParted.h,
	  src/Win_GParted.cc: load devices at startup on signal_show instead
	  of dispatching it from the c'tor.
	  Also did some cleanups in the behaviour of opening and closing of
	  the operationslist.

2006-02-20 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc,
	  src/Win_GParted.cc: deal with the rare situation when 2 partitions
	  are mounted on the same mountpoint. (see also #330327)

2006-02-18 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: added some checks before performing a
	  move/resize using libparted.

2006-02-18 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Win_GParted.cc: added shortcut to menuitem
	  'Resize/Move'(#329627)

2006-02-17 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* include/GParted_Core.h,
	  include/Partition.h,
	  src/Dialog_Partition_Info.cc,
	  src/GParted_Core.cc,
	  src/Partition.cc,
	  src/TreeView_Detail.cc: store flags in a list instead of a string.
	* Makefile.am,
	  src/Makefile.am: cleanups
	  
2006-02-17 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Utils.h: added FIXME
	* include/Win_GParted.h,
	  src/Win_GParted.cc: cleanups (mostly messagebox related)
	* src/GParted_Core.cc: added some more progressfeedback to create and
	  resize

2006-02-16 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* configure.in: bumped to gparted-0.2.1
	  ======================================================

2006-02-16 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Win_GParted.cc: sync after swapon/swapoff (see also #330327)
	
2006-02-16 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* configure.in: improved check for libparted (thanks to Pete Shinners,
	  see also #330776) 
	
2006-02-15 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  include/Partition.h,
	  src/Dialog_Partition_Info.cc,
	  src/GParted_Core.cc,
	  src/Partition.cc,
	  src/TreeView_Detail.cc,
	  src/Win_GParted.cc: support partitions with multiple mountpoints
	  (see also #330327)

2006-02-15 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/ntfs.cc: changed a few things after talking with Szaka
	  (ntfsprogs developer)

2006-02-15 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* wrap mount/umount/swapon/swapoff instead of implementing it
	  ourselves (#330641)
	* moved execute_command() to Utils and made the filesystems use it. All
	  in all this decreased the size of the binary with 10% and made stuff
	  more readable.

2006-02-11 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* removed legend after discussion with usability guys

2006-02-10 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/TreeView_Detail.cc: finally fixed #169683!! ( party, party! :p )
	* include/Win_GParted.h,
	  src/Win_GParted.cc,
	  src/main.cc: cleanups
	
2006-02-09 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Dialog_Progress.cc: set a min. width for detailstree instead of
	  deducing it from the textlength.
	* src/VBox_VisualDisk.cc: small fix to reap 'lost' pixels.
	
2006-02-09 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* include/Win_GParted.h,
	  src/Win_GParted.cc: it shouldn't be possible to remove an extended
	  partition which contains logicals.
	* src/TreeView_Detail.cc: only show mountpoint column when there is
	  mountinfo.

2006-02-08 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* include/Win_GParted.h,
	  src/Win_GParted.cc: added support for activating swap (#392672)

2006-02-07 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Dialog_Progress.cc: commented set_do_overwrite_confirmation()
	  since it was only introduced since gtkmm-2.8 and i don't want to
	  raise the deps that high just yet.

2006-02-07 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Win_GParted.cc: removed warning about busy device. It's not
	  really needed and it confuses people.
	* include/Operation.h: set default status of operationdetails to NONE
	* include/Dialog_Progress.h,
	  src/Dialog_Progress.cc: implemented export of operationdetails to
	  external file. This can be very useful for debugging. (#329968)
	
2006-02-02 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  include/Win_GParted.h,
	  src/GParted_Core.cc,
	  src/Win_GParted.cc,
	  src/main.cc: added support for commandline arguments (#329414)

2006-02-02 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/TreeView_Detail.h,
	  src/TreeView_Detail.cc: added mountpointcolumn (#304688)
	* include/Win_GParted.h,
	  src/Win_GParted.cc: added submenu 'Devices' which allows one to
	  select devices from the menu (#329415)
	
2006-01-31 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* confgure.in: added 'tr' to ALL_LINUGAS on request of the Turkish
	  coordinator (gorkem@gorkemcetin.com)

2006-01-30 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: fixed error with mountpoints containing
	  whitespaces. (#329247)

2006-01-30 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* configure.in: bump to gparted-0.2
	  ========================================================

2006-01-29 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/FileSystem.cc: sometimes certain commands couldn't be found
	  because PATH was overridden. fixed.

2006-01-28 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Utils.cc: fixed small bug in unmount()
	* src/jfs.cc,
	  src/xfs.cc: check if error actually contains data before adding it
	  to the feedbackdata. (this prevents empty rows in the operationtree)

2006-01-28 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Dialog_Progress.h,
	  src/Dialog_Progress.cc,
	  src/FileSystem.cc: added markup to operationdetails

2006-01-26 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Dialog_Progress.h,
	  src/Dialog_Progress.cc,
	  src/Win_GParted.cc: deal correctly with the progressdialog's
	  delete_event.
	
2006-01-26 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Dialog_Partition_Info.h,
	  include/Win_GParted.h,
	  src/Win_GParted.cc: cleanups

2006-01-26 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Partition.h: added FIXME
	* src/Partition.cc: fixed Update_Number()

2006-01-26 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Dialog_Progress.h,
	  src/Dialog_Progress.cc,
	  src/Win_GParted.cc: made some changes to progressdialog behaviour.
	  
2006-01-26 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* gparted.desktop.in,
	  src/Dialog_Progress.cc,
	  src/Win_GParted.cc: string tweaks. (#328685)

2006-01-25 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Utils.h,
	  src/Utils.cc,
	  src/jfs.cc,
	  src/xfs.cc: fixed small issue with mounting. (discovered on the
	  livecd)

2006-01-25 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: improved scanning for root mountpoint (/)
	* src/Dialog_Partition_Info.cc: use Utils::format_size() instead of
	  displaying every value in MiB's. Also some cleanups and changes.

2006-01-26 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Dialog_Progress.h,
	  src/Dialog_Progress.cc: implemented real 'cancel'.

2006-01-24 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Utils.cc: use realpath() to get absolute path to 'real'
	  /etc/mtab.
	  unmount if something went wrong while adding the line to '/etc/mtab'
	* src/Dialog_Progress.cc: replaced PACK_SHRINK with PACK_EXPAND_WIDGET
	
2006-01-24 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: swapped 'line' and 'c_str' to make
	  get_short_path() work properly.
	
2006-01-24 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/jfs.cc,
	  src/xfs.cc: replaced translatable string 'umount' with 'unmount'
	  (#328419)

2006-01-24 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* use Glib::get_tmp_dir() instead of hardcoding it as '/tmp'
	* use Glib::find_program_in_path() instead af a system/which combi
	* display current device in windowtitle

2006-01-22 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* correct partitiontype of destination is now set while copying
	* resizing now return correct status (sometimes it would report
	  succes even when some of the suboperationes failed)
	* fixed some issues with resizing and cylindersizes.
	
2006-01-22 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* removed Execute_Command() and replaced it by execute_command().
	  The latter uses Glib::spawn_sync instead of popen().
	  also made the filesystems call execute_command rather than calling
	  Glib::spawn_sync themselves.

2006-01-22 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* implemented Utils::sector_to_unit() and use it in several places
	* (finally) fixed errors with ntfsresizing (had a lot to do with
	  difference between MB and MiB)
	* resizing of reiserfs now shows more detailed feedback
	* support for TebiByte (TiB) unit

2006-01-21 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* changed KB/MB/GB/TB to KiB/MiB/GiB/TiB after reading http://www.iec.ch/zone/si/si_bytes.htm
	
2006-01-21 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/main.cc: cleanups
	* src/ntfs.cc: use ntfsfix for scanning.
	  run a simulation before performing an actual resize. more detailed
	  feedback.

2006-01-20 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/xfs.cc: updated copy to provide detailed feedback.

2006-01-20 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/jfs.cc: small fix with sequence of mount,remount,unmount
	* src/xfs.cc: resizing now contains detailed feedback
	* src/FileSystem.cc: show exceptiondescription in operationdetails
	
2006-01-19 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/jfs.cc: resizing now contains detailed feedback 
	
2006-01-19 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* added detailed progressfeedback. It still needs some polishing, but
	  is already far better then the old situation. And what's more, it's
	  finally threadsafe :p
	  
2006-01-11 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* configure.in: bumped version to 0.1 
	  ================================================================================
	  
2006-01-08 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Win_GParted.h,
	  src/Win_GParted.cc: added visual feedback when unmounting or
	  deactivating swap. This can be useful when it takes longer then
	  usual. 
	  
2006-01-07 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Dialog_Partition_Info.cc: removed separator in accordance to the
	  HIG
	* include/Win_GParted.h,
	  src/Win_GParted.cc: it's now possible to deactivate swap from within
	  gparted.
	* src/GParted_Core.cc: sleep one second after deletion of a partition to
	  give the kernel some time to reread the partitiontable.
	
2006-01-07 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Utils.cc: commented 'ss .imbue( std::locale( "" ) )' (#157871)
	* src/Win_GParted.cc,
	  src/TreeView_Detail.cc,
	  src/Dialog_Base_Partition.cc: cleanups
	* include/Dialog_Partition_New.h,
	  include/Partition.h,
	  src/Dialog_Partition_New.cc,
	  src/GParted_Core.cc,
	  src/Partition.cc: allow forced partitionsizes (aka: do not round to
	  cylinder). (#169486)

2006-01-06 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/VBox_VisualDisk.cc: replaced free_color() with deprecated
	  free_colors() to allow building with gtkmm-2.6 (#326013)

2006-01-05 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Device.h,
	  src/Device.cc: replaced 'device_partitions' with 'partitions'
	* src/Win_GParted.cc: use new Device::partitions
	* include/Partition.h,
	  src/Partition.cc: added 'realpath'
	* src/Dialog_Partition_Info.cc: use Partition::realpath..
	* include/GParted_Core.h,
	  src/GParted_Core.cc:use ped_partition_get_path() instead of
	  constructing it ourselves. (#325800)
	  Also use global maps for mountpoints and
	  shortpaths to prevent fileaccess from happening more then once per
	  scan.

2006-01-04 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Partition.h,
	  src/Partition.cc: added get_length()
	* include/Utils.h,
	  src/Utils.cc,
	  src/Dialog_Partition_Info.cc,
	  src/Operation.cc,
	  src/TreeView_Detail.cc,
	  src/VBox_VisualDisk.cc,
	  src/Win_GParted.cc: from now on values >=1024MB are displayed in
	  GB's (#319840)

2006-01-03 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Win_GParted.cc: replaced 'can not' with 'cannot' (#325570)

2006-01-02 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* happy new year ;)
	* src/TreeView_Detail.cc: fixed some alignment issues
	* include/GParted_Core.h,
	  src/GParted_Core.cc,
	  include/Operation.h,
	  src/Operation.cc,
	  include/Win_GParted.h,
	  src/Win_GParted.cc: removed confirmationdialogs for delete and
	  convert partitions (#319841).
	  Also renamed 'convert' to 'format' to reflect the actual
	  functionality.

2005-12-30 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Win_GParted.cc: fixed alignments of cells in combo_devices

2005-12-30 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Win_GParted.h,
	  src/Win_GParted.cc: replaced deprecated OptionMenu with ComboBox.
	  also fixed some issues which arised when no devices were detected.

2005-12-29 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Makefile.am: removed -g from AM_C(XX)FLAGS

2005-12-29 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: replaced access() with Glib::file_test in wait_for_node()

2005-12-29 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Win_GParted.cc: disable treeview and graphical partition display at scantime
	* src/GParted_Core.cc: fixed two (potential) problems with device detection.

2005-12-29 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: because lp_partition didn't get initialized the
	  libpartedscan for free space would always fail. fixed.

2005-12-28 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* replaced popen() with Glib::spawn_command_line_sync() + general
	  cleanups in the set_used_sectors() functions.

2005-12-25 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* merry christmas
	* src/GParted_Core.cc,
	  src/VBox_VisualDisk.cc,
	  src/Win_GParted.cc: cleanups
	* include/FileSystem.h,
	  src/FileSystem.cc,
	  src/ext2.cc,
	  src/ext3.cc: replaced popen() with Glib::spawn_command_line_sync()

2005-12-24 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/TreeView_Detail.cc: replaced C-style cast with static_cast
	* src/VBox_VisualDisk.cc: removed unnecessary 'int ext_length'
	
2005-12-24 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/TreeView_Detail.h,
	  src/TreeView_Detail.cc,
	  include/VBox_VisualDisk.h,
	  src/VBox_VisualDisk.cc,
	  include/Win_GParted.h,
	  src/Win_GParted.cc: emit proper signals for several events.
	* include/Partition.h,
	  src/Partition.cc: cleanups..

2005-12-22 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Partition.h,
	  src/Partition.cc: overloaded operator ==
	* include/VBox_VisualDisk.h,
	  src/VBox_VisualDisk.cc: rewrote the graphical partitiondisplay. It
	  now supports resizing and the extended partition is also selectable.
	  see also #312656
	* include/Win_GParted.h,
	  src/Win_GParted.cc: use the new graphical partitiondisplay.
	* src/TreeView_Detail.cc: minor cleanups

2005-12-15 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Dialog_Disklabel.h,
	  src/Dialog_Disklabel.cc: replaced deprecated Gtk::Optionmenu with
	  Gtk::ComboBoxText
	
2005-12-15 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: don't wait for node to appear when an extended
	  partition is created.
	
2005-12-15 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Utils.h,
	  src/Utils.cc: added get_color_as_pixbuf() to create colored squares
	  of custom sizes. These can be use throughout the app to represent
	  filesystems. e.g. in the treeview and convertmenu.
	* include/TreeView_Detail.h,
	  src/TreeView_Detail.cc,
	  include/VBox_VisualDisk.h,
	  src/VBox_VisualDisk.cc,
	  include/Win_GParted.h,
	  src/Win_GParted.cc: use Utils::get_color_as_pixbuf() instead of
	  custom drawn widgets.

2005-12-14 Bart Hakvoort <hakvoort@cvs.gnome.org>
	
	* include/FileSystem.h,
	  src/jfs.cc,
	  src/xfs.cc: use mkdir instead of wrapping CLI tool

2005-12-14 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Utils.h,
	  src/Utils.cc: added mount() and unmount()
	* src/Win_GParted.cc,
	  src/jfs.cc,
	  src/xfs.cc: use Utils::mount and Utils::umount instead of wrapping
	  CLI tools.

2005-12-14 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/Partition.cc: since we now have the device_path in Partition we
	  don't need to 'calculate' it anymore.

2005-12-14 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: did some cleanups
	* include/Operation.h,
	  src/Operation.cc: added get_index_extended to get the ext_index in a
	  uniform way instead of calculating it every time ourselves.
	
2005-12-13 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: check if file is open before using it.
	* src/Utils.cc: removed commented include

2005-12-13 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* replaced the inline Utils functions with static functions.
	  This shaves a few kbytes (24 in fact) off the binary and is a bit
	  cleaner code-wise (imho).

2005-12-12 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: don't use wait_for_node() if resizing an
	  extended partition (they don't have nodes :P)

2005-12-11 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* po/POTFILES.in: added include/Utils.h
	* include/GParted_Core.h,
	  src/GParted_Core.cc: replaced get_sym_path with get_short_path for
	  cleaner code and better performance.

2005-12-11 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: use statvfs instead of this ugly df-wrapping.

2005-12-08 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Partition.h,
	  src/Partition.cc: added 'Glib::ustring mountpoint'
	* include/GParted_Core.h,
	  src/GParted_Core.cc: implemented set_mountpoints() to set mountpoint
	  in partitions.
	* include/Dialog_Partition_Info.h,
	  src/Dialog_Partition_Info.cc: use Partition::mountpoint instead of
	  finding it ourselves.

2005-12-07 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* include/Partition.h,
	  src/Partition.cc: from now on each partition has a reference to it's
	  device.
	* src/Win_GParted.cc,
	  src/Dialog_Partition_New.cc: make use of new Set() from partition
	* include/GParted_Core.h,
	  src/GParted_Core.cc: since ped_file_system_clobber() ignored reiser4
	  i've implemented a custom 'filesystem signature remover'.
	  Also made use of the fact a partition now knows on which device it
	  lives.
	* src/Operation.cc: the get_string() didn't use
	  Get_Filesystem_String() and thus returned faulty strings. Also did
	  some cleanups.
	
2005-12-07 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: made warning a bit more informative
	
2005-12-07 Bart Hakvoort <hakvoort@cvs.gnome.org>

	* rewrote quite some stuff to use an enum to indentify filesystems
	  instead of stringcomparisons.

2005-11-29 Bart Hakvoort <hakvoort@cvs.gnome.org>
	* src/jfs.cc: fixed 'broken pipe' warning
	* src/fat16.cc,
	  src/fat32.cc: removed unnecessary 'echo 2 |' from freespace scan.

2005-11-29 Bart Hakvoort <hakvoort@cvs.gnome.org>
	* include/GParted_Core.h,
	  src/GParted_Core.cc: implemented a 'wait_for_node()' function after
	  reading http://bugs.gentoo.org/show_bug.cgi?id=102343. I couldn't
	  reproduce the bug myself, but i hope this wil solve it.
	  Also made 'set_partition_type()' return a boolean for improved
	  errorchecking.

2005-11-28 Bart Hakvoort <hakvoort@cvs.gnome.org>
	* decided to use the Supported enum a bit more efficient in checks
	  ( doh, big deal :P )

2005-11-27 Bart Hakvoort <hakvoort@cvs.gnome.org>
	* include/Win_GParted.h,
	  src/Win_GParted.cc: Added a menu 'Edit' which contains 'Undo' and
	  'Apply'. (#322550)

2005-11-27 Bart Hakvoort <hakvoort@cvs.gnome.org>
	* configure.in: raised dependencies to >=gtkmm-2.6 and >=parted-1.6.25

2005-11-27 Bart Hakvoort <hakvoort@cvs.gnome.org>
	* hmmz, lots of shimmery internals..
	  Instead of using a boolean to indicate support for certain
	  features i now use and enum (NONE, LIBPARTED, EXTENDED).
	  This allowed me to clean up some stuff that annoyed me ;)
	  Still.. the core could use a bit more love...

2005-11-25 Bart Hakvoort <hakvoort@cvs.gnome.org>
	* include/Makefile.am,
	  include/Win_GParted.h,
	  src/Makefile.am: removed Dialog_About.[h,cc]
	* src/Win_GParted.cc: from now on we use Gtk::AboutDialog instead of
	  our own AboutDialog. Also use Gtk::Stock items instead of hardcoded
	  paths to images (about and harddisk).

2005-11-25 Bart Hakvoort <hakvoort@cvs.gnome.org>
	* gparted-0.0.9

2005-11-25 Bart Hakvoort <hakvoort@cvs.gnome.org>
	* gparted finally has a logo/icon ;) (thanks to Alain Clement)
	  see also #162092

2005-11-25 Bart Hakvoort <hakvoort@cvs.gnome.org>
	* include/.cvsignore,
	  src/.cvsignore: added *.swp
	* Makefile.am,
	  include/Dialog_Filesystems.h: some modifications to pass 'make
	  distcheck'
	* src/GParted_Core.cc: minor cleanups
	
2005-11-24 Bart Hakvoort <hakvoort@cvs.gnome.org>
	* include/FileSystem.h: cleanups
	* include/GParted_Core.h,
	  src/GParted_Core.cc: correct partitiontype is now set after creation
	  or conversion. (#322281)

2005-11-18 Bart Hakvoort <hakvoort@cvs.gnome.org>
	* configure.in: added mk to ALL_LINGUAS on request of Arangel

2005-10-05 Bart Hakvoort <hakvoort@cvs.gnome.org>
	* removed INSTALL
	* compose/.cvsignore,
	   compose/Makefile.am,
	   Makefile.am,
	   configure.in,
	   include/Makefile.am: some fixes to make 'make dist' work (thanks to Daniel Holbach)
	   
2005-09-21 Bart Hakvoort <hakvoort@cvs.gnome.org>
	* configure.in: added 'vi' to ALL_LINGUAS

2005-09-13 Bart Hakvoort <hakvoort@cvs.gnome.org>
	* src/Dialog_Filesystems.cc: fixed a11y thingy (#316108)
	* include/GParted_Core.h,
	  src/GParted_Core.cc,
	  include/Dialog_Disklabel.h,
	  src/Dialog_Disklabel.cc,
	  src/Win_GParted.cc : get labeltypes from libparted instead of hardcoding them,
	  also changed some text (#315979)

2005-09-13 Bart Hakvoort <hakvoort@cvs.gnome.org>
	* lots of stuff and cleanups, including fixing getting used/unused space of hfs/hfs+/fat16/fat32
	* also fixes bug #161362
	
2005-08-31 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* src/Dialog_Filesystems.cc: at startup closebutton is focused (#308381)

2005-08-31 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* src/Dialog_Progress.cc: fixed bug with big fonts (#301831)

2005-08-30 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* src/Win_GParted.cc: fixed typo (#312661)

2005-08-30 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* compose/ucompose.hpp: quick 'fix' for crashers in some locales (#157871)
	* include/Utils.h: basicly the same + minor cleanups
	* src/GParted_Core.cc: replaced C-style cast with static_cast..

2005-07-31  Ilkka Tuohela  <hile@iki.fi>

	* configure.in: Added 'fi' to ALL_LINGUAS.

2005-06-19  Ignacio Casal Quinteiro  <nacho.resa@gmail.com>

	* configure.in: Added 'gl' to ALL_LINGUAS.

2005-05-02  Chao-Hsiung Liao  <j_h_liau@yahoo.com.tw>

	* configure.in: Added "zh_TW" (Traditional Chinese) to ALL_LINGUAS.

2005-04-01  Steve Murphy  <murf@e-tools.com>

        * configure.in: Added "rw" to ALL_LINGUAS.

2005-03-22  Žygimantas Beručka  <uid0@akl.lt>

	* configure.in: Add "lt" (Lithuanian) to ALL_LINGUAS.

2005-02-28  Alexander Shopov  <ash@contact.bg>

	* configure.in: Added "bg" (Bulgarian) to ALL_LINGUAS

2005-02-26  Kostas Papadimas  <pkst@gnome.org>

	* configure.in: Added "el" (Greek) to ALL_LINGUAS.

2005-02-19  Christophe Merlet  <redfox@redfoxcenter.org>

	* configure.in: Added "fr" (French) to ALL_LINGUAS.

2005-02-08 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* src/hfs.cc,
	  src/jfs.cc,
	  src/ntfs.cc,
	  src/reiserfs.cc : fixed bug with LC_NUMERIC=C .. (thanks to mantiena for reporting)

2005-02-06 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* src/Win_GParted.cc: fixed a potential infinite loop in Show_Pulsebar() (thanks to xilun)

2005-02-01 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* Fixed a bunch of bugs (some of them crashers) which showed up if no devices were detected.

2005-01-30 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* include/Win_GParted.h,
	  src/Win_GParted.cc: Replaced menu "Operations" with "Device" and "Partition". Also implemented a 'set-disklabel feature'.
	* src/Dialog_Disklabel.cc: changed title and header to be more generic (was specific for a new disk).

2005-01-29 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* src/Dialog_Filesystems.cc: Replaced stockitems APPLY and CANCEL with YES and NO.

2005-01-25 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* src/Frame_Resizer_Base.cc: hmmz, i forgot to remove one unnecessary check.

2005-01-25 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* include/Frame_Resizer_Base.h,
	  include/Frame_Resizer_Extended.h,
	  src/Frame_Resizer_Base.cc,
	  src/Frame_Resizer_Extended.cc: finally got around to fix this annoying 'flickering' while using the resizer :)

2005-01-23 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: write actually used libpartedversion to stdout on startup. (useful for debugging)

2005-01-22 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* include/Dialog_Base_Partition.h,
	  src/Dialog_Base_Partition.cc,
	  src/Dialog_Partition_Copy.cc,
	  src/Dialog_Partition_Resize_Move.cc: Fixed bug in copy functionality (due to unset ORIG_START startsector wasn't set correctly). Also have ORIG*
	  initialized in ctor of dialogbase to prevent such errors from ever happening again (this one only showed up with gcc-3.3.5) .

2005-01-19 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc: removed sleep( 1 ). This isn't needed anymore now the layout is scanned before the re-readtest. (saves seconds at scantime :) )
	* replaced C-style typeconversion with static_casts throughout the project.

2005-01-18 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* include/Utils.h: used static_cast<> instead of C-style type conversion.
	* src/Makefile.am: install gparted binary in bin/ instead of sbin/ (as soon as i've time i want to implement a read-only modus)

2005-01-11 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* src/Win_GParted.cc: activate_convert used old filesystem instead of new one for checks. fixed.

2005-01-09 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* include/Win_GParted.h,
	  src/Win_GParted.cc: Added menu 'Operations' to menubar. This menu is a duplicate of the popupmenu and imho a bit unnecessary, but lots of
	  people requested this.. :)  Besides this, i removed 'menu_devices' and performed a few other cleanups.

2005-01-09 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* src/GParted_Core.cc,
	  src/Win_GParted.cc: call GParted_Core::find_supported_filesystems( ) in GParted_Core::GParted_Core() instead of Win_GParted::Win_GParted().
	  Also replaced 0xFFFF with GDK_Delete to improve readability of the source.

2004-12-29 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* replaced atoi with atol .

2004-12-29 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* src/jfs.cc: implemented read used/unused space on a jfs filesystem.

2004-12-29 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: As explained in the previous entry i've decided to add reiser4 detection to gparted as well..

2004-12-29 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* Added support for reiser4 (only creation atm, since the other functionality appears to be non-free software :/ )
	  Also, libparted isn't able to detect reiser4 yet, a patch to fix this is underway, but i should probably add reiser4 detection to gparted as well.

2004-12-28 Bart Hakvoort  <hakvoort@cvs.gnome.org>
	
	* The Filesystemclasses: Changed 'bool Create( const Glib::ustring & device_path, const Partition & new_partition )'
	to 'bool Create( const Partition & new_partition )'. Since i now use external tools for all filesystems, the partitionpath will suffice.

2004-12-28 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* include/GParted_Core.h,
	  src/GParted_Core.cc,
	  src/linux_swap.cc: fixed some issues with linux-swap. From now on you need 'mkswap' to create/resize/move linux-swap.

2004-12-27 Bart Hakvoort  <hakvoort@cvs.gnome.org>

	* include/Device.h,
	  src/Device.cc,
	  src/GParted_Core.cc,
	  src/Win_GParted.cc: Removed the ugly Get_Highest_Logical_Busy() from Device and added a classvariable instead. This one is set in
	  GParted_Core and used wherever needed. I also removed Device::busy, and used the new variable to check if a device is busy.

2004-12-27 Bart Hakvoort  <gparted@users.sf.net>

	* Added cylsize to Device and made Operation contain a Device instead of only the path and lenght.
	  This way i was able to dump Get_Cyl_Size in the Core. Besides that, i used cylsize in WinGparted and made a lot of
	  cosmetic changes. Most of them were pretty useless, but hey, i'm bored ;)

2004-12-25 Bart Hakvoort  <gparted@users.sf.net>

	* src/GParted_Core.cc,
	  src/Win_GParted.cc,
	  include/Utils.h,
	  include/GParted_Core.h: moved inline Get_FS from Utils.h to GParted_Core, saves a few K in exe size ;)

2004-12-23 Bart Hakvoort  <gparted@users.sf.net>

	* src/GParted_Core.cc: removed sorting of detected devices. I figured we didn't need it anymore now 'deep_scan' is removed.

2004-12-22 Bart Hakvoort  <gparted@users.sf.net>

	* configure.in: bumped to 0.0.8

2004-12-20 Bart Hakvoort  <gparted@users.sf.net>

	* src/Dialog_Partition_Copy.cc,
	  src/Win_GParted.cc,
	  src/xfs.cc: xfs copy now uses xfsdump and xfsrestore. icw some hacks in the other 2 files, it's now possible to shrink an xfs partition
	  while doing the copy. Although i'd rather preffered 'real' (in place) resizing i figured it's better then nothing.
	  Also the sourcefilesystem is now checked before the actual copy is performed. If damaged beyond repair, the copy won't start.
	* src/Dialog_Partition_Resize_Move.cc: removed commented code.

2004-12-18 Bart Hakvoort  <gparted@users.sf.net>

	* include/Dialog_Filesystems.h,
	  src/Dialog_Filesystems.cc: Replaced treestore with liststore. I decided i didn't need a treeview after all...
	* src/Dialog_About.cc: Replaced "Gnome Partition Editor based on libparted" with "Gnome Partition Editor"
	* src/xfs.cc: fixed small error with creation of xfs filesystems (adrighem)

2004-12-17 Bart Hakvoort  <gparted@users.sf.net>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: Removed 'deep_scan' flag. From now on all scans are 'deep scans'.
	* include/Win_GParted.h,
	  src/Win_GParted.cc: Gui is now loaded before anything else. (#161054)

2004-12-17 Bart Hakvoort  <gparted@users.sf.net>

	* src/Win_GParted.cc: fixed bug with enabling/disabling 'copy' in menus.
	* src/ext2.cc,
	  src/ext3.cc: added missing check while deciding to disable/enable copy feature.

2004-12-17 Bart Hakvoort  <gparted@users.sf.net>

	* src/GParted_Core.cc: Only peform partable re-read check if at least one partition on a device is mounted.

2004-12-15 Bart Hakvoort  <gparted@users.sf.net>

	* some minor internal codechanges, which should save a few bytes of mem here and there.
	  (i was in a nitpicking mood :P )

2004-12-15 Bart Hakvoort  <gparted@users.sf.net>

	* Gparted_Core::get_fs now returns a const reference.
	* in copy and resizedialog filesystems with MAX set now have a max size of MAX - one cylinder .

2004-12-15 Bart Hakvoort  <gparted@users.sf.net>

	* (all filesystem classes): fixed bug with thousand separator (#161362).
	* ext2.cc,
	  ext3.cc: fixed bug with incorrect used/unused space after copying.

2004-12-15 Bart Hakvoort  <gparted@users.sf.net>

	* Added dialog (accessable from 'gparted' menu) which shows supported operations for the various filesystems.
	  I plan to put some more info in it, like what is missing etc..

2004-12-15 Bart Hakvoort  <gparted@users.sf.net>

	* src/Dialog_Partition_Copy: fixed small error with incorrect display of used space and did some cleanups.

2004-12-15 Bart Hakvoort  <gparted@users.sf.net>

	* Refined checks for functionality a bit. e.g. even if a filesystem can't be read, it's still possible to grow it 
	  (but shrinking gets disabled). Also removed that stupid grow_only flag from Utils.h and reordered Win_GParted::Set_Valid_Operations()

2004-12-14 Bart Hakvoort  <gparted@users.sf.net>

	* added support for jfs (create, copy, grow) and hfs (create, copy)
	* fixed a bug in copying xfs filesystems.
	* fixed a number of small bugs/annoying issues.
	* I guess this also means gparted now supports more filesystems then any other (OSS) partitionmanager.. (lekker belangrijk ;) )

2004-12-13 Bart Hakvoort  <gparted@users.sf.net>

	* Added support for xfs. this means creating and growing xfs filesystems. Shrinking requires some hacking with dump_xfs etc..
	  i'll add that at a later point. :)

2004-12-13 Bart Hakvoort  <gparted@users.sf.net>

	* Replaced boolean 'resize' with 'shrink' and 'grow'. It seems some filesystems only support growing (e.g. xfs) so i need
	  two flags to control the behaviour of the filesystemclasses.

2004-12-13 Bart Hakvoort  <gparted@users.sf.net>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: Removed a couple of unnecesarry variables. (saves a few bytes in memory =) )

2004-12-12 Bart Hakvoort  <gparted@users.sf.net>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: modified layoutscan a bit for improved handling of metadata.
	* include/Operation.h,
	  src/Operation.cc: modified Insert_Unallocated() to prevent potential crasher.

2004-12-12 Bart Hakvoort  <gparted@users.sf.net>

	* The fixes from 12-09 unearthed a number of long forgotten issues and annoyances. Hopefully they're all resolved now.

2004-12-09 Bart Hakvoort  <gparted@users.sf.net>

	* Fixed a bunch of issues with min. and max. sizes of filesystems.

2004-12-10  Gil Osher  <dolfin@rpg.org.il>

	* configure.in: Added 'he' (Hebrew) to ALL_LINGUAS.

2004-12-09 Bart Hakvoort  <gparted@users.sf.net>

	* src/fat16: use mkdosfs -F16 instead of libparted to create fat16 filesystems 

2004-12-09 Bart Hakvoort  <gparted@users.sf.net>

	 * src/ext2.cc,
	   src/ext3.cc,
	   src/ntfs.cc,
	   src/reiserfs.cc: added LANG=C to the commands which read the used space of a filesystem. This prevent errors with some locales.

2004-12-09 Bart Hakvoort  <gparted@users.sf.net>

	* added MIN and MAX to filesystemstruct to set min. and max sizes of a filesystem. So instead of checking per filesystem
	  i now simply check the fs.MIN or fs.MAX. this results in less and cleaner code. Also this will come in handy when adding
	  support for new filesystems. (This also fixed several minor bugs with filesystemsizes and gained some improvement in resizer
	  performance)

2004-12-07 Bart Hakvoort  <gparted@users.sf.net>

	* src/VBox_VisualDisk.cc: placed a small (2px) border around the legend.

2004-12-08  Dmitry G. Mastrukov  <dmitry@taurussoft.org>

	* configure.in: Added Russian to ALL_LINGUAS.

2004-12-07 Bart Hakvoort  <gparted@users.sf.net>

	* README: updated description to reflect current situation.

2004-12-07 Amanpreet Singh Alam <amanpreetalam@yahoo.com>

	* configure.in: pa is aeed ALL_LINGUAS

2004-12-03 Bart Hakvoort  <gparted@users.sf.net>

	* src/fat16.cc,
	  src/fat32.cc: added correct check for availability of 'dosfsck'
	* configure.in: bumped to 0.0.7  YAY! ;)

2004-12-03 Bart Hakvoort  <gparted@users.sf.net>

	* src/GParted_Core.cc: When ( ! deep_scan ) now only one device is scanned (first found one). Shaves off a couple of millisec from startuptime |-)
	* src/Win_GParted.cc: Fixed small bug with removable devices and the devicemenu. Also fixed redundant calling of 2 functions.

2004-12-02 Bart Hakvoort  <gparted@users.sf.net>

	* src/Win_GParted.cc,
	  src/TreeView_Detail.cc: fixed a minor annoying with treeviewdrawing.(Really minor ;) )

2004-12-01 Bart Hakvoort  <gparted@users.sf.net>

	* src/Dialog_Partition_New.cc,
	  src/Frame_Resizer_Base.cc: Fixed a crasher with the New Partition Dialog (thanks to Tino for reporting)

2004-11-30 Bart Hakvoort  <gparted@users.sf.net>

	* src/fat16.cc,
	  src/fat32.cc: implemented correct filesystemcheck using dosfsck.

2004-11-30 Bart Hakvoort  <gparted@users.sf.net>

	* include/FileSystem.h,
	  src/FileSystem.cc: Execute_Command() now returns exit status of executed command
	* the filesystemclasses: returnvalue (bool) is now set according to the return status of the command
	
2004-11-29 Bart Hakvoort  <gparted@users.sf.net>

	* src/GParted_Core.cc: It seemed some kernels remove and re-add blockdevicepaths after the commit_to_os. This caused trouble at some points
	  where the path was required. I decided to sleep 1 sec after each scan. So rescanning devices will take 1 extra second per device :|
	* src/Win_GParted.cc: fixed typo in string.

2004-11-29 Bart Hakvoort  <gparted@users.sf.net>

	* Every devicescan now tests on beforehand if the kernel is able to reread the partitiontable. If the kernel is unable to do
	  this, i disallow most operations. This may seem weird and even a bad thing to do, but the fact is it protects
	  the innocent user from a lot of potential damage. Till the linuxkernel is able to reread partitiontables no matter what, this seems
	  to be the best option. Of course a dialog with information will popup whenever such a situation is encountered.
	  In a next release i might consider adding an 'advanced mode' for users who know what they're doing.

2004-11-28  Alessio Frusciante  <algol@firenze.linux.it>

	* configure.in: Added "it" (Italian) to ALL_LINGUAS. 

2004-11-28 Bart Hakvoort  <gparted@users.sf.net>

	* src/Dialog_Partition_New.cc: selecting 'extended partition' twice caused a segfault. i cannot believe i didn't detect this bug earlier :| Fixed.
	  also made it possible to create an unformatted partition.
	* src/GParted_Core.cc: backend support for creating partition without filesystem (unformatted).

2004-11-28 Bart Hakvoort  <gparted@users.sf.net>

	* src/Dialog_Disklabel.cc,
	  src/GParted_Core.cc: minor stringchanges (typos)

2004-11-28 Bart Hakvoort  <gparted@users.sf.net>

	* src/Makefile.am: sorted sourcefiles alphabetically, i know, pretty useless, but i like it :P

2004-11-28 Bart Hakvoort  <gparted@users.sf.net>

	* Harddisks without disklabel are now properly initizalized and shown in the menu. When one tries to create a new partition on
	  such a disk a dialog pops up with some blabla about disklabels and offers to create a disklabel. sweet :P (special thanks to mantiena-baltix 
	  for bringing this issue to my attention)
	* fixed minor annoyance with refreshing detailed deviceinfo after a 'deep refresh'

2004-11-24 Bart Hakvoort  <gparted@users.sf.net>

	* src/Dialog_Partition_Resize_Move.cc: fixed small bug with resizing and lower limits.
	* src/GParted_Core.cc: use ped_file_system_clobber before creating a filesystem on a partition.
	* src/Win_GParted.cc: pasting is now only allowed if unallocated >= copied partition + cylindersize.
	  Instead of dividing length device by amount of cylinders i use heads * sectors/track to get cylindersize.
	  Changed device busy warning a bit to more decent english (adamw)
	* src/ntfs.cc: readded '-Q' to mkntfs. The error about an 'unknown filesystem' was related to detection problems and not to
	  faulty creation of the filesystem. Should be solved anyway by implementing ped_file_system_clobber.
	  Also removed ntfsfix since it didn't do anything relevant. Instead i use ntfsresize, because this contains relevant checks (szaka)

2004-11-24 Bart Hakvoort  <gparted@users.sf.net>

	* src/TreeView_Detail.cc: renamed columnheader from 'Type' to 'Filesystem'. Dunno why it was called 'Type' (maybe some PM legacy =)  )
	* src/Win_GParted.cc: Made device busy warning a bit more sensible.

2004-11-24 Bart Hakvoort  <gparted@users.sf.net>

	* include/Utils.h,
	  src/GParted_Core.cc,
	  src/Partition.cc,
	  src/TreeView_Detail.cc,
	  src/VBox_VisualDisk.cc: marked some strings for translation ('unknown', 'used', 'unused') and replaced lowercase 'unallocated' with '---'.

2004-11-24 Bart Hakvoort  <gparted@users.sf.net>

	* include/GParted_Core.h,
	  src/GParted_Core.cc: fixed nasty error with resizing 'fixed-start filesystems'.
	* src/Partition.cc: added a check to prevent unused space from being bigger then total space.
	* src/ntfs.cc: removed -Q from mkntfs. -Q bypassed some safetychecks to gain performance and (so i heard later) also had a
	  tendency of failing ;) (Adrighem)

2004-11-23 Bart Hakvoort  <gparted@users.sf.net>

	* src/Dialog_Partition_New.cc,
	  src/Win_GParted.cc: Fixed some errors with 'unknown' filesystem. + some cosmetics

2004-11-23 Bart Hakvoort  <gparted@users.sf.net>

	* include/GParted_Core.h,
	  src/GParted_Core.cc,
	  src/Makefile.am,
	  include/ntfs.h,
	  src/ntfs.cc: added full ntfs support. (couldn't test it very well due to the absence of a win32 box :P )

2004-11-22 Bart Hakvoort  <gparted@users.sf.net>

	* include/Utils.h: fixed crasher with unknown filesystems.

2004-11-22 Bart Hakvoort  <gparted@users.sf.net>

	* src/GParted_Core.cc: cosmetics
	* src/reiserfs.cc: make use of real commands instead of their symlinks. fixed copy of reiserfs filsystem
	  (the new size wasn't reported correctly)

2004-11-22 Bart Hakvoort  <gparted@users.sf.net>

	* src/ext2.cc,
	  src/ext3.cc: removed ':' from Blocksize scan.
	* src/reiserfs.cc: dumped progsreiserfs. From now on gparted uses the official namesystools (reiserfsprogs)
	  this resulted in much more reliable creation en resizing of reiserfs filesystems.

2004-11-21 Bart Hakvoort  <gparted@users.sf.net>

	* Again way too many chances to create a detailed entry (i'm glad i'm the only dev atm :P ).
	  Resizing of ext2/3 works perfect now. I've even tested it on the partition holding my SG seasons =)
	  Implemented checking of filesystems (only internally used atm).
	  Done some overall tweaking, finetuning etc.. release 0.0.7 is getting shape.

2004-11-19 Bart Hakvoort  <gparted@users.sf.net>

	* include/Device.h,
	  src/Device.cc: Removed bool Get_Any_Busy() in favor of public bool busy which is set in gparted_core.
	  This also fixed a small bug with incorrect mountdetection of logical partitions.
	  Also added a Reset() function to properly reset the contents of a device. to zero/empty .
	* include/GParted_Core.h,
	  src/GParted_Core.cc: 'busyness' of a device is now determined in get_devices().
	  Renamed get_partitions() to set_device_partitions to reflect its proper function.
	  When a new partition is created to contain a copied filesystem the size is now properly set. This fixes
	  a very annoying bug which no one knew about except for me =) .
	* src/Win_GParted.cc: use boolean busy from device instead of Get_Any_Busy() .

2004-11-17 Bart Hakvoort  <gparted@users.sf.net>

	* src/ext3.cc: availability of 'tune2fs' command wasn't detected correctly. fixed
	* src/fat32.cc: make use of dosfs tools (mkdosfs -F32) instead of libparted's Fat-creator.
	
2004-11-17 Bart Hakvoort  <gparted@users.sf.net>

	* Rewrote a large part of gparteds internal code. Filesystemssupport is now much more separated from the rest of gparted and
	  adding support for other filesystems should be a piece of cake now (hope that's true :P)
	  It still needs a lot of love, but the foundations are laid =)

2004-11-07 Bart Hakvoort  <gparted@users.sf.net>

	* include/Operation.h,
	  src/Operation.cc: make use of reference arguments instead of return values in some functions.
	  Also fixed a small bug with deletion of a virtual (new) logical partition.
	* include/VBox_VisualDisk.h,
	  src/VBox_VisualDisk.cc: logical filesystems weren't shown in the legend, fixed.
	* src/Frame_Resizer_Base.cc: fixed small bug with custom cursors.
	* src/TreeView_Detail.cc: removed obsolete, already commented code.
	* src/Win_GParted.cc: make use of reference arguments instead of return values in some functions. (see Operation)

2004-11-06 Bart Hakvoort  <gparted@users.sf.net>

	* include/Win_GParted.h,
	  src/Win_GParted.cc: added umount option. Also include unistd.h to solve some issues with gcc 3.2.x

2004-11-06 Bart Hakvoort  <gparted@users.sf.net>

	* instead of listing all partition in one list, logical partitions are now stored in a sublist in extended partition object.
	This makes partitionhandling in gparted more natural and transparant. It also allowed me to clean up this ugly Operation class ;)

2004-10-31 Bart Hakvoort  <gparted@users.sf.net>

	* include/Partition.h,
	  src/Partition.cc: removed color_string
	* src/VBox_VisualDisk.cc,
	  src/TreeView_Detail.cc: replaced color_string with Get_Color from Utils.h

2004-10-30 Bart Hakvoort  <gparted@users.sf.net>

	* configure.in: added checks for libuuid and libdl. Also refined libparted check a bit.
	* include/Partition.h,
	  src/Partition.cc: removed Get_Color()
	* include/Utils.h: added inline Glib::ustring Get_Color( const Glib::ustring & filesystem )
	* src/Dialog_Partition_New.cc,
	  src/Win_GParted.cc: make use of Get_Color from Utils.h
	* src/Device.cc: fixed a crasher with (at least) pl_PL locale.

2004-10-25 Vincent van Adrighem  <adrighem@gnome.org>

	* debian/*: Added a debian subdir. This dir contains buildscripts
	    for debian.

2004-10-22 Bart Hakvoort  <gparted@users.sf.net>

	* configure.in: bumped to version 0.0.6

2004-10-22 Bart Hakvoort  <gparted@users.sf.net>

	* configure.in: libpartedcheck now looks for correct version number (finally i'll be rid off those stupid bugreports =) )

2004-10-22 Bart Hakvoort  <gparted@users.sf.net>

	* src/Dialog_Partition_Info.cc: codecleanups.. Hey! i was bored :P

2004-10-22 Bart Hakvoort  <gparted@users.sf.net>

	* src/Device.cc: removed libparted messagesdialog. instead, show them on the console. They proved to be pretty useless.
	* src/Win_GParted.cc: fixed crasher when loading gparted (or refresh devices) while there's a (audio) cd in the cdrom-drive.

2004-10-21 Bart Hakvoort  <gparted@users.sf.net>

	* configure.in: modernized use of AM_INIT_AUTOMAKE a bit (according to 
	http://www.gnu.org/software/automake/manual/html_node/Public-macros.html#Public%20macros)

2004-10-21 Bart Hakvoort  <gparted@users.sf.net>

	* include/Dialog_Partition_Resize_Move.h,
	  src/Dialog_Partition_Resize_Move.cc: fixed some bugs with minimum size of resizable partition + some codecleanups.

2004-10-20 Bart Hakvoort  <gparted@users.sf.net>

	* src/Dialog_Base_Partition.cc (Get_New_Partition): Tweaked resizingbehaviour a bit. This solved some minor annoyances.

2004-10-18 Bart Hakvoort  <gparted@users.sf.net>

	* src/Dialog_Partition_New.cc: changed width of optionmenus from 150 to 160 pixels. (in certain langs the strings didn't fit)
	* src/VBox_VisualDisk.cc: used/unused legend doesn't have to show up if there's only linux-swap. 

2004-10-17 Bart Hakvoort  <gparted@users.sf.net>

	* src/Dialog_About.cc (Show_Credits): Fixed Gtk-Warning with unknown pango markup and placed a 5 pixel-border around 
	translators credits.

2004-10-16 Bart Hakvoort  <gparted@users.sf.net>
	
	* src/Device.cc: when the libary of an optional filesystem (atm only reiserfs) wasn't installed, every scan printed an error 
	in the console (df couldn't find the partition listed). Fixed by checking if partition is busy before using df.

2004-10-16 Bart Hakvoort  <gparted@users.sf.net>
	
	* src/Dialog_Progress.cc: changed dialogwidth from 500 to 600 pixels. (icw certain languages the operation didn't fit)

2004-10-16 Bart Hakvoort  <gparted@users.sf.net>

	* include/Win_GParted.h,
	  src/Win_GParted.cc: First load gui and then scan devices, this resulted in way faster startup and is more satisfactory (imho)
	  Also did some minor code cleanups and rearranged some functions needed for applying operations.
	* src/Dialog_Progress.cc: few minor code cleanups.

2004-10-14 Bart Hakvoort  <gparted@users.sf.net>

	* include/Operation.h,
	  src/Operation.h: minor (code) change in displaying errormessage. Made Apply_Resize_Move_Extended_To_Visual() a bit more
	  readable (and thus debugable). This whole class could still use a soft, caring hand though :P
	* src/Device.cc: Unallocate space < 1MB wasn't filtered out. fixed.
	* src/Partition.cc (Set_Used): Unused wasn't set properly. fixed. 

2004-10-11 Bart Hakvoort  <gparted@users.sf.net>

	* src/Win_GParted.cc: i just can't stop tweaking the operationslist =)

2004-10-11 Bart Hakvoort  <gparted@users.sf.net>

	* src/Device.cc (Read_Disk_Layout): logic unallocated space wasn't read correctly, fixed.
	* include/Win_GParted.h: added open_operationslist() and menu_view_operations() .
	* src/Win_GParted.cc: tweaked operationlist behaviour a bit. Also added 'Operations" toggle-item to View menu.

2004-10-11 Bart Hakvoort  <gparted@users.sf.net>

	* src/Device.cc (Read_Disk_Layout): Again =) Decided to use switch ( blahblah ) instead of if else statements.

2004-10-11 Bart Hakvoort  <gparted@users.sf.net>

	* src/Device.cc (Read_Disk_Layout): some internal codechanges. Looks a bit cleaner now.

2004-10-11 Bart Hakvoort  <gparted@users.sf.net>

	* include/Device.h,
	  src/Device.cc: made 'deep-scan' optional in Read_Disk_Layout. Removed obsolete (already) commented function.
	* include/Partition.h,
	  src/Partition.cc: Took used sectors out of Set() and added a Set_Used() function instead. Also added Reset() .
	* src/Dialog_Partition_New.cc: minor change to make use of the new Set() in Partition..
	* include/Win_GParted.h,
	  src/Win_GParted.cc: show pulsing progressbar while refreshing devices.

2004-10-08 Bart Hakvoort  <gparted@users.sf.net>

	* src/Partition.cc: changed color of reiserfs from blue to purple highlight. + some cosmetics.

2004-10-08 Bart Hakvoort  <gparted@users.sf.net>

	* include/Frame_Resizer_Base.h: removed inheritance from sigc::trackable. (this is already done by Glib::Object)
	* src/Dialog_Partition_Copy.cc,
	  src/Frame_Resizer_Base.cc: fixed issues with resizing reiserfs filesystems.

2004-10-08 Bart Hakvoort  <gparted@users.sf.net>

	* src/Dialog_About.cc: updated translatorcomment.

2004-10-08 Bart Hakvoort  <gparted@users.sf.net>

	* src/Dialog_Base_Partition.cc,
	  src/Dialog_Partition_Resize_Move.cc: fixed some resizing-issues with reiserfs.

2004-10-07 Bart Hakvoort  <gparted@users.sf.net>

	* src/Dialog_Base_Partition.cc,
	  src/Win_GParted.cc: removed spaces before some exclamation and question marks (thanks to Jordi Mallach)

2004-10-07 Bart Hakvoort  <gparted@users.sf.net>

	* src/Dialog_About.cc: unmarked 'Copyright' string for translation and replaced (c) with © 

2004-10-07 Bart Hakvoort  <gparted@users.sf.net>

	* include/Utils.h: added support for colored text to mk_label
	* include/VBox_VisualDisk.h,
	  include/VBox_VisualDisk.cc: use UTF-8 character ██ instead of some self-forged widget.

2004-10-06 Bart Hakvoort  <gparted@users.sf.net>

	* implemented mk_label wherever possible (means less code, improved readability)

2004-10-06  David Lodge <dave@cirt.net>

	* configure.in (ALL_LINGUAS): Added "en_GB" (British English).

2004-10-06 Bart Hakvoort  <gparted@users.sf.net>

	* lots of files =) : enabled support for reiserfs, also made filesystemsupport more 'pluggable' so it's easier to
	add support for other filesystems in the future.
	* include/Utils.h: new file containing much used functions and variables.

2004-10-06  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

	* configure.in (ALL_LINGUAS): Added "es" (Spanish).

2004-10-04  Jordi Mallach  <jordi@sindominio.net>

	* configure.in (ALL_LINGUAS): Added "ca" (Catalan).
	* autogen.sh: Don't use USE_COMMON_DOC_BUILD, as GParted doesn't
	have any GNOME documentation yet.

2004-10-02 Bart Hakvoort  <gparted@users.sf.net>

	* include/Device.h,
	  include/Dialog_Progress.h,
	  include/TreeView_Detail.h,
	  include/VBox_VisualDisk.h: removed unnecessary #include <sstream>

2004-10-02 Bart Hakvoort  <gparted@users.sf.net>

	* src/VBox_VisualDisk.cc: fixed incorrect tooltip with unallocated space

2004-10-02 Bart Hakvoort  <gparted@users.sf.net>

	* include/Dialog_Base_Partition.h,
	  src/Dialog_Base_Partition.cc: added void Set_MinMax_Text( long min, long max )
	* src/Dialog_Partition_Copy.cc: fix incorrect upper limit for fat16 in label
	* src/Dialog_Partition_New.cc: make use of this function, instead of accessing the label directly 
	* src/Dialog_Partition_Resize_Move.cc: fix incorrect upper limit for fat16 in label

2004-10-02 Bart Hakvoort  <gparted@users.sf.net>

	* removed all stringstreams from the project (they were possibly responsible for rare chrashes in certain locales)
	Note that i left 1 in include/Partition.h, this one is needed for int-->string conversions and won't pose a thread.

2004-10-01 Bart Hakvoort  <gparted@users.sf.net>

	* almost all files: cosmetics (mostly tabfixes)

2004-10-01 Bart Hakvoort  <gparted@users.sf.net>

	* src/Dialog_Partition_New.cc: marked 3 strings for translation.
	* src/Operation.cc: fixed an i18n related crasher and did some cosmetic cleanups.

2004-10-01 Bart Hakvoort  <gparted@users.sf.net>

	* src/Dialog_About.cc,
	  src/TreeView_Detail.cc: minor changes to a few strings

2004-10-01 Hendrik Brandt  <hebra@cvs.gnome.org>

	* configure.in: added "de" (German) to ALL_LINGUAS

2004-09-30 Bart Hakvoort  <gparted@users.sf.net>

	* configure.in: bumped version to 0.0.5

2004-09-30 Bart Hakvoort  <gparted@users.sf.net>

	* include/TreeView_Detail.h,
	  src/TreeView_Detail.cc: added colored squares to the tree to highlight filesystems.

2004-09-29 Bart Hakvoort  <gparted@users.sf.net>

	* .cvsignore: ignore all projectfiles 

2004-09-29 Bart Hakvoort  <gparted@users.sf.net>

	* include/Dialog_Partition_Info.h,
	  src/Dialog_Partition_Info: removed Gtk::Label * mk_label( const Glib::ustring & text )
	* include/Partition.h: added inline Gtk::Label * mk_label( const Glib::ustring & text )
	  and inline Glib::ustring num_to_str( Sector number )
	* include/Win_GParted.h,
	  src/Win_GParted.cc: fixed aligment problems with some languages in harddisk-info


2004-09-29 Bart Hakvoort  <gparted@users.sf.net>

	* src/VBox_VisualDisk.cc,
	  src/Win_GParted.cc: minor i18n related tweaks.

2004-09-29  Duarte Loreto <happyguy_pt@hotmail.com>

	* configure.in: Added Portuguese (pt) to ALL_LINGUAS.

2004-09-28 Bart Hakvoort  <gparted@users.sf.net>

	*	src/VBox_VisualDisk.cc: marked 2 minor strings for translation (is a duplicate of an existing string in POT file)
	*	src/Dialog_About.cc: made names (author/translators) selectable
	*	include/Dialog_Partition_Info.h,
		src/Dialog_Partition_Info.cc: solved some alignmentproblems which showed up in certain locales.

2004-09-28  Maxim Dziumanenko <mvd@mylinux.com.ua>

	* configure.in: Added uk to ALL_LINGUAS.

2004-09-27  Bart Hakvoort  <gparted@users.sf.net>

	*	include/Win_GParted.h,
		src/Win_GParted.cc: changed representation of hardisk info

2004-09-27  Bart Hakvoort  <gparted@users.sf.net>

	*	src/Partition.cc: marked "Unallocated" for translatation

2004-09-26  Bart Hakvoort  <gparted@users.sf.net>

	*	src/Dialog_Base_Partition.cc,
		src/	Dialog_Partition_New.cc: fixed alignment problems with some languages

2004-09-26  Bart Hakvoort  <gparted@users.sf.net>

	*	src/Win_GParted.cc: fixed bug that occured while converting the filesystem of a new partition
	*	src/Dialog_About.cc: removed "documented by" tab (didn't need it yet) and fixed alignments of button
	with some languages.

2004-09-26  Bart Hakvoort  <gparted@users.sf.net>

	*	src/Win_GParted.cc: fixed bug with check for max amount of partitions while pasting a copied partition.
	*	src/Partition.cc: changed colors of ext2, ext3 and linux-swap
	
2004-09-25  Raphael Higino  <raphaelh@cvs.gnome.org>

	*	src/Win_GParted.cc: Fixed typo bugs (word "than" written 
as "then" in two strings)

2004-09-25  Bart Hakvoort  <gparted@users.sf.net>
	*	src/Win_GParted.h,
		src/Win_GParted.cc: removed expander. The diskinfo is now always visible.
	*	src/Dialog_Partition_Info.cc: fixed small bug with overlapping text. 
	*	src/Dialog_About.cc: use VERSION instead of hardcoded numbers

2004-09-25  Bart Hakvoort  <gparted@users.sf.net>
	*	Dialog_About.cc: made "Translated by" tab a bit more sensible, also added an translator-credits string.

2004-09-25  Bart Hakvoort  <gparted@users.sf.net>
	*	Operation.h,
		Operation.cc,
		Partition.h,
		Partition.cc
		Dialog_Partition_Copy.cc,
		Dialog_Partition_Info.cc,
		Dialog_Partition_New.cc,
		Win_GParted.cc: prepared "copy of" and "New Partition" for i18n and did some cleanups on the way...
		I believe all relevant strings are now properly marked for translation.	
		
2004-09-25  Bart Hakvoort  <gparted@users.sf.net>
	*	Dialog_Progress.h,
		Operation.h,
		Partition.h,
		Win_GParted.h,
		Dialog_Base_Partition.cc,
		Dialog_Partition_Copy.cc,
		Dialog_Partition_Info.cc,
		Dialog_Partition_New.cc,
		Dialog_Partition_Resize_Move.cc,
		Dialog_Progress.cc,
		Operation.cc,
		Win_GParted.cc: changed some sentences on translators request
	*	compose,
		compose/ucompose.hpp : added composelib to provide sprintf functionality in C++ style
	*	po/POTFILES.in : added ../src/main.cc

2004-09-23  Adam Weinberger  <adamw@gnome.org>

	* configure.in: Added en_CA to ALL_LINGUAS.

2004-09-23  Bart Hakvoort  <gparted@users.sf.net>

	* configure.in,
	   include/i18n.h: fixed some problems with i18n.

2004-09-23  Raphael Higino  <raphaelh@cvs.gnome.org>

	* configure.in: Added "pt_BR" to ALL_LINGUAS.

2004-09-23  Christian Rose  <menthos@menthos.com>

	* configure.in: Added "sv" to ALL_LINGUAS.


**changes**
- replaced some 'dunglish' terms with more decent english. (Thanks to Tino Meinen)
- cleaned up autoconf stuff a bit
- gparted now gets installed in the sbin/ instead of bin/ (1023181)
- maximum amount of primary partition isn't static anymore, it gets asked from the partition table.
- lots of internal code cleanups. this improved performance and stability.
- doubleclick now invokes infodialog
- added .desktop file so gparted is accessible from GNOME/KDE menus (thanks to Stephane LOEUILLET, 1023176)

**fixes**
- sometimes creating new fat filesystems in very small spaces resulted in errors. fixed.
- use copies from buildfiles instead of symlinks to them. (Thanks to Kristof Vansant)
- when performing operations on just copied partitions, there was a chance the operation would be executed on another partition. fixed.
- fixed a rare bug that caused incorrect partitiontable display after an operation went wrong.
- some errormessages were not entirely threadsafe, fixed (hopefully :P )
- fixed annoying bug with warningdialog which pops up after performing an operation on a busy device

--------------------------------------------------------------------------

GParted-0.0.4	04 Sep 2004		:

- fixed another bug with hotpluggable stuff (usbdevices etc...)
- fixed "random" chrasher while performing actions on a device with a mounted partition.
- better alignment of information in deviceinfo and partitioninfo. (there were some problems with certain fonts)
- changed checking for filesystemlimits in new partition dialog a bit.
- fixed small bug in new partition dialog which made it possible to add fat16 partition > 1023MB
- time left in progressbar shows now minutes and seconds
- implemented copy'n paste functionality
- fixed small bug with resizer
- internal code cleanups, gained some performance
- made the operationtitles a bit more informative
- fixed bug with converting non-existent (new) partitions
- implemented new operationslist
- lots of small stuff

-------------------------------------------------------

GParted-0.0.3	26 Aug 2004		:

- and as always, lots of small fixed/changes..
- fixed bug with resizing extended partition
- fixed bug which occasionally occurred when deleting filesystems with errors on them
- fixed small bug with deleting new logical partitions while a partition with a higher number is mounted
- added read-only support for partition flags (e.g. lba, boot, etc...)
- implemented conversion between filesystems. (no big deal, all data is destroyed in the process)
- compiling/running tested on 64bits arch, went perfectly :)
- fixed another small bug with re-reading devices (optionmenu wasn't updated)
- Early check for errors on filesystem. Disable appropiate actions and explain in Info
- When a device can't be read it isn't listed anymore.

------------------------------------------------------

GParted-0.0.2	18 Aug 2004   :

- new create dialog
- far more compliant with HIG
- unallocated space now visible in treeview
- fixed bug with re-reading devices (segfault)
- fixed bug with new extended (segfault)
- a couple of other small things, fixes and improvements 

---------------------------------------------

GParted-0.0.1	12 Aug 2004   :

***FIRST RELEASE!
- Create (ext2, linux-swap, fat16, fat32)
- resize (ext2, ext3, linux-swap, fat16, fat32 )
- move	(linux-swap, fat16, fat32)
- Full operationslist with undo
- much more little stuff
- basicly working, but not tested very well
