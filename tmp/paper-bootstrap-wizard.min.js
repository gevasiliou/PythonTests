transparent = !(searchVisible = 0);
var punctuationMapObj = {
    "ά": "α",
    "έ": "ε",
    "ή": "η",
    "ί": "ι",
    "ό": "ο",
    "ύ": "υ",
    "ώ": "ω",
    "ΐ": "ι",
    "ϊ": "ι",
    "ΰ": "υ",
    "ϋ": "υ"
}
  , $validator = null
  , $validatorRecallForm = null
  , loadingInProgress = !1;
function readURL(e) {
    var t;
    e.files && e.files[0] && ((t = new FileReader).onload = function(e) {
        $("#wizardPicturePreview").attr("src", e.target.result).fadeIn("slow")
    }
    ,
    t.readAsDataURL(e.files[0]))
}
function debounce(a, o, r) {
    var s;
    return function() {
        var e = this
          , t = arguments;
        clearTimeout(s),
        s = setTimeout(function() {
            s = null,
            r || a.apply(e, t)
        }, o),
        r && !s && a.apply(e, t)
    }
}
function getPerifereiakesEnothtes() {
    $.ajax({
        url: servicesUrl.protocol + servicesUrl.ip + ":" + servicesUrl.port + servicesUrl.path + "powercutreport/getNomarxies",
        type: "GET",
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        beforeSend: function() {
            $("#position_tab_loader").fadeIn(),
            loadingInProgress = !0
        },
        success: function(e, t, a) {
            var o;
            0 != e.length ? (o = new Array,
            $.each(e, function(e, t) {
                var a = new Object;
                a.id = t.klno,
                a.text = t.peri,
                o.push(a)
            }),
            o.sort(function(e, t) {
                return e.text < t.text ? -1 : e.text > t.text ? 1 : 0
            }),
            $("#perifereiakiEnothta").select2({
                data: o,
                placeholder: "Επιλέξτε Νομό",
                allowClear: !0,
                width: "resolve"
            })) : showMessage("out_of_service")
        },
        error: function(e, t, a) {
            showMessage("out_of_service")
        },
        complete: function(e, t, a) {
            $("#position_tab_loader").fadeOut(),
            loadingInProgress = !1
        }
    })
}
function getPowerOutages(e) {
    $.ajax({
        url: servicesUrl.protocol + servicesUrl.ip + ":" + servicesUrl.port + servicesUrl.path + "powercutreport/getPowerOutagesperNE",
        type: "GET",
        data: {
            nomarxiaki_enothta_id: e.id
        },
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        beforeSend: function() {
            $("#position_tab_loader").fadeIn(),
            $("#dataTable_outages").DataTable().clear().draw(),
            loadingInProgress = !0
        },
        success: function(e, t, a) {
            0 != e.length ? (document.getElementById("no_outage_found").style.display = "none",
            document.getElementById("outages_list").style.display = "block",
            $("#dataTable_outages").DataTable().rows.add(e).draw()) : (document.getElementById("outages_list").style.display = "none",
            document.getElementById("no_outage_found").style.display = "block",
            $("#dataTable_outages").DataTable().clear().draw())
        },
        error: function(e, t, a) {
            document.getElementById("no_outage_found").style.display = "none",
            document.getElementById("outages_list").style.display = "none",
            $("#dataTable_outages").DataTable().clear().draw(),
            showMessage("out_of_service")
        },
        complete: function(e, t, a) {
            $("#position_tab_loader").fadeOut(),
            loadingInProgress = !1
        }
    })
}
function getSupplyInfo() {
    var o = !1
      , r = $("#supply_no_txtBox").val();
    $.ajax({
        url: servicesUrl.protocol + servicesUrl.ip + ":" + servicesUrl.port + servicesUrl.path + "powercutreport/getSupplyInfo",
        type: "GET",
        data: {
            supply_no: r
        },
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        beforeSend: function() {
            $("#supply_no_tab_loader").fadeIn(),
            document.getElementById("supply_no_info").style.display = "inline",
            o = !(loadingInProgress = !0),
            $("#supply_no_info_text").css("color", "red")
        },
        success: function(e, t, a) {
            null != e ? e.disconnectedForDebt ? document.getElementById("supply_no_info_text").innerText = "Η παροχή " + r + " είναι κομμένη λόγω χρέους. Δεν επιτρέπεται η δήλωση βλάβης" : null != e.latestOpenFailure ? document.getElementById("supply_no_info_text").innerText = "Υπάρχει ανοιχτό αίτημα βλάβης για την παροχή " + r + ". Δεν επιτρέπεται η δήλωση νέου αιτήματος" : ($("#supply_no_info_text").css("color", "blue"),
            document.getElementById("supply_no_info_text").innerText = "Ο συμβεβλημένος με την παροχή " + r + " είναι ο/η " + e,
            o = !0) : document.getElementById("supply_no_info_text").innerText = "Ο αριθμός παροχής " + r + " δεν είναι έγκυρος"
        },
        error: function(e, t, a) {
            400 == e.status ? document.getElementById("supply_no_info_text").innerText = "Ο αριθμός παροχής " + r + " δεν είναι έγκυρος" : showMessage("out_of_service")
        },
        complete: function(e, t, a) {
            $("#supply_no_tab_loader").fadeOut(),
            loadingInProgress = !1,
            document.getElementById("supply_no_info").style.display = "inline",
            o || $("#supply_no_txtBox").val("")
        }
    })
}
function sendPIN(e) {
    var t;
    $("[name='cell']").valid() ? ($("[name='pin']").val(""),
    (t = new Object).cell = $("[name='cell']").val(),
    t.type = e,
    $.ajax({
        url: servicesUrl.protocol + servicesUrl.ip + ":" + servicesUrl.port + servicesUrl.path + "Security/sendOTP",
        type: "POST",
        data: JSON.stringify(t),
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        beforeSend: function() {
            $("#user_info_tab_loader").fadeIn(),
            loadingInProgress = !0,
            document.getElementById("user_info_pin_response").style.display = "none"
        },
        success: function(e, t, a) {
            document.getElementById("user_info_pin_response_text").innerText = 1 == e ? "Το αίτημα αποστολής PIN ολοκληρώθηκε. Το PIN ισχύει για 5 λεπτά." : "Παρουσιάστηκε πρόβλημα στην αποστολή PIN."
        },
        error: function(e, t, a) {
            document.getElementById("user_info_pin_response_text").innerText = "Παρουσιάστηκε πρόβλημα στην αποστολή PIN."
        },
        complete: function(e, t, a) {
            $("#user_info_tab_loader").fadeOut(),
            loadingInProgress = !1,
            document.getElementById("user_info_pin_response").style.display = "block"
        }
    })) : $validator.focusInvalid()
}
function addFailure() {
    var e, t, a;
    $("#reportForm").valid() ? ((e = new Object).supply_no = $("#supply_no_txtBox").val().toUpperCase(),
    e.real_estate_usage = replaceAll($("[name='real_estate_usage']").val(), punctuationMapObj).toUpperCase(),
    e.created = moment($("#created").val(), "DD/MM/YYYY hh:mm a", "el"),
    e.name = replaceAll($("[name='lastname']").val(), punctuationMapObj).toUpperCase() + " " + replaceAll($("[name='firstname']").val(), punctuationMapObj).toUpperCase(),
    e.cell = $("[name='cell']").val(),
    e.email = $("[name='email']").val(),
    e.comments = replaceAll($("[name='comments']").val(), punctuationMapObj).toUpperCase(),
    e.dangerous = $("[name='dangerous_flag']").is(":checked"),
    e.is_general_failure = $("[name='is_general_failure']").is(":checked"),
    e.assignments = [],
    (a = new Object).pin = $("[name='pin']").val(),
    a.cell = $("[name='cell']").val(),
    e.otp = a,
    e.is_user_of_supply = $("[name='is_supply_no_user']").val(),
    t = [],
    (a = new Object).id = 0,
    a.answer = $("[name='questions_isolated_1']").val(),
    t.push(a),
    (a = new Object).id = 1,
    a.answer = $("[name='questions_isolated_2']").val(),
    t.push(a),
    (a = new Object).id = 2,
    a.answer = $("[name='questions_isolated_3']").val(),
    t.push(a),
    e.questions = t,
    $.ajax({
        url: servicesUrl.protocol + servicesUrl.ip + ":" + servicesUrl.port + servicesUrl.path + "powercutreport/insertFailure",
        type: "POST",
        data: JSON.stringify(e),
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        beforeSend: function() {
            $("#user_info_tab_loader").fadeIn()
        },
        success: function(e, t, a) {
            0 < e ? swal({
                title: "Επιτυχής καταχώρηση!",
                text: "Το αίτημά σας καταχωρίστηκε με αριθμό " + e + " και προωθήθηκε στις τεχνικές υπηρεσίες του ΔΕΔΔΗΕ προς επίλυση.",
                type: "success",
                confirmButtonText: "OK",
                allowOutsideClick: !1
            }).then(function(e) {
                window.open("https://www.deddie.gr", "_self").focus()
            }) : showMessage("out_of_service")
        },
        error: function(e, t, a) {
            403 == e.status ? "{error=no.active.otp.for.cell}" == e.responseText ? showMessage("no.active.otp.for.cell") : "{error=is.disconnected.for.debt}" == e.responseText ? showMessage("is.disconnected.for.debt") : "{error=failure.recovery.in.progress}" == e.responseText && showMessage("failure.recovery.in.progress") : 400 == e.status ? "{error=no.supply.found}" == e.responseText && showMessage("supply_not_found") : showMessage("out_of_service")
        },
        complete: function(e, t, a) {
            $("#user_info_tab_loader").fadeOut()
        }
    })) : $validator.focusInvalid()
}
function recallFailure() {
    var o, e;
    $("#recallForm").valid() ? ((o = new Object).supply_no = $("#supply_no_recall_txtBox").val().toUpperCase(),
    o.id = $("#failure_id").val(),
    o.network_hazard = $("#network_hazard").val(),
    (e = new Object).pin = $("[name='pin']").val(),
    e.cell = $("[name='cell']").val(),
    o.otp = e,
    $.ajax({
        url: servicesUrl.protocol + servicesUrl.ip + ":" + servicesUrl.port + servicesUrl.path + "powercutreport/recallFailure",
        type: "PUT",
        data: JSON.stringify(o),
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        beforeSend: function() {
            $("#user_info_tab_loader").fadeIn()
        },
        success: function(e, t, a) {
            0 < e ? swal({
                title: "Επιτυχής ανάκληση!",
                text: "Η δήλωση " + (1 == o.network_hazard ? "επικίνδυνης κατάστασης στο δίκτυο" : "βλάβης σας") + " με Α/Α " + o.id + " ανακλήθηκε. Ευχαριστούμε για την ενημέρωση.",
                type: "success",
                confirmButtonText: "OK",
                allowOutsideClick: !1
            }).then(function(e) {
                window.open("https://www.deddie.gr", "_self").focus()
            }) : showMessage("out_of_service")
        },
        error: function(e, t, a) {
            403 == e.status ? "{error=no.active.otp.for.cell}" == e.responseText && showMessage("no.active.otp.for.cell") : 400 == e.status ? "{error=parameters.are.missing}" == e.responseText ? showMessage("parameters.are.missing") : "{error=no.failure.found}" == e.responseText ? showMessage("no.failure.found") : "{error=supply_no.does.not.match.failure_id}" == e.responseText ? showMessage("supply_no.does.not.match.failure_id") : "{error=supply.not.found}" == e.responseText ? showMessage("supply_not_found") : "{error=recall.is.not.allowed}" == e.responseText ? showMessage("recall.is.not.allowed") : "{error=failure.is.already.recalled}" == e.responseText ? showMessage("failure.is.already.recalled") : "{error=only.failures.submitted.in.website.are.allowed.to.be.recalled}" == e.responseText ? showMessage("only.failures.submitted.in.website.are.allowed.to.be.recalled") : "{error=cell.does.not.match.failure_id}" == e.responseText && showMessage("cell.does.not.match.failure_id") : showMessage("out_of_service")
        },
        complete: function(e, t, a) {
            $("#user_info_tab_loader").fadeOut()
        }
    })) : $validatorRecallForm.focusInvalid()
}
function validateFailure() {
    var e = $validatorRecallForm.element("#failure_id");
    (e = $validatorRecallForm.element("#supply_no_recall_txtBox") && e) && ((e = new Object).supply_no = $("#supply_no_recall_txtBox").val(),
    e.id = $("#failure_id").val(),
    $.ajax({
        url: servicesUrl.protocol + servicesUrl.ip + ":" + servicesUrl.port + servicesUrl.path + "powercutreport/validateFailure",
        type: "POST",
        data: JSON.stringify(e),
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        beforeSend: function() {
            $("#validation_loader").fadeIn(),
            document.getElementById("supply_no_recall").style.display = "none"
        },
        success: function(e, t, a) {
            null != e && (document.getElementById("supply_no_recall_text").innerText = "Το αίτημά σας εντοπίστηκε. Ο συμβεβλημένος με την παροχή είναι ο/η " + e.lastTenantName),
            document.getElementById("supply_no_recall").style.display = "block"
        },
        error: function(e, t, a) {
            400 == e.status ? "{error=parameters.are.missing}" == e.responseText ? showMessage("parameters.are.missing") : "{error=no.failure.found}" == e.responseText ? showMessage("no.failure.found") : "{error=supply_no.does.not.match.failure_id}" == e.responseText ? showMessage("supply_no.does.not.match.failure_id") : "{error=supply.not.found}" == e.responseText ? showMessage("supply_not_found") : "{error=recall.is.not.allowed}" == e.responseText ? showMessage("recall.is.not.allowed") : "{error=failure.is.already.recalled}" == e.responseText ? showMessage("failure.is.already.recalled") : "{error=only.failures.submitted.in.website.are.allowed.to.be.recalled}" == e.responseText ? showMessage("only.failures.submitted.in.website.are.allowed.to.be.recalled") : "{error=cell.does.not.match.failure_id}" == e.responseText && showMessage("cell.does.not.match.failure_id") : showMessage("out_of_service")
        },
        complete: function(e, t, a) {
            $("#validation_loader").fadeOut()
        }
    }))
}
function getFailureType() {
    var e;
    $validatorRecallForm.element("#failure_id") && ((e = new Object).id = $("#failure_id").val(),
    $.ajax({
        url: servicesUrl.protocol + servicesUrl.ip + ":" + servicesUrl.port + servicesUrl.path + "getFailureType",
        type: "POST",
        data: JSON.stringify(e),
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        beforeSend: function() {
            $("#validation_loader").fadeIn()
        },
        success: function(e, t, a) {
            null != e && ($("#network_hazard").val(e),
            0 == e ? $("#power_supply_field").show() : $("#power_supply_field").hide())
        },
        error: function(e, t, a) {
            400 == e.status || 404 == e.status ? "{error=parameters.are.missing}" == e.responseText ? showMessage("parameters.are.missing") : "{error=no.failure.found}" == e.responseText ? showMessage("no.failure.found") : "{error=supply_no.does.not.match.failure_id}" == e.responseText ? showMessage("supply_no.does.not.match.failure_id") : "{error=supply.not.found}" == e.responseText ? showMessage("supply_not_found") : "{error=recall.is.not.allowed}" == e.responseText ? showMessage("recall.is.not.allowed") : "{error=failure.is.already.recalled}" == e.responseText ? showMessage("failure.is.already.recalled") : "{error=only.failures.submitted.in.website.are.allowed.to.be.recalled}" == e.responseText && showMessage("only.failures.submitted.in.website.are.allowed.to.be.recalled") : showMessage("out_of_service")
        },
        complete: function(e, t, a) {
            $("#validation_loader").fadeOut()
        }
    }))
}
$(document).ready(function() {
    moment.locale("el"),
    null != document.getElementsByName("real_estate_usage")[0] && (document.getElementsByName("real_estate_usage")[0].style.textTransform = "uppercase"),
    null != document.getElementsByName("lastname")[0] && (document.getElementsByName("lastname")[0].style.textTransform = "uppercase"),
    null != document.getElementsByName("firstname")[0] && (document.getElementsByName("firstname")[0].style.textTransform = "uppercase"),
    null != document.getElementsByName("comments")[0] && (document.getElementsByName("comments")[0].style.textTransform = "uppercase"),
    $('[rel="tooltip"]').tooltip(),
    $.validator.addMethod("length8or11", function(e, t) {
        return 8 === e.length || 11 === e.length
    }, "Ο αριθμός παροχής αποτελείται από 8 ή 11 ψηφία"),
    $("#created").datetimepicker({
        locale: "el"
    }),
    $("#created").on("dp.change", function(e) {
        $("#created").data("DateTimePicker").maxDate(moment()),
        $("#created").data("DateTimePicker").minDate(moment().subtract(6, "months"))
    }),
    getPerifereiakesEnothtes(),
    $("#perifereiakiEnothta").on("select2:select", function(e) {
        getPowerOutages(e.params.data)
    }),
    $("#supply_no_txtBox").change(function() {
        $("[name='supply_no_txtBox']").valid() && getSupplyInfo()
    }),
    $("#failure_id").change(function() {
        $("#supply_no_recall_txtBox").val(""),
        $("#supply_no_txtBox").val(""),
        $("#network_hazard").val(""),
        $("#power_supply_field").hide(),
        getFailureType()
    }),
    $("#supply_no_recall_txtBox").change(function() {
        validateFailure()
    }),
    $validator = $("#reportForm").validate({
        success: "valid",
        rules: {
            perifereiakiEnothta: {
                required: !0
            },
            supply_no_txtBox: {
                required: !0,
                digits: !0,
                length8or11: !0
            },
            is_supply_no_user: {
                required: !0
            },
            comments: {
                required: function(e) {
                    return $("[name='dangerous_flag']").is(":checked")
                }
            },
            created: {
                required: !0
            },
            real_estate_usage: {
                required: !0
            },
            questions_isolated_1: {
                required: !0
            },
            questions_isolated_2: {
                required: !0
            },
            questions_isolated_3: {
                required: !0
            },
            firstname: {
                required: !0,
                minlength: 3
            },
            lastname: {
                required: !0,
                minlength: 3
            },
            cell: {
                required: !0,
                digits: !0,
                minlength: 10,
                maxlength: 10
            },
            pin: {
                required: !0,
                digits: !0,
                minlength: 6,
                maxlength: 6
            },
            email: {
                email: !0
            }
        },
        messages: {
            perifereiakiEnothta: {
                required: "Το πεδίο είναι υποχρεωτικό"
            },
            supply_no_txtBox: {
                required: "Το πεδίο είναι υποχρεωτικό",
                digits: "Παρακαλώ εισάγετε μόνο αριθμούς"
            },
            is_supply_no_user: {
                required: "Το πεδίο είναι υποχρεωτικό"
            },
            comments: {
                required: "Το πεδίο είναι υποχρεωτικό"
            },
            created: {
                required: "Το πεδίο είναι υποχρεωτικό"
            },
            real_estate_usage: {
                required: "Το πεδίο είναι υποχρεωτικό"
            },
            questions_isolated_1: {
                required: "Το πεδίο είναι υποχρεωτικό"
            },
            questions_isolated_2: {
                required: "Το πεδίο είναι υποχρεωτικό"
            },
            questions_isolated_3: {
                required: "Το πεδίο είναι υποχρεωτικό"
            },
            firstname: {
                required: "Το πεδίο είναι υποχρεωτικό",
                minlength: "Παρακαλώ εισάγετε περισσότερα από 3 γράμματα"
            },
            lastname: {
                required: "Το πεδίο είναι υποχρεωτικό",
                minlength: "Παρακαλώ εισάγετε περισσότερα από 3 γράμματα"
            },
            cell: {
                required: "Το πεδίο είναι υποχρεωτικό",
                digits: "Παρακαλώ εισάγετε μόνο αριθμούς",
                minlength: "Παρακαλώ εισάγετε 10 ψηφία",
                maxlength: "Παρακαλώ εισάγετε 10 ψηφία"
            },
            pin: {
                required: "Το πεδίο είναι υποχρεωτικό",
                digits: "Παρακαλώ εισάγετε μόνο αριθμούς",
                minlength: "Παρακαλώ εισάγετε 6 ψηφία",
                maxlength: "Παρακαλώ εισάγετε 6 ψηφία"
            },
            email: {
                email: "Παρακαλώ εισάγετε έγκυρη διεύθυνση email"
            }
        }
    }),
    $validatorRecallForm = $("#recallForm").validate({
        rules: {
            failure_id: {
                required: !0,
                digits: !0
            },
            supply_no_recall_txtBox: {
                required: !0,
                digits: !0,
                length8or11: !0
            },
            cell: {
                required: !0,
                digits: !0,
                minlength: 10,
                maxlength: 10
            },
            pin: {
                required: !0,
                digits: !0,
                minlength: 6,
                maxlength: 6
            }
        },
        messages: {
            failure_id: {
                required: "Το πεδίο είναι υποχρεωτικό",
                digits: "Παρακαλώ εισάγετε μόνο αριθμούς"
            },
            supply_no_recall_txtBox: {
                required: "Το πεδίο είναι υποχρεωτικό",
                digits: "Παρακαλώ εισάγετε μόνο αριθμούς"
            },
            cell: {
                required: "Το πεδίο είναι υποχρεωτικό",
                digits: "Παρακαλώ εισάγετε μόνο αριθμούς",
                minlength: "Παρακαλώ εισάγετε 10 ψηφία",
                maxlength: "Παρακαλώ εισάγετε 10 ψηφία"
            },
            pin: {
                required: "Το πεδίο είναι υποχρεωτικό",
                digits: "Παρακαλώ εισάγετε μόνο αριθμούς",
                minlength: "Παρακαλώ εισάγετε 6 ψηφία",
                maxlength: "Παρακαλώ εισάγετε 6 ψηφία"
            }
        }
    }),
    $(".wizard-card").bootstrapWizard({
        tabClass: "nav nav-pills",
        nextSelector: ".btn-next",
        previousSelector: ".btn-previous",
        onNext: function(e, t, a) {
            return $("#reportForm").valid() ? !loadingInProgress && void 0 : ($validator.focusInvalid(),
            !1)
        },
        onInit: function(e, t, a) {
            var o = t.find("li").length;
            $width = 100 / o,
            t.find("li").css("width", $width + "%")
        },
        onTabClick: function(e, t, a) {
            return !1
        },
        onTabShow: function(e, t, a) {
            var o = t.find("li").length
              , r = a + 1
              , t = t.closest(".wizard-card");
            o <= r ? ($(t).find(".btn-next").hide(),
            $(t).find(".btn-finish").show()) : ($(t).find(".btn-next").show(),
            $(t).find(".btn-finish").hide());
            o = (o = 100 / o) * a + o / 2;
            t.find($(".progress-bar")).css({
                width: o + "%"
            }),
            t.find($(".wizard-card .nav-pills li.active a .icon-circle")).addClass("checked")
        }
    }),
    $("#wizard-picture").change(function() {
        readURL(this)
    }),
    $('[data-toggle="wizard-radio"]').click(function() {
        wizard = $(this).closest(".wizard-card"),
        wizard.find('[data-toggle="wizard-radio"]').removeClass("active"),
        $(this).addClass("active"),
        $(wizard).find('[type="radio"]').removeAttr("checked"),
        $(this).find('[type="radio"]').attr("checked", "true")
    }),
    $('[data-toggle="wizard-checkbox"]').click(function() {
        $(this).hasClass("active") ? ($(this).removeClass("active"),
        $(this).find('[type="checkbox"]').removeAttr("checked")) : ($(this).addClass("active"),
        $(this).find('[type="checkbox"]').attr("checked", "true"))
    }),
    $(".set-full-height").css("height", "auto");
    $("#dataTable_outages").DataTable({
        bProcessing: !0,
        responsive: !0,
        language: {
            sProcessing: "Επεξεργασία...",
            sLengthMenu: "Δείξε _MENU_ εγγραφές",
            sZeroRecords: "Δεν βρέθηκαν εγγραφές",
            sInfo: "Δείχνοντας _START_ εως _END_ από _TOTAL_ εγγραφές",
            sInfoEmpty: "Δείχνοντας 0 εως 0 από 0 εγγραφές",
            sInfoFiltered: "(φιλτραρισμένες από _MAX_ συνολικά εγγραφές)",
            sInfoPostFix: "",
            sSearch: "Αναζήτηση:",
            sUrl: "",
            oPaginate: {
                sFirst: "Πρώτη",
                sPrevious: "Προηγούμενη",
                sNext: "Επόμενη",
                sLast: "Τελευταία"
            }
        },
        dom: '<"top"i>rt<"bottom"p><"clear">',
        aoColumns: [{
            mRender: function(e, t, a) {
                var o = "";
                return 0 < a.lektikoGenikonDiakoponList.length ? (o = "Περιοχές: ",
                a.lektikoGenikonDiakoponList.forEach(function(e) {
                    o += e.text + ", "
                })) : 0 < a.kallikratikiDhmotikiEnothtaList.length ? (o = "Δημ. Ενότητες: ",
                a.kallikratikiDhmotikiEnothtaList.forEach(function(e) {
                    o += e.peri + ", "
                })) : (o = "Δήμοι: ",
                a.kallikratikosOTAList.forEach(function(e) {
                    o += e.peri + ", "
                })),
                o.substring(0, o.length - 2)
            },
            defaultContent: "-"
        }, {
            mData: "end_date_announced",
            mRender: function(e, t, a) {
                return moment(a.end_date_announced).format("DD/MMM/YYYY HH:mm:ss")
            }
        }],
        aaSorting: [[1, "asc"]]
    })
});
